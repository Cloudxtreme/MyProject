---
advancedoptions:
  derived_components:
    - host
  description: advanced config options
  format:
    IGMPVersion: integer
    MLDVersion: integer
  sample_value:
    IGMPVersion: 3
    MLDVersion: 2
  type: parameter

adddvfilter:
   derived_components:
     - host
   description: add dvfilter to vm in host
   format: string
   method: AddRemDVFilterToVM
   params:
     - adddvfilter
     - adapters
   preprocess: PreProcessHashTypeAPI
   sample_value: qw(filter0:name:dvfilter-fw-1 filter0:onFailure:failOpen)
   type: action

checkhealthcheckmodule:
   derived_components:
     - host
   type: action
   description: check healthcheck module is loaded in host
   format: boolean
   sample_value: true
   params:
     - checkhealthcheckmodule
   method: CheckHealthcheckModule
   preprocess: PreProcessShiftTypeAPI

applyprofile:
  allowed_values:
    - applytasklist
    - taskfile
  derived_components:
    - host
  description: Method to apply host profile
  format: string
  method: ApplyTaskList
  params:
    - applyprofile
    - taskfile
  preprocess: PreProcessHashTypeAPI
  sample_value: applytasklist
  type: action

reboot:
  derived_components:
    - esx
    - kvm
  description: Reboot hypervisor
  format: string
  method: Reboot
  params:
    - reboot
  preprocess: PreProcessHashTypeAPI
  sample_value: yes
  type: action

cko:
  derived_components:
    - host
  description: checksum offload
  format: string
  sample_value: Checksum not offloaded
  type: parameter

compliancestatus:
  allowed_values:
    - true
    - false
  derived_components:
    - host
  description: Method to get hostprofile compliance status
  format: boolean
  method: GetComplianceStatus
  params:
    - compliancestatus
    - answerfile
    - hostprofilefile
  preprocess: PreProcessHashTypeAPI
  sample_value: true
  type: action

configurepcipassthru:
  allowed_values:
    - true
    - false
    - ignore
    - apply
  derived_components:
    - host
  description: Method to configure pcipassthru or pcipassthru config profile
  format: string
  method: ConfigurePCIPassThru
  params:
    - configurepcipassthru
    - hostprofilefile
    - id
  preprocess: PreProcessHashTypeAPI
  sample_value: true
  type: action

createprofile:
  allowed_values:
    - extractprofile
    - hostprofilefile
  derived_components:
    - host
  description: Method to create host profile on ESXi
  format: string
  method: CreateProfile
  params:
    - createprofile
    - hostprofilefile
  preprocess: PreProcessHashTypeAPI
  sample_value: extractprofile
  type: action

datastore:
  derived_components:
    - host
  description: get datastore object using datastore name
  linkedworkload: DatastoreWorkload
  method: GetDatastore
  params:
    - name
  postprocess: StoreSubComponentObjects
  preprocess: TransformSubComponentSpec
  type: component

deletenvpnetwork:
  derived_components:
    - host
  description: remove a vmknic on ESX host
  format: vdnet index
  method: RemoveNVPNetwork
  params:
    - deletenvpnetwork
  postprocess: RemoveSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1].nvpnetwork.[1]'
  type: component

deleteportgroup:
  dependency:
    - vmknic
  derived_components:
    - host
  description: Key needed to delete stadard port group
  format: vdnet index
  method: DeleteStandardPortGroup
  postprocess: RemoveSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1].portgroup.[1]'
  type: component

deletevmknic:
  dependency:
    - vmknic
  derived_components:
    - host
  description: remove a vmknic on ESX host
  format: vdnet index
  method: DeleteVmknic
  params:
    - deletevmknic
  postprocess: RemoveSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1].vmknic.[1]'
  type: component

deletevss:
  derived_components:
    - host
  description: Key needed to delete vss
  format: vdnet index
  method: DeleteVSS
  params:
    - deletevss
  postprocess: RemoveSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1].vss.[1]'
  type: component

dvfilterconfigspec:
  derived_components:
    - host
  description: 'Dvfilter config spec'
  format:
    inbound: integer
    outbound: integer
    udp: integer
    tcp: integer
    icmp: integer
  sample_value:
    inbound: 1
    outbound: 1
    udp: 0
    tcp: 12865
    icmp: 0
  type: parameter

dvfilterctl:
  derived_components:
    - host
  description: 'Control dvfilter tcp or icmp '
  format: String
  method: DVFilterCtl
  params:
    - dvfilterctl
    - dvfilterconfigspec
    - vm
    - destination_ip
  preprocess: PreProcessDVFilterConfigSpec
  sample_value: 'dvfilter-generic'
  type: action

dvfilterhostsetup:
  derived_components:
    - host
  description: 'add dvfilter in host'
  format: String
  method: DVFilterHostSetup
  params:
    - dvfilterhostsetup
    - dvfiltertype
  preprocess: PreProcessHashTypeAPI
  sample_value: 'qw(dvfilter-generici-1:add)'
  type: action

dvfiltertype:
  derived_components:
    - host
  description: 'filter type'
  format: String
  preprocess: PreProcessHashTypeAPI
  sample_value: 'slow'
  type: parameter

dvsname:
  derived_components:
    - host
  description: 'Name of VDS '
  format: vdnet index
  method: GetSwitchNameFromReference
  sample_value: 'vc.[1].vds.[1]'
  type: parameter

editprofile:
  derived_components:
    - host
  description: Method to edit host profile
  format: path
  method: EditProfileInformation
  params:
    - editprofile
    - profilepath
    - policyid
    - policyoption
    - name
    - value
    - adapter
  preprocess: PreProcessEditProfile
  sample_value: /tmp/hp.xml
  type: action

esxclivmportlistverify:
  derived_components:
    - host
  description: Key to verify esxcli for retrieving network VM port
  format: vdnet index
  method: VerifyEsxcliNetworkVMPortList
  params:
    - esxclivmportlistverify
  preprocess: PreProcessEsxcliVmPortlistVerify
  sample_value: 'vm.[1]'
  type: action

free_luns:
  derived_components:
    - host
  description: number of luns that should not be mounted
  format: interger
  sample_value: 2
  type: parameter

generateanswerfile:
  allowed_values:
    - generatetasklist
    - hostprofilefile
    - answerfile
  derived_components:
    - host
  description: Method to generate answer file
  format: string
  method: GenerateAnswerFile
  params:
    - generateanswerfile
    - hostprofilefile
    - answerfile
  preprocess: PreProcessHashTypeAPI
  sample_value: answerfile
  type: action

generatetasklist:
  allowed_values:
    - generatetasklist
    - hostprofilefile
    - answerfile
    - taskfile
  derived_components:
    - host
  description: 'Method to generate task list '
  format: string
  method: GenerateTaskList
  params:
    - generatetasklist
    - hostprofilefile
    - answerfile
    - taskfile
  preprocess: PreProcessHashTypeAPI
  sample_value: answerfile
  type: action

getdvfiltername:
  description: Get dfilter name with given dvfilter agent name
  format: String
  method: GetFilterName
  params:
    - getdvfiltername
    - vm
  preprocess: PreProcessHashTypeAPI
  type: action

hostprofilefile:
  derived_components:
    - host
  description: host profile file with absolute path
  format: path
  sample_value: /tmp/hostprofilefile
  type: parameter

hypervisor_info:
  type: parameter
  description: Hypervisor Information
  derived_components:
    - fabrichost
  method: PreProcessNestedParameters
  format:
    ip_addresses: 'ref: ip_addresses'
    os_version: 'ref: os_version'
    type: 'ESXI'
    external_id: 'ref: external_id'

ip_addresses:
  type: parameter
  descrption: IP Addresses of the host, version 4 or 6
  derived_component:
   - fabrichost
  method: GetComponentAttribute
  format: array

os_version:
  type: parameter
  description: The version of the hypervisor operating system.
  derived_component:
    - fabrichost
  format: string

host_msg_client_info:
  type: parameter
  description: Message client information used by the Host to connect to the message bus.
  derived_component:
   - fabrichost
  method: PreProcessNestedParameters
  format:
    account_name: 'hostaccountname'
    shared_secret: 'dclmskcds'

account_name:
  type: parameter
  description: Account name for the messaging client. Identifies the client on the management plane message bus.
  derived_component:
   - fabrichost
  method: GetComponentAttribute
  format: string

id:
  allowed_values:
    - 000:00:1a.0
    - 000:01:00.1
  derived_components:
    - host
  description: PCI Device Id
  format: id
  sample_value: 000:00:1a.0
  type: parameter

ipsecconfigspec:
  derived_components:
    - host
  description: config spec needed for ipsec
  format:
    direction: string
    saname: string
    spname: string
  sample_value:
    direction: out
    saname: ipsecTunnel
    spname: ipsecTCPSPOut
  type: parameter

length:
  derived_components:
    - host
  description: pktcap-uw captured packet length
  format: integer
  sample_value: 2000
  type: parameter

loaddriver:
  derived_components:
    - host
  description: Loads the specified driver
  format: vdnet index
  method: LoadDriver
  params:
    - loaddriver
    - moduleparam
  postprocess: ~
  preprocess: PreProcessLoadUnloadDriverKey
  sample_value: 'host.[1].vmnic.[1]'
  type: action

lro:
  allowed_values:
    - enable
    - disable
  derived_components:
    - host
  description: Key needed to enable/disable hw/sw lro
  format: string
  method: SendLroCommand
  params:
    - lro
    - lrotype
    - adapter
    - tcpiplro
  preprocess: PreProcessLRO
  sample_value: enable
  type: action

lrotype:
  allowed_values:
    - Hw
    - Sw
  derived_components:
    - host
  description: Type of LRO to be set. Hw or Sw
  format: string
  sample_value: Hw
  type: parameter

maintenance:
  allowed_values:
    - 0
    - 1
  derived_components:
    - host
  description: Option to put host under maintenance mode
  format: boolean
  sample_value: 0
  type: parameter

maintenancemode:
  allowed_values:
    - true
    - false
  derived_components:
    - host
  description: 'Enable or disable the maintenance mode of the system'
  format: boolean
  method: SetMaintenanceMode
  params:
    - maintenancemode
  preprocess: PreProcessShiftTypeAPI
  sample_value: true
  type: action

maintenancemodestatus:
  allowed_values:
    - true
    - false
  derived_components:
    - host
  description: Method to get maintenancemode require status
  format: boolean
  method: GetMaintenanceModeRequireStatus
  params:
    - maintenancemodestatus
    - answerfile
    - hostprofilefile
  preprocess: PreProcessHashTypeAPI
  sample_value: true
  type: action

maxports:
  derived_components:
    - host
  description: Method to compare active ports and maxport
  format: integer
  method: MaxPortsCheck
  params:
    - maxports
  preprocess: PreProcessShiftTypeAPI
  sample_value: 500
  type: action

check_activedvports:
  derived_components:
    - host
  description: Method to check active DVports
  format: integer
  method: ActiveDVPortsCheck
  params:
    - check_activedvports
  preprocess: PreProcessShiftTypeAPI
  sample_value: 5
  type: action

maxvfs:
  allowed_values:
    - 16
    - max
  derived_components:
    - host
  description: Value of maxvfs for Sriov
  format: integer
  method: ~
  sample_value: max
  type: parameter

moduleparam:
  derived_components:
    - host
  description: Parameters to be passed while loading a module
  format: string
  method: PreProcessModuleParam
  sample_value: RSS=4::4
  type: parameter

netstack:
  derived_components:
    - host
  description: Method to create local netstack instance on host
  linkedworkload: NetstackWorkload
  method: CreateTCPIPInstance
  params:
    - netstack
  postprocess: StoreSubComponentObjects
  preprocess: TransformSubComponentSpec
  type: component

nvpnetwork:
  dependency:
    - ovs
  derived_components:
    - host
  description: create a network on OVS
  linkedworkload: PortGroupWorkload
  method: CreateNVPNetwork
  params:
    - nvpnetwork
  postprocess: StoreSubComponentObjects
  preprocess: TransformSubComponentSpec
  type: component

ovs:
  dependency:
    - vib
  derived_components:
    - host
  description: create a open virtual switch
  linkedworkload: SwitchWorkload
  method: CreateOVS
  params:
    - ovs
  postprocess: StoreSubComponentObjects
  preprocess: TransformSubComponentSpec
  type: component

port:
  derived_components:
    - host
  description: port number
  format: integer
  sample_value: 1234
  type: parameter
  method: GetComponentAttribute

portgroup:
  dependency:
    - vss
  derived_components:
    - host
  description: create a standard port group
  linkedworkload: PortGroupWorkload
  method: CreateStandardPortGroup
  params:
    - portgroup
  postprocess: StoreSubComponentObjects
  preprocess: TransformSubComponentSpec
  type: component

profile:
  allowed_values:
    - update
  derived_components:
    - host
  description: upgrade the host esx
  format: string
  method: ConfigureProfile
  params:
    - profile
    - build
    - signaturecheck
  preprocess: PreProcessUpgradeBuild
  sample_value: update
  type: action

pswitchport:
  derived_components:
    - host
  description: create a pswitch port
  linkedworkload: PortWorkload
  method: CreatePort
  params:
    - pswitchport
    - pswitch
  postprocess: StoreSubComponentObjects
  preprocess: TransformSubComponentSpec
  type: component

reconfigure:
  derived_components:
    - host
  description: update the advanced config options on a host or update Fabric Host
  allowed_values:
    - true
  format: boolean
  method: UpdateComponent
  params:
    - reconfigure
    - advancedoptions
    - external_id
    - os_type
    - os_version
    - ip_addresses
    - name
    - summary
  preprocess: PreProcessHashTypeAPI
  sample_value: true
  type: action

reconfigurefirewall:
  allowed_values:
    - true
    - false
  derived_components:
    - host
  description: Method to change firewall rule set
  format: boolean
  method: ReconfigureFirewall
  params:
    - reconfigurefirewall
    - ruleset
  preprocess: PreProcessShiftTypeAPI
  sample_value: true
  type: action

removecontrollerinfofile:
  derived_components:
    - host
  description: Method to remove controller info file on host
  format: path
  method: RemoveControllerInfoFile
  params:
    - removecontrollerinfofile
  preprocess: PreProcessShiftTypeAPI
  sample_value: /etc/vmware/netcpa/config-by-vsm.xml
  type: action

removenetstack:
  dependency:
    - vmknic
  derived_components:
    - host
  description: Method to remove tcpip stack
  format: vdnet index
  method: RemoveTCPIPInstance
  params:
    - removenetstack
  postprocess: RemoveSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1].netstack.[1]'
  type: action

removevmknic:
  dependency: ~
  derived_components:
    - host
  description: remove a vmknic on ESX host
  format: vdnet index
  method: DeleteVmknic
  params:
    - removevmknic
  postprocess: RemoveSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1].vmknic.[1]'
  type: action

rssqueuenum:
  derived_components:
    - host
  description: Queue number on which RSS is supported
  format: integer
  method: ~
  sample_value: 1
  type: parameter

sa:
  allowed_values:
    - add
    - remove
  derived_components:
    - host
  description: Key to add ipsec Security Association
  format: string
  method: ConfigureIPSecSecurityAssociation
  params:
    - sa
    - ipsecconfigspec
  postprocess: ~
  preprocess: PreProcessIPSecSecurityAssociation
  sample_value: add
  type: action

server:
  derived_components:
    - host
  description: Get controller object
  format: vdnet index
  method: GetOneObjectFromOneTuple
  sample_value: 'vsm.[1].vxlancontroller.[1]'
  type: parameter

signaturecheck:
  allowed_values:
    - 0
    - 1
  derived_components:
    - host
  description: Option to do signature check
  format: boolean
  sample_value: 0
  type: parameter

sleepbetweenverification:
  derived_components:
    - host
  description: 'Numerical parameter to denote how many seconds method should sleep before being executed. This is mainly used in cases of simultaneous workload runs'
  format: integer
  sample_value: 60
  type: parameter

sp:
  allowed_values:
    - add
    - remove
  derived_components:
    - host
  description: Key to add ipsec Security Policy
  format: string
  method: ConfigureIPSecSecurityPolicy
  params:
    - sp
    - ipsecconfigspec
  postprocess: ~
  preprocess: PreProcessIPSecSecurityPolicy
  sample_value: add
  type: action

sriov:
  allowed_values:
    - enable
    - disable
  derived_components:
    - host
  description: Enable/Disable Sriov on vmnic
  format: string
  method: ConfigureSRIOV
  params:
    - sriov
    - vmnicadapter
    - maxvfs
  preprocess: PreProcessSriov
  sample_value: enable
  type: action

sslenabled:
  allowed_values:
    - true
    - false
  derived_components:
    - host
  description: ssl status
  format: boolean
  sample_value: true
  type: parameter

taskfile:
  derived_components:
    - host
  description: tasklist file with absolute path
  format: path
  sample_value: /tmp/hostprofilefile
  type: parameter

tcpiplro:
  description: Value of LRO for TCPIP
  format: enable/disable
  method: ~
  type: parameter

testesxcmd:
  derived_components:
    - host
  description: 'Execute testesx command '
  format: string
  method: TestEsxCommand
  params:
    - testesxcmd
  preprocess: PreProcessShiftTypeAPI
  sample_value: VDNetLib::TestData::TestConstants::VMK_TESTESX
  type: action

tso:
  derived_components:
    - host
  description: tso
  format: string
  sample_value: TSO not enabled
  type: parameter

unloaddriver:
  derived_components:
    - host
  description: Unloads the specified driver
  format: vdnet index
  method: UnloadDriver
  params:
    - unloaddriver
  postprocess: ~
  preprocess: PreProcessLoadUnloadDriverKey
  sample_value: 'host.[1].vmnic.[1]'
  type: action

vdrconnection:
  allowed_values:
    - add
    - remove
  derived_components:
    - host
  description: Create the connection of vdr port with dvs switch
  format: string
  method: DeleteConnectionVDRPortToVDS
  params:
    - vdrconnection
    - dvsname
  preprocess: PreProcessHashTypeAPI
  sample_value: add
  type: action

vdrport:
  allowed_values:
    - create
    - delete
  dependency:
    - connection
  derived_components:
    - host
  description: Sets up vdr testing environment
  format: string
  method: CreateDestroyVDRPort
  params:
    - vdrport
    - dvsname
  preprocess: PreProcessHashTypeAPI
  sample_value: create
  type: action

verifycontrollerinfoonhost:
  description: Verify controller list on host
  format: 'Hash with following structure: [{sslenabled => "<string>" port       => "<string>" server       => "<tuple>" }]'
  method: VerifyControllerInfoOnHost
  params:
    - verifycontrollerinfoonhost
  preprocess: PreProcessVerifyControllerInfoOnHost
  type: verification

verifyrssfunctionality:
  derived_components:
    - host
  description: Verify whether RSS is working fine on vmnic
  format: vdnet index
  method: VerifyRSSFunctionality
  params:
    - verifyrssfunctionality
    - vmkinfo
    - rssqueuenum
    - sleepbetweenverification
  postprocess: ~
  preprocess: PreProcessVerifyRSSFunctionalityKey
  sample_value: 'host.[1].vmnic.[1]'
  type: action

verifytsockoonhost:
  description: Verify TSO/CKO status on host by pktcap-uw
  format: 'Hash with following structure: {tso => TSO not enabled, Checksum not offloaded}'
  method: VerifyTSOCKOOnHost
  params:
    - verifytsockoonhost
    - switch
  preprocess: PreProcessVerification
  type: verification

verifyvsancluster:
  derived_components:
    - host
  description: Verify host has joined desired vlan cluster
  format:
    'Sub-Cluster Master UUID[?]equal_to': 'host.[1]'
  method: GetVSANClusterInfo
  params:
    - verifyvsancluster
  preprocess: PreProcessVerifySameDataAllObjects
  type: verification

vib:
  allowed_values:
    - install
    - update
    - remove
  derived_components:
    - host
  description: 'Install/update/remove VIB '
  format: string
  method: ConfigureVIB
  params:
    - vib
    - vibfile
    - maintenance
    - signaturecheck
  preprocess: PreProcessHashTypeAPI
  sample_value: install
  type: action

vibfile:
  derived_components:
    - host
  description: List of VIB files/URLs/names
  format:
    - vibfile
  method: ProcessVIBFiles
  sample_value: http://someurl.com
  type: parameter

vmkinfo:
  derived_components:
    - host
  description: Vmknic MACs / tuples
  format: vdnet index/vmknic mac
  method: PreProcessVmknicMAC
  sample_value: 'host.[1].vmknic.[1]'
  type: parameter

vmknic:
  dependency:
    - portgroup
    - netstack
  derived_components:
    - host
  description: create a vmknic adapter
  linkedworkload: NetAdapterWorkload
  method: AddVmknic
  params:
    - vmknic
  postprocess: StoreSubComponentObjects
  preprocess: TransformSubComponentSpec
  type: component

vmnicadapter:
  derived_components:
    - host
  description: ;; separated list of vmnic tuples
  format: vdnet index
  method: PreProcessVmnicadapter
  sample_value: 'host.[1].vmnic.[1];;host.[2].vmnic.[1]'
  type: parameter

vsancluster:
  allowed_values:
    - join
    - leave
  dependency:
    - vsandiskgroup
  derived_components:
    - host
  description: Make the host join or leave the VSAN cluster
  format: string
  method: ConfigureVSANCluster
  params:
    - vsancluster
  preprocess: PreProcessShiftTypeAPI
  sample_value: join
  type: action

vsandiskgroup:
  allowed_values:
    - join
    - leave
  derived_components:
    - host
  description: Make local hdd and ssd on this host join VSAN disk group
  format: string
  method: ConfigureVSANDiskGroup
  params:
    - vsandiskgroup
  preprocess: PreProcessShiftTypeAPI
  sample_value: join
  type: action

vss:
  derived_components:
    - host
  description: create a standard virtual switch
  linkedworkload: SwitchWorkload
  method: CreateVSS
  params:
    - vss
  postprocess: StoreSubComponentObjects
  preprocess: TransformSubComponentSpec
  type: component

verifylldpipv6address:
  description: Verify specified lldp ipv6 address on host
  format: 'Hash with following structure: [{ipv6  => "ipv6 address"}]'
  method: GetLLDPIPv6Info
  params:
    - verifylldpipv6address
  preprocess: PreProcessLLDPIPv6Address
  type: verification

service:
  description: Method to restart/stop/start service on host
  method: ConfigService
  params:
    - service
    - name
  preprocess: PreProcessShiftTypeAPI
  type: action
  allowed_values:
    - restart
    - stop
    - start
  derived_components:
    - host

start_service:
  description: Method to start service on a host.
  method: start_service
  params:
    - execution_type
    - service_name
  dependency:
    - configure_package
  preprocess: PreProcessNestedParametersForAction
  type: action
  derived_components:
    - kvm
  format:
   name: 'ref: name'
  sample_value:
    execution_type: 'cmd'
    service_name: 'openvswitch'

restart_service:
  description: Method to start service on a host.
  method: restart_service
  params:
    - execution_type
    - service_name
  preprocess: PreProcessNestedParametersForAction
  type: action
  derived_components:
    - kvm
  format:
   name: 'ref: name'
  sample_value:
    execution_type: 'cmd'
    service_name: 'openvswitch'

stop_service:
  description: Method to start service on a host.
  method: stop_service
  params:
    - execution_type
    - service_name
  preprocess: PreProcessNestedParametersForAction
  type: action
  derived_components:
    - kvm
  format:
   name: 'ref: name'
  sample_value:
     execution_type: 'cmd'
     name: 'openvswitch'

checkpsod:
  derived_components:
    - host
  description: Check if host hits PSOD and try to revovery from PSOD
  format: string
  sample_value: yes
  allowed_values:
    - yes
    - no
  type: action
  preprocess: PreProcessShiftTypeAPI
  method: HealthCheckupAndRecovery

pif:
  type: component
  description: create a pnic object for KVM host
  derived_components:
    - kvm
  linkedworkload: NetAdapterWorkload
  preprocess: TransformSubComponentSpec
  method: DiscoverPIF
  params:
    - pif
  postprocess: StoreSubComponentObjects

bridge:
  type: component
  description: Create/discover a bridge on kvm host
  dependency:
    - configure_package
    - start_service
  derived_components:
    - pif
  linkedworkload: PortGroupWorkload
  preprocess: TransformSubComponentSpec
  method: CreateDiscoverBridge
  params:
    - bridge
  postprocess: StoreSubComponentObjects

deletebridge:
  type: component
  description: Deletes an OVS bridge.
  derived_components:
    - kvm
  method: DeleteBridge
  postprocess: RemoveSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'kvm.[1].bridge.[1]'

queryvms:
  description: Verify attributes of vms that are powered on the host
  type: verification
  format:
    - worldid: 'vdnet index->read->attribute'
      processid: 'vdnet index->read->attribute'
      vmxcartelid: 'vdnet index->read->attribute'
      uuid: 'vdnet index->read->attribute'
      displayname: 'vdnet index->read->attribute'
      configfile: 'vdnet index->read->attribute'
  sample_value:
    - worldid: 'vm[1]->read->attribute'
      processid: 'vm[1]->read->attribute'
      vmxcartelid: 'vm[1]->read->attribute'
      uuid: 'vm[1]->read->attribute'
      displayname: 'vm[1]->read->attribute'
      configfile: 'vm[1]->read->attribute'
  derived_components:
    - host
    - vm
  preprocess: PreProcessVerification
  method: QueryVMs
  params:
    - queryvms

framework_setup:
  description: Do setup on this host in a specific order
  type: action
  derived_components:
    - host
    - kvm
  format: array
  preprocess: PreProcessShiftTypeAPI
  method: DoFrameworkSetup
  sample_value:
    - disablefirewall
    - createanchor
    - copysshkey

configure_package:
 type: action
 description: 'Install/uninstall/update a package on the host. For install
 operation resources would be buildweb url and for uninstall operation
 resources would be package name e.g. nsx-mpa only.'
 dependency:
  - framework_setup
 derived_components:
  - host
 format:
  resource:
   - 'ref: resource'
  operation: 'ref: operation'
  maintenance: 'ref: maintenance'
  signaturecheck: 'ref: signaturecheck'
 preprocess: PreProcessNestedParametersForAction
 method: configure_package
 params:
  - configure_package
 sample_value:
  maintenance: 'true'
  signaturecheck: 'false'
  ordered: 'true'
  operation: 'install'
  resource:
   - 'https://url_to_buildweb'

download_files:
  type: action
  description: Download files onto the host
  dependency:
    - framework_setup
  derived_components:
    - host
  format:
    resource:
        - 'ref: resource'
    destination: string
  preprocess: PreProcessNestedParametersForAction
  method: download_files
  params:
    - download_files
  sample_value:
    resource:
      - 'https://url_to_buildweb'
    destination: '/tmp'

vtep:
 type: component
 description: Create Tunnel endpoint on the host
 dependency:
  - configure_package
  - start_service
  - pif
 derived_components:
  - esx
  - kvm
 linkedworkload: NetAdapterWorkload
 preprocess: PreProcessSubComponentsInPython
 method: CreateComponent
 postprocess: StoreSubComponentObjects
 objtype:
    esx: 'VDNetLib::NetAdapter::Vtep::ESXVtep'
    kvm: 'VDNetLib::NetAdapter::Vtep::KVMVtep'
 params:
  - vtep

deletensxvswitch:
  derived_components:
    - host
  description: Key needed to delete nsxvswitch
  format: vdnet index
  method: DeleteComponent
  params:
    - deletensxvswitch
  postprocess: RemoveReplicatedSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1].nsxvswitch.[1]'
  type: component
  objtype:
    esx: 'VDNetLib::Switch::NSXVSwitch::NSXVSwitch'

nsxvswitch:
  derived_components:
    - esx
  description: create a nsx vswitch
  linkedworkload: SwitchWorkload
  method: CreateComponent
  params:
    - nsxvswitch
  postprocess: StoreSubComponentObjects
  preprocess: PreProcessSubComponentsInPython
  type: component
  objtype:
    esx: 'VDNetLib::Switch::NSXVSwitch::NSXVSwitch'

ssd:
  description: SSD on the host
  type: parameter
  derived_components:
    - host
  format: vdnet index
  sample_value: 1

firewall_rule:
  type: action
  method: configure_firewall_rule
  description: Adds or removes a firewall rule to/from the host.
  preprocess: PreProcessNestedParametersForAction
  params:
    - firewall_rule
  derived_components:
    - esx
    - kvm
  format:
    strict: bool
    rule_operation: 'ref: rule_operation'
    chain: 'ref: chain'
    destinationip: 'ref: destinationip'
    protocol: 'ref: protocol'
    protocol_options: 'ref: protocol_options'
    action: 'ref: action'
    match_extensions: 'ref: match_extensions'
    ruleset: 'ref: ruleset'
  sample_value:
    strict: true
    rule_operation: 'add'
    chain: 'INPUT'
    destinationip: 'kvm.[1]'
    protocol: 'udp'
    protocol_options:
      'destination_port': 1111
    action: 'ACCEPT'
    match_extensions:
      'comment_match_ext':
        'comment': 'Example Rule'
    ruleset: 'rabbitmqproxy'

chain:
  type: param
  description: "Name of the chain in which to insert/delete the rule"
  format: string
  sample_value: 'INPUT'

protocol_options:
  type: param
  description: "Protocol options to be used while configuring the rules"
  format: hash
  sample_value:
    'dport': 1111

match_extensions:
  type: param
  description: "Contains name as well as options for which match extension modules need to be loaded"
  format: hash
  sample_value:
     'comment_match_ext':
       'comment': 'Example Rule'

comment_match_ext:
  type: param
  description: "Comment match extension name"
  format: hash
  sample_value:
    'comment': 'Example rule'

comment:
  type: param
  description: "Comment option for the comment match extension module"
  format: string
  sample_value: 'Example rule'

destination_port:
  type: param
  description: "Destination port"
  format: integer
  sample_value: 1111

# TODO(Salman): Remove this key as it is a duplicate from RulesWorkload.

protocol:
  allowed_value:
    - tcp
    - udp
    - icmp
  derived_components:
    - kvm
  description: This key specifies the  protocol used
  format: string
  sample_value: tcp
  type: parameter

# TODO(Salman): Remove this key as it is a duplicate from RulesWorkload.

rule_operation:
  allowed_value:
    - add
    - edit
    - remove
    - enable
    - disable
  derived_components:
    - kvm
    - esx
  description: 'This key specifies the  rule operation '
  format: string
  sample_value: add
  type: parameter

# TODO(Salman): Remove this key as it is a duplicate from RulesWorkload.

action:
  allowed_value:
    - ACCEPT
    - DROP
    - QUEUE
    - RETURN
  derived_components:
    - kvm
  description: 'Action to be performed on the packets matching the rule'
  format: string
  sample_value: accept
  type: parameter

ruleset:
  allowed_value:
    - netCP
    - rabbitmqproxy
  derived_components:
    - host
    - esx
  description: 'ruleset name for ESX service'
  format: string
  sample_value: netCP
  type: parameter

firewall_status:
  allowed_values:
    - enable
    - disable
  derived_components:
    - esx
    - kvm
  description: Method to enable or disable firewall
  format: string
  method: configure_firewall
  params:
    - execution_type
    - strict
    - firewall_status
  preprocess: PreProcessFirewallStatus
  sample_value: enable
  type: action

set_nsx_manager: &SET_NSX_MANAGER
 type: action
 description: Set NSX manager on the node
 derived_components:
  - esx
  - kvm
 format:
  manager_ip: 'vdnet index'
  manager_thumbprint: 'vdnet index'
 dependency:
  - configure_package
  - start_service
 preprocess: PreProcessNestedParametersForAction
 method: set_nsx_manager
 params:
  - configure_nsx_manager
 sample_value:
  manager_ip: nsxmanager.[1]

remove_nsx_manager:
 <<: *SET_NSX_MANAGER
 method: remove_nsx_manager

set_nsx_controller:
 type: action
 description: Set NSX controller on the node
 derived_components:
  - esx
  - kvm
 format:
  controller_ip: 'vdnet index'
  node_id: 'vdnet index'
 preprocess: PreProcessNestedParametersForAction
 method: set_nsx_controller
 params:
  - set_nsx_controller
 sample_value:
  controller_ip: nsxcontroller.[1]

configure_nsx_registration:
 type: action
 description: Configure NSX registration on the node
 derived_components:
  - esx
  - kvm
 format:
  operation: 'ref: operation'
  nsx_api_user: 'vdnet index'
  nsx_thumbprint: 'vdnet index'
 preprocess: PreProcessNestedParametersForAction
 method: configure_nsx_registration
 params:
  - configure_nsx_registration
 sample_value:
  operation: 'register_node'
  nsx_api_user: nsxmanager.[1]
  nsx_thumbprint: nsxmanager.[1]

get_dict_from_json_file:
  type: verification
  derived_components:
    - esx
    - kvm
    - host
  description: Save a json dict to persist data
  format:
      "json: 'ref: json'"
  method: get_dict_from_json_file
  params:
    - execution_type
    - get_dict_from_json_file
    - file_name
  preprocess: PreProcessVerification
  sample_value: 'host.[1]'

json:
  derived_components:
    - host
    - esx
  description: 'json'
  format: <location>
  sample_value: '/foo/bar/foobar.json'
  type: parameter

get_controller:
  derived_components:
   - esx
   - kvm
  description: Verify controller information
  format:
    count: nubmer of CCP
    table:
        - controller_ip: nsxcontroller.[1]
          port: '1234'
          ssl_enabled: 'true'
  method: get_controller
  params:
    - execution_type
    - get_controller
  preprocess: PreProcessVerification
  sample_value:
    count: 1
    table:
        - controller_ip: nsxcontroller.[1]
          port: '1234'
          ssl_enabled: 'true'
  type: verification

get_logical_switch:
  derived_components:
   - esx
   - kvm
   - logicalswitch
  description: Verify logical switches information, including replicationmode ..
  format:
    table:
        - switch_vni: logical switch tuple
          replication_mode: mtep/source
          controller_status: up/down
          controller_ip: nsxcontroller.[1]
  method: get_logical_switch
  params:
    - execution_type
    - get_logical_switch
  preprocess: PreProcessVerification
  sample_value:
    table:
        - switch_vni: nsxmanager.[1].logicalswitch.[1]
          replication_mode: mtep
          controller_status: up
          controller_ip: nsxcontroller.[1]
  type: verification

get_logical_routers:
  derived_components:
   - esx
   - kvm
   - logicalrouter
  description: Verify logical router (DR) information on the host.
  format:
    table:
        - vdr_name: TBD
          lr_uuid: <uuid>
          vdr_id: TBD
          number_of_ports: 2
          number_of_routes: 2
          state: enabled/disabled
          controller_ip: IP of the controller
          control_plane_ip: TBD
          control_plane_active: TBD
          num_unique_nexthops: 0
          generation_number: 0
          edge_active: yes/no
  method: get_logical_routers
  params:
    - execution_type
    - endpoints
    - get_logical_routers
  preprocess: PreProcessVerification
  sample_value:
    table:
        - vdr_name: TBD
          vdr_id: TBD
          number_of_ports: 2
          state: enabled/disabled
          controller_ip: nsxcontroller.[1]
          control_plane_ip: TBD
          control_plane_active: TBD
          num_unique_nexthops: 0
          generation_number: 0
          edge_active: yes/no
  type: verification

deletevtep:
  type: component
  description: Delete Tunnel Endpoint from host.
  derived_components:
    - esx
    - kvm
  method: DeleteComponent
  postprocess: RemoveSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'nsxmanager.[1].vtep.[1]'
  objtype:
     esx: 'VDNetLib::NetAdapter:Vtep::Vtep'
     kvm: 'VDNetLib::NetAdapter:Vtep::Vtep'

get_fabrichost_list:
  derived_components:
    - nsxmanager
  description: Get list of fabric hosts
  method: query
  params:
    - get_fabrichost_list
  preprocess: PreProcessVerification
  type: verification
  format:
    results:
      - name: TestEsxVm

state:
  allowed_values:
    - start
    - stop
    - restart
    - kill
  derived_components:
    - esx
    - kvm
  description: Method to change state of services in host
  format: string
  sample_value: accept
  type: parameter

service_name:
  derived_components:
  - esx
  - kvm
  description: service name in host
  format: string
  sample_value: nsx-ida
  type: parameter

configure_service_state:
  allowed_values:
    - state : 'stop'
    - state : 'start'
    - state : 'restart'
    - service_name : 'kill'
  derived_components:
    - esx
    - kvm
  description: Stop/Start/Restart service on Hypervisors
  format:
   state: 'ref: state'
   service_name: 'service_name'
   strict: 'ref: strict'
  method: configure_service_state
  params:
    - configure_service_state
  preprocess: PreProcessShiftTypeAPI
  sample_value:
    state: 'stop'
    service_name: 'nsx-ida'
    strict: true
  type: action

faulttolerancevm:
  description: pass the fault tolerance vm as a parameter
  type: parameter
  format: vdnet-index
  sample_value: 'vm.[1]'
  preprocess: GetMultipleComponentObjects
  derived_components:
    - host
    - vm

faulttoleranceoption:
  description: pass the fault tolerance option as a parameter
  type: parameter
  format: string
  sample_value: "CheckFT"
  derived_components:
    - host
    - vm

faulttoleranceoperation:
  description: perform fault tolerance operation based on the passed parameter
  type: action
  format:
          faulttoleranceoption: 'ref:faulttoleranceoption'
          faulttolerancevm: 'ref:faulttolerancevm'
  sample_value: "RHEL63"
  derived_components:
    - host
    - vm
  preprocess: PreProcessFaultToleranceOperation
  method: FaultToleranceOperation
  params:
    - faulttoleranceoperation
    - faulttolerancevm
    - faulttoleranceoption

set_switch_mtu:
  derived_components:
    - esx
    - kvm
  description: Configure nsxvswitch mtu on host
  type: action
  format:
    - value: integer
    - adapter_name: vmnic interface
    - execution_type: cli
  method: set_switch_mtu
  params:
    - set_switch_mtu
  preprocess: PreProcessNestedParametersForAction
  sample_value:
    - value: 1600
    - adapter_name: esx.[1].vmnic.[1]
    - execution_type: cli

ableipv6:
  allowed_values:
    - enable
    - disable
  derived_components:
    - host
  description: 'Enable or disable ipv6 on ESX host'
  format: string
  method: AbleIPv6
  params:
    - ableipv6
  preprocess: PreProcessShiftTypeAPI
  sample_value: enable
  type: action

set_adapter_mtu:
  derived_components:
    - kvm
  description: Configure interface mtu on the host.
  type: action
  format:
    - value: integer
    - adapter_name: Interface name
    - execution_type: cli
  method: set_adapter_mtu
  params:
    - set_adapter_mtu
  preprocess: PreProcessNestedParametersForAction
  sample_value:
    - value: 1600
    - adapter_name: kvm.[1].vm.vif.[1]->ovs_port
    - ip_address: kvm.[2].vtep.[1]->ip_address
    - execution_type: cli

get_port_qos_info:
  type: verification
  derived_components:
    - host
    - esx
    - kvm
  description: List of port QoS configuration information.
  preprocess: PreProcessVerification
  method: get_port_qos_info
  format:
    get_port_qos_info
  params:
    - execution_type
    - get_port_qos_info

get_port_teaming_info:
  type: verification
  derived_components:
    - host
    - esx
    - kvm
  description: List of port teaming configuration information.
  preprocess: PreProcessVerification
  method: get_port_teaming_info
  format:
    get_port_teaming_info
  params:
    - execution_type
    - get_port_teaming_info
  sample_value:
    load_balancing: 'source ip address'
    link_selection: 'link state up;'
    active: 'uplink1; uplink2; uplink3;'
    standby: null
    link_behavior: 'notify switch; best effort on failure; shotgun on failure;'

get_tcp_connection_count:
  type: verification
  description: Verify number of connections in given state for given keywords.
  format:
    result_count: integer
  method: get_tcp_connection_count
  params:
    - execution_type
    - ip_address
    - port
    - connection_states
    - keywords
    - get_tcp_connection_count
  derived_components:
    - host
  preprocess: PreProcessVerification
  sample_value:
    result_count: 2

connection_states:
  type: parameter
  description: Any connection state.
  format: string
  sample_value:
    - 'ESTABLISHED'

get_tunnel_ports_remote_ip:
  type: verification
  description: Return tunnel remote ip and forwarding state.
  format:
    table:
      - remote_ip: string
        forwarding_state: string
  method: get_tunnel_ports_remote_ip
  params:
    - execution_type
    - get_tunnel_ports_remote_ip
  derived_components:
    - host
  preprocess: PreProcessVerification
  sample_value:
    table:
      - remote_ip: 'kvm.[1].vtep.[1]->ip_address'
        forwarding_state: 'true'

disconnect_vdr_port:
  derived_components:
    - esx
  description: Disconnect vdr port from switch
  format:
    switch_name: string
    execution_type: cli
  method: disconnect_vdr_port_from_switch
  params:
    - disconnect_vdr_port
  preprocess: PreProcessNestedParametersForAction
  type: action
  sample_value:
    switch_name: 'nsxvswitch'

delete_vdr_port:
  derived_components:
    - esx
  description: Delete vdr port from nsxvswitch
  format:
    switch_name: string
    execution_type: cli
  method: delete_vdr_port
  params:
    - delete_vdr_port
  preprocess: PreProcessNestedParametersForAction
  type: action
  sample_value:
    switch_name: 'nsxvswitch'

file_name:
  type: parameter
  description: "an absolute path to a file"
  format: path
  sample_value: '/var/log/foo.log'

append_string:
  type: parameter
  description: "string to append to a file for instance"
  format: string
  sample_value: 'example'

file_append:
  type: action
  description: append a string to a logfile on a host
  derived_components:
    - esx
    - kvm
  format: boolean
  sample_value: true
  preprocess: PreProcessNestedParametersForAction
  method: file_append
  params:
    - execution_type
    - file_name
    - append_string

grep_after:
  type: parameter
  description: "string to use to find context prior to desired string"
  format: string
  sample_value: 'foo'

grep_string:
  type: parameter
  description: "string that you're looking for in a grep"
  format: string
  sample_value: 'example'

max_wait:
  type: parameter
  description: "maximum wait time in seconds"
  format: integer
  sample_value: 30

interval:
  type: parameter
  description: "interval time in seconds"
  format: integer
  sample_value: 5

query_file:
  type: action
  description: wait for a string to appears in desired file
  derived_components:
    - esx
    - kvm
  format: boolean
  sample_value: true
  preprocess: PreProcessNestedParametersForAction
  method: query_file
  params:
    - execution_type
    - file_name
    - grep_after
    - grep_string
    - max_wait
    - interval
    - pattern
    - count

find_pattern_count:
  type: action
  description: count the number of patterns in desired file
  derived_components:
    - esx
    - kvm
  format: boolean
  sample_value: true
  preprocess: PreProcessNestedParametersForAction
  method: find_pattern_count
  params:
    - execution_type
    - file_name
    - grep_after
    - grep_string
    - pattern

host_ip:
  type: parameter
  descrption: IP Addresses of the host, version 4 or 6
  derived_component:
   - fabrichost
  method: GetComponentAttribute
  format: string
  sample_value: 'esx.[1]'

application_type:
  type: parameter
  allowed_values:
    - CustomerVertical
  description: "application type as a string"
  format: string
  sample_value: 'CustomerVertical'

application_id:
  type: parameter
  description: "generic application name/id with no whitespace"
  format: string
  sample_value: 'foobar'

client_type:
  type: parameter
  allowed_values:
    - 1
  description: "1=NET Client (RMQ_NET_CLIENT)"
  format: integer
  sample_value: 1

amqp_payload:
  type: parameter
  description: "payload for the AMQP message sent to RabbitMQ"
  format: string
  sample_value: 'foobar'

demo_mode:
  type: parameter
  allowed_values:
    - 1
    - 2
    - 3
  description: "demonstration mode, values accepted are 1, 2, 3"
  format: integer
  sample_value: 2

time_delay:
  type: parameter
  description: "a time delay in seconds"
  format: integer
  sample_value: 0

connect_sample_client:
  type: action
  description: "connect sample client server"
  derived_components:
    - esx
    - kvm
  format: sample_client
  sample_value: sample_client
  preprocess: PreProcessNestedParametersForAction
  method: connect_sample_client
  params:
    - execution_type
    - name
    - host_ip

vertical_registration:
  type: verification
  description: "vertical registration, return cookie_id on successful registration"
  derived_components:
    - esx
    - kvm
  format:
    - cookie_id: string
  sample_value:
    - cookie_id : 7
  preprocess: PreProcessVerification
  method: vertical_registration
  params:
    - execution_type
    - host_ip
    - application_type
    - application_id
    - client_type
    - vertical_registration
    - registration_options

registration_options:
  type: parameter
  description: "options for registration"
  format: string
  sample_value: "{fnCallback:None}"

cookieid:
  type: parameter
  description: "cookieid"
  format: string
  sample_value: '7'

cookie_id:
  type: parameter
  description: "cookieid"
  format: string
  sample_value: '7'

msg_type:
  type: parameter
  description: "Type of message: generic:1, rpc:2, publish:3"
  format: int
  sample_value: '1/2/3'

vertical_close_connection:
  type: action
  description: "test vertical close connection - close sample client connection with MPA"
  derived_components:
    - esx
    - kvm
  format:
    - host_ip
    - cookieid
  sample_value: 7
  preprocess: PreProcessNestedParametersForAction
  method: vertical_close_connection
  params:
    - execution_type
    - host_ip
    - cookieid

read_master_broker_ip:
  type: verification
  description: "read master_broker_ip - DEPRECATED"
  derived_components:
    - esx
    - kvm
  preprocess: PreProcessVerification
  method: read_master_broker_ip
  format:
    master_broker_ip: string
  sample_value:
    master_broker_ip: 10.10.10.10
  params:
    - execution_type
    - read_master_broker_ip

read_client_token:
  type: verification
  description: "read client-token"
  derived_components:
    - esx
    - kvm
  preprocess: PreProcessVerification
  method: read_client_token
  format:
    client_token: string
  sample_value:
    client_token: cvn-hv-dc96bc0a-f2df-11e4-8446-bf617957004d
  params:
    - execution_type
    - read_client_token
    - num

num:
  type: parameter
  description: which entry in a list to operate on
  format: integer
  sample_value: 2

read_broker_ip:
  type: verification
  description: "read broker ip"
  derived_components:
    - esx
    - kvm
  preprocess: PreProcessVerification
  method: read_broker_ip
  format:
    ip: string
  sample_value:
    ip: 10.10.10.10
  params:
    - execution_type
    - read_broker_ip
    - num
    - ip

read_broker_port:
  type: verification
  description: "read broker port"
  derived_components:
    - esx
    - kvm
  preprocess: PreProcessVerification
  method: read_broker_port
  format:
    port: string
  sample_value:
    port: "15002"
  params:
    - execution_type
    - read_broker_port
    - num
    - port

read_broker_thumbprint:
  type: verification
  description: "read broker thumbprint"
  derived_components:
    - esx
    - kvm
  preprocess: PreProcessVerification
  method: read_broker_thumbprint
  format:
    thumbprint: string
  sample_value:
    thumbprint: 9c4294249138b6b324a45ac39276e9ab5264ffdf0c74da561c4e43e8
  params:
    - execution_type
    - read_broker_thumbprint
    - num
    - thumbprint

remove_broker:
  type: action
  description: "Remove a broker from the mpa config file by either num or ip address"
  derived_components:
    - esx
    - kvm
  format:
    num: integer
    ip: string
  sample_value:
    num: 0
    ip: '10.10.10.10'
  preprocess: PreProcessNestedParametersForAction
  method: remove_broker
  params:
    - execution_type
    - num
    - ip

add_broker:
  type: action
  description: "Add a broker to the mpa config file"
  derived_components:
    - esx
    - kvm
  format:  status_code
  sample_value: SUCCESS
  preprocess: PreProcessNestedParametersForAction
  method: add_broker
  params:
    - execution_type
    - num
    - ip
    - port
    - virtual_host
    - thumbprint
    - master

find:
  type: parameter
  description: "find a pattern or string"
  format: string
  sample_value: 'foobar'

replace:
  type: parameter
  description: "string to replace"
  format: string
  sample_value : 'test'

first:
  type: parameter
  description: replace all or first value only
  format: boolean
  sample_value : False

replace_regex_in_file:
  type: action
  description: replace_regex_in_file
  derived_components:
    - esx
    - kvm
  format:
    - path: string
    - find: string
    - replace: string
  preprocess: PreProcessNestedParametersForAction
  method: replace_regex_in_file
  sample_value:
    - 'execution_type': 'cmd'
    - 'path': '/etc/vmware/nsx-mpa/mpaconfig.json'
    - 'find': '\"BrokerIpAddress\".*\"([0-9]{1,3}\.){3}[0-9]{1,3}\"'
    - 'replace': '\"BrokerIpAddress\":\"0.0.0.1\"'
  params:
    - execution_type
    - path
    - find
    - replace
    - first

source_path:
  type: parameter
  description: "path to move from"
  format: string
  sample_value : '/etc/vmware'

destination_path:
  type: parameter
  description: "path to move to"
  format: string
  sample_value : '/etc/vmware/nsx-mpa'

file_name:
  type: parameter
  description: "File to move"
  format: string
  sample_value : 'mpaconfig.json'

dest_file_name:
  type: parameter
  description: "Destination file namee"
  format: string
  sample_value : 'mpaconfig.json.tmp'

move_file:
  type: action
  description: move file from one location to another
  derived_components:
    - esx
    - kvm
    - host
  format:
    - source_path: 'ref: source_path'
    - destination_path: 'ref: destination_path'
    - file_name: 'ref: file_name'
    - dest_file_name: string
  preprocess: PreProcessNestedParametersForAction
  method: move_file
  params:
    - move_file
  sample_value:
    - source_path: /etc/vmware/nsx-mpa
    - destination_path: /etc/vmware/nsx-mpa
    - file_name: /etc/vmware/nsx-mpa
    - dest_file_name: mpaconfig.json.tmp

master_broker_node_service_status:
  type: action
  derived_components:
    - nsxservice
  method: ConfigureServiceStateOnMasterBrokerNode
  preprocess: PreProcessShiftTypeAPI
  description: Stop/Start/Restart service on master broker node
  format:
     'managers': vdnet index
     'ipaddress': ip address
     'service_name': string
     'master_broker_node_service_status': string
  sample_value:
     'managers': nsxmanager.[-1]
     'ipaddress':  'esx.[1]->read_master_broker_ip->master_broker_ip'
     'service_name': proton
     'master_broker_node_service_status': restart
  params:
    - managers
    - ipaddress
    - service_name
    - master_broker_node_service_status

master_broker_node_service_status:
  type: action
  derived_components:
    - nsxservice
  method: ConfigureServiceStateOnMasterBrokerNode
  preprocess: PreProcessShiftTypeAPI
  description: Stop/Start/Restart service on master broker node
  format:
     'managers': vdnet index
     'service_name': string
     'master_broker_node_service_status': string
  samplevalue:
     'managers': nsxmanager.[-1]
     'service_name': proton
     'master_broker_node_service_status': restart
  params:
    - managers
    - service_name
    - master_broker_node_service_status

test_params:
  type: parameter
  description: 'Parameters passed into the sample_client'
  format: string
  sample_value: "{amqp_Payloadlen:0}"

vertical_send_msg:
  type: action
  description: "test vertical send generic message - send generic message to MP"
  derived_components:
    - esx
    - kvm
  format:  ip_addresses
  sample_value: 10.10.10.10
  preprocess: PreProcessNestedParametersForAction
  method: vertical_send_msg
  params:
    - execution_type
    - host_ip
    - test_params
    - count
    - msg_type
    - cookie_id

vertical_send_generic_msg:
  type: action
  description: "test vertical send rpc message - send RPC to MP"
  derived_components:
    - esx
    - kvm
  format:  ip_addresses
  sample_value: 10.10.10.10
  preprocess: PreProcessNestedParametersForAction
  method: vertical_send_generic_msg
  params:
    - execution_type
    - host_ip
    - amqp_payload
    - count
    - cookieid

vertical_send_rpc_msg:
  type: action
  description: "test vertical send rpc message - send RPC to MP"
  derived_components:
    - esx
    - kvm
  format:  ip_addresses
  sample_value: 10.10.10.10
  preprocess: PreProcessNestedParametersForAction
  method: vertical_send_rpc_msg
  params:
    - execution_type
    - host_ip
    - amqp_payload
    - count
    - cookieid

vertical_send_publish_msg:
  type: action
  description: "test vertical send publish message - send publish message to MP"
  derived_components:
    - esx
    - kvm
  format:  ip_addresses
  sample_value: 10.10.10.10
  preprocess: PreProcessNestedParametersForAction
  method: vertical_send_publish_msg
  params:
    - execution_type
    - host_ip
    - amqp_payload
    - count
    - cookieid

sample_client:
  type: action
  description: "start mpa sample_client application"
  derived_components:
    - esx
    - kvm
  format: boolean
  sample_value: true
  preprocess: PreProcessNestedParametersForAction
  method: sample_client
  params:
    - execution_type
    - application_type
    - application_id
    - client_type
    - demo_mode
    - expected_output
    - time_delay

process_name:
  type: parameter
  description: a process name
  format: string
  sample_value: 'python'

options:
  type: parameter
  description: options for a command
  format: string
  sample_value: '-9 -f'

kill_processes_by_name:
  description: kill all processes by name
  derived_components:
    - esx
    - kvm
  format:
    process_name: ''
  preprocess: PreProcessNestedParametersForAction
  method: kill_processes_by_name
  params:
    - options
    - process_name
  type: action

num_clients:
  type: parameter
  description: amount of clients connected to cluster
  format: integer
  sample_value: 5

verify_broker_num_clients:
  type: verification
  description: check if a broker has 'num' clients
  derived_components:
    - esx
    - kvm
  format: boolean
  preprocess: PreProcessNestedParametersForAction
  method: verify_broker_num_clients
  params:
    - num_clients

master:
  type: parameter
  description: whether or not the testrpc is sent from a master broker or not
  format: boolean
  sample_value: True

pre_sleep:
  type: parameter
  description: for sleeping prior to execution of method
  format: integer
  sample_value: 5

fetch_endpoint_testrpc:
  type: action
  description: call test_rpc endpoint
  derived_components:
    - esx
    - kvm
  format: boolean
  preprocess: PreProcessNestedParametersForAction
  method: fetch_endpoint_testrpc
  params:
    - master
    - execution_type
    - pre_sleep

syslog_message:
  type: parameter
  description: a string to write to the syslog
  format: string
  sample_value: 'example'

syslog_append:
  type: action
  description: append a string to the syslog
  derived_components:
    - esx
    - kvm
    - host
  preprocess: PreProcessNestedParametersForAction
  method: syslog_append
  params:
    - execution_type
    - syslog_message

name:
  derived_components:
    - all
  description: Name of the component
  format: tuple/string
  method: GetComponentAttribute
  sample_value: esx.[1].vtep.[1]->adapter_netstack
  type: parameter

get_hostnode_list:
  derived_components:
    - nsxmanager
  description: Get list of fabric hosts
  method: query
  params:
    - get_hostnode_list
  preprocess: PreProcessVerification
  type: verification
  format:
    results:
      - name: TestEsxVm

copy_file:
  type: action
  description: copy file from one host to another host
  derived_components:
    - esx
    - kvm
    - host
  preprocess: PreProcessNestedParametersForAction
  method: CopyFile
  params:
    - source_file_name
      dest_host
      dest_file_name
  sample_value:
    - source_file_name: /etc/vmware/nsx/host-cert.pem
      dest_host: esx.[1]
      dest_file_name: /etc/vmware/nsx/host-cert.pem

get_ipfix_config:
  derived_components:
    - esx
    - kvm
  description: Gets the IPFIX configuration from the host
  format:
    flow_timeout: integer
    active_timeout: integer
    sampling_rate: integer
    ip_address: ip address
    port: integer
  method: get_ipfix_config
  params:
    - execution_type
    - get_ipfix_config
  preprocess: PreProcessVerification
  type: verification
  sample_value:
    flow_timeout: 60
    active_timeout: 60
    sampling_rate: 0.1
    ip_address: 'vm.[8]->adapter_ip'
    port: 9999

get_service_status:
  type: verification
  description: Returns the service status for given services.
  format:
    - service_name: string
      service_status: string
  method: get_service_status
  params:
    - execution_type
    - service_names
    - get_service_status
  derived_components:
    - host
  preprocess: PreProcessVerification
  sample_value:
    table:
      - service_name: nsxa
        service_status: started

service_names:
  derived_components:
    - esx
    - kvm
  description: list of service names.
  format: list
  sample_value:
    - netcpad
    - nsxa
  type: parameter

defaultgateway:
  allowed_values:
    - add
    - delete
  derived_components:
    - kvm
  description: 'Add,delete default gateway on host'
  format:
    operation: string
    gateway: ipaddress
  method: ConfigureDefaultGateway
  params:
    - defaultgateway
  preprocess: PreProcessNestedParametersForAction
  sample_value:
    operation: add
    gateway: 172.16.0.10
  type: action

gateway:
  derived_components:
    - kvm
  description: Gateway's IP address
  format: ipaddress or vdnet index
  sample_value: 192.168.0.1
  type: parameter

get_host_uuid:
  type: verification
  description: Get host uuid using nsxcli
  derived_components:
    - esx
    - kvm
  format: string
  preprocess: PreProcessVerification
  method: get_host_uuid
  params:
    - execution_type
    - get_host_uuid

host_uuid:
  derived_components:
    - esx
    - kvm
  description: fabric node unique ID
  format: string
  sample_value: '5a4750e6-d836-11e4-a3ca-0d941abca47a'
  type: parameter

get_node_status:
  type: verification
  derived_components:
    - nsxmanager
  method: get_node_status
  preprocess: PreProcessVerification
  description: 'Get fabric node status'
  format: string
  samplevalue:
    get_node_status:
      mpa_connectivity_status[?]equal_to: UP
  params:
    - get_node_status

check_port_packet:
  derived_components:
    - host
  description: check whether network-port statistics are updating properly or not
  format:
    switch: 'ref: switch'
  method: MonitorNetworkPortStat
  params:
    - switch
  preprocess: PreProcessNestedParametersForAction
  sample_value:
    switch: 'vc.[1].vds.[1]'
  type: action

check_adapter_packet:
  derived_components:
    - host
  description: check whether vmnic packet statistics are updating properly or not.
  format:
    adapter: 'ref: adapter'
  method: MonitorVMNicPacketStat
  params:
    - adapter
  preprocess: PreProcessNestedParametersForAction
  sample_value:
    adapter: 'host.[1].vmnic.[1]'
  type: action

check_vlan_packet:
  derived_components:
    - host
  description: check whether VLAN packet statistics are updating properly or not.
  format:
    adapter: 'ref: adapter'
    vlan: 'ref: vlan'
  method: MonitorPerVLANPacketStat
  params:
    - adapter
    - vlan
  preprocess: PreProcessNestedParametersForAction
  sample_value:
    vmnicadapter: 'host.[1].vmnic.[1]'
    vlan: '21'
  type: action

check_dvfilter_packet:
  derived_components:
    - host
  description: check whether network-port filter statistics are updating properly or not
  format:
    switch: 'ref: switch'
  method: MonitorDVFilterPortStat
  params:
    - switch
  preprocess: PreProcessNestedParametersForAction
  sample_value:
    switch: 'vc.[1].vds.[1]'
  type: action

vlan:
  allowed_values:
    - 1-4096
  derived_components:
    - host
  description: vlan
  format: integer
  sample_value: 1
  type: parameter

configure_healthcheck:
  type: action
  derived_components:
    - host
  description: 'using net-dvs to configure vlanmtu value of healthcheck'
  method: ConfigureHealthcheck
  preprocess: PreProcessNestedParametersForAction
  params:
    - healthcheck_type
    - switch
    - trunked_vlans
  sample_value:
    switch: 'vc.[1].vds.[1]'
    trunked_vlans: '20_30to40'
    healthcheck_type: 'vlanmtu'

check_healthcheck_vlanmtu:
  derived_components:
    - host
  description: 'check healthcheck vlan and mtu parameters'
  params:
    - trunked_vlans
    - untrunked_vlans
    - switch
    - vmnicadapter
  sample_value:
    trunked_vlans: '20_30to40'
    untrunked_vlans: '1000_1003to1010'
    switch: 'vc.[1].vds.[1]'
    vmnicadapter: 'host.[1].vmnic.[1]'
  type: action
  method: CheckHealthcheckVLANMTU
  preprocess: PreProcessNestedParametersForAction
healthcheck_type:
  description: vlanmtu check or teaming check
  type: parameter
  format: string
  allowed_values:
    - vlanmtu
    - teaming
trunked_vlans: &vlan_range
  derived_components:
  - switch
  description: vlan range
  format: string
  sample_value: '10_20to30'
  type: parameter
untrunked_vlans: *vlan_range

check_localmtu_match:
  derived_components:
    - host
  description: 'check mtu match or not while healthcheck is enabled'
  params:
    - expected_result
    - switch
    - vmnicadapter
  sample_value:
    expected_match_result: 'MATCH'
    switch: 'vc.[1].vds.[1]'
    vmnicadapter: 'host.[1].vmnic.[1]'
  type: action
  method: CheckLocalMTUMatch
  preprocess: PreProcessNestedParametersForAction
check_teaming_match:
  derived_components:
    - host
  description: 'check teaming match or not while healthcheck is enabled'
  params:
    - expected_result
    - switch
  sample_value:
    expected_match_result: 'MATCH'
    switch: 'vc.[1].vds.[1]'
  type: action
  method: CheckTeamingMatch
  preprocess: PreProcessNestedParametersForAction
expected_match_result:
  description: 'match or not of healthcheck result against configuration'
  type: parameter
  format: string
  allowed_values:
    - MATCH
    - MISMATCH

install_nsx_components:
  derived_components:
    - host
  description: Install required VIBs on Host(Prepare Host)
  format:
    host_id: 'ref:host_id'
    credential:
      username: 'ref: username'
      password: 'ref: password'
      thumbprint: 'ref: thumbprint'
  method: install_nsx_components
  params:
    - credential
    - host_id
  preprocess: PreProcessNestedParametersForAction
  sample_value:
      host_id: 3f6a29eb-f8a7-11e4-ab2a-f5e20e2fc4a6
      credential:
        username: root
        password: ca$hc0w
        thumbprint: 3f6a29eb-f8a7-11e4-ab2a-f5e20e2fc4a6
  type: action

uninstall_nsx_components:
  derived_components:
    - host
  description: Uninstall VIBs from Host(Unprepare Host)
  format:
    host_id: 'ref:host_id'
    credential:
      username: 'ref: username'
      password: 'ref: password'
      thumbprint: 'ref: thumbprint'
  method: uninstall_nsx_components
  params:
    - credential
    - host_id
  preprocess: PreProcessNestedParametersForAction
  sample_value:
    host_id: 3f6a29eb-f8a7-11e4-ab2a-f5e20e2fc4a6
    credential:
      username: root
      password: ca$hc0w
      thumbprint: 3f6a29eb-f8a7-11e4-ab2a-f5e20e2fc4a6
  type: action

configure_stress:
  type: action
  description: set enable/disable to stressoptions on host
  derived_components:
    - host
  format:
    stress_options: 'ref: stress_options'
    operation: 'ref :operation'
  sample_value:
    stress_options : '%VDNetLib::TestData::StressTestData::TxWithNetVmxnet3KsegPartialRxBuf'
    operation: 'enable'
  method: configure_stress
  preprocess: PreProcessNestedParametersForAction

stress_options:
  derived_components:
    - host
  description: The stress options
  format: string
  sample_value: '%VDNetLib::TestData::StressTestData::TxWithNetVmxnet3KsegPartialRxBuf'
  type: parameter

port_status:
  derived_components:
    - host
  description:  Set the uplink port status of dvs to "down" or "up"
  type: action
  method: SetDVSUplinkPortStatus
  preprocess: PreProcessHashTypeAPI
  params:
    - switch
    - vmnicadapter
    - port_status
  format:
    switch: 'ref: switch'
    vmnicadapter: 'ref: vmnicadapter'
    port_status: 'ref: port_status'
  sample_value:
    switch: 'vc.[1].vds.[1]'
    vmnicapater: 'host.[1].vmnic.[1]'
    port_status:
      - 'down'
      - 'up'
      - 'down,up,down,up'

firewall:
  derived_components:
    - host
  description: "configure firewall rule"
  format: string
  method: ConfigureFirewallRule
  params:
    - firewall
    - service_name
    - operation
    - status
    - ipaddress
  preprocess: PreProcessHashTypeAPI
  sample_value: list
  allowed_values:
    - list
    - invalidsetdisabled
    - setenabled
    - setallowedall
    - setstatus
    - CheckIPExist
    - CheckRule
  type: action

read_pids:
  type: verification
  derived_components:
    - esx
    - kvm
  method: ReadPids
  preprocess: PreProcessVerification
  description: 'Reads process information'
  format: hash
  samplevalue:
     'mpa?defined': ''
  params:
    - read_pids

get_pid:
  type: verification
  derived_components:
    - esx
    - kvm
  description: Gets the pid of a specific process
  format: hash
  method: get_pid
  params:
    - execution_type
    - get_pid
    - process_name
  preprocess: PreProcessVerification
  sample_value:
    get_pid[?]not_contains:
        pid: 23154

get_process_status:
  type: verification
  derived_components:
    - esx
    - kvm
  description: Gets the status of the process.
  format: hash
  method: get_process_status
  params:
    - execution_type
    - get_process_status
    - process_name
  preprocess: PreProcessVerification
  sample_value:
    get_process_status[?]contains:
        status: Running

pid:
  derived_components:
    - esx
    - kvm
  description: Process identifier
  format: integer
  sample_value: 12041
  type: parameter

set_hostname:
  type: action
  description: Set given hostname
  derived_components:
    - esx
    - kvm
  format: string
  preprocess: PreProcessNestedParametersForAction
  method: set_hostname
  params:
    - execution_type
    - set_hostname
    - hostname

read_hostname:
  type: verification
  description: Get hostname
  derived_components:
    - esx
    - kvm
  format: string
  preprocess: PreProcessVerification
  method: read_hostname
  params:
    - execution_type
    - read_hostname

hostname:
  derived_components:
    - esx
    - kvm
  description: Hostname of a node
  format: string
  sample_value: 'host1.eng.vmware.com'
  type: parameter

get_node_interfaces:
  description: Get cluster node interfaces
  derived_components:
    - nsxmanager
  format: string
  method: get_node_interfaces
  params:
    - get_node_interfaces
  preprocess: PreProcessVerification
  sample_value:
    get_node_interfaces[?]contain_once:
      result_count: 2
      results:
        - interface_id: lo
          link_status: up
          admin_status: up
        - interface_id: mgmt
          link_status: up
          admin_status: up
  type: verification
