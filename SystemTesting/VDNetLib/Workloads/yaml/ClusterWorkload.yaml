---
admissioncontrol:
  allowed_values:
    - 1
    - 0
  derived_components:
    - cluster
  description: Used for admission control conf in Cluster
  format: boolean
  sample_value: 1
  type: parameter
advancedoptions:
  derived_components:
    - cluster
  description: Change HA configureation in given Cluster
  format:
    ignoreInsufficientHbDatastore: string
    maxFtVmsPerHost: integer
  sample_value:
    ignoreInsufficientHbDatastore: true
    maxSmpFtVmsPerHost: 1
  type: parameter
autoclaimstorage:
  description: VSAN should autoclaimstorage or not
  type: parameter
  format: boolean
  sample_value: 1
  derived_components:
    - cluster
  allowed_values:
    - 1
    - 0
cluster_id:
  derived_components:
    - cluster
    - transportnode
  description: Cluster mob id
  format: vdnet index
  method: ProcessParameters
  sample_value: 'vc.[1].datacenter.[1].cluster.[1]'
  type: parameter
clustername:
  derived_components:
    - cluster
  description: Name of given Cluster
  format: string
  sample_value: Cluster HA
  type: parameter
drs:
  allowed_values:
    - 1
    - 0
  derived_components:
    - cluster
    - netadapter
  description: Change DRS configureation in given Cluster
  format: boolean
  sample_value: 1
  type: parameter
editcluster:
  derived_components:
    - cluster
  description: Edit/Reconfigure Cluster settings
  format: string
  method: EditClusterSettings
  params:
    - ha
    - drs
    - vsan
    - admissioncontrol
    - failoverlevel
    - isolationresponse
    - waithaconf
    - vibs
    - vxlan
    - advancedoptions
    - autoclaimstorage
    - hosts
    - advancedoptions
  preprocess: PreProcessHashTypeAPI
  sample_value: edit
  type: action
failoverlevel:
  allowed_values:
    - 1-31
  derived_components:
    - cluster
  description: used to configure failover level in Cluster
  format: integer
  sample_value: 5
  type: parameter
forceaddhost:
  allowed_values:
    - true
    - false
  derived_components:
    - cluster
  description: Flag to enable/disable forcefull addition of host into cluster
  format: string
  sample_value: false
  type: parameter
ha:
  allowed_values:
    - 1
    - 0
  derived_components:
    - cluster
  description: Change HA configureation in given Cluster
  format: boolean
  sample_value: 1
  type: parameter
host:
  derived_components:
    - cluster
    - host
  description: Move hosts from Datacenter to given Cluster
  format: vdnet index
  method: GetMultipleComponentObjects
  sample_value: 'host.[1]'
  type: parameter
ippool:
  derived_components:
    - nsx
    - cluster
  description: IP Pool required for deploying controller. Controller fetches IPs from these pools
  format: vdnet index
  method: GetOneObjectFromOneTuple
  sample_value: 'vsm.[1].ippool.[1]'
  type: parameter
ipv4:
  allowed_values:
    - dhcp
    - pool
  derived_components:
    - cluster
    - netadapter
  description: IPaddress of VTEP Vmknics on this VDN Cluster
  format: string
  method: SetIPv4
  params:
    - ipv4
    - netmask
  preprocess: IPv4PreProcess
  sample_Value: dhcp
  type: action
isolationresponse:
  allowed_values:
    - none
    - poweron
    - poweroff
  derived_components:
    - cluster
  description: Used to configure isolation response in Cluster
  format: string
  sample_value: poweron
  type: parameter
movehostsfromcluster:
  derived_components:
    - cluster
  description: Move hosts from Cluster to given Datacenter
  format: vdnet index
  method: MoveHostsFromCluster
  params:
    - movehostsfromcluster
  preprocess: PreProcessHosts
  sample_value: 'host.[1]'
  type: action
movehoststocluster:
  derived_components:
    - cluster
  description: Move hosts from Datacenter to given Cluster
  format: vdnet index
  method: MoveHostsToCluster
  params:
    - movehoststocluster
  preprocess: PreProcessHosts
  sample_value: 'host.[1]'
  type: action
mtu:
  allowed_values:
    - 1500-9000
  derived_components:
    - cluster
    - vds
    - vss
    - switch
  description: MTU for VXLAN VDSes on this VDN Cluster
  format: integer
  sample_value: 1500
  type: parameter
profile:
  derived_components:
    - cluster
    - nsx
  description: Upgrades VSM to specified build
  format: string
  method: Upgrade
  params:
    - cluster
  preprocess: PreProcessShiftTypeAPI
  sample_value: update
  type: action
reboot:
  allowed_values:
    - yes
    - no
  derived_components:
    - cluster
    - Host
    - VM
  description: 'Flag to reboot all hosts in a cluster after vib upgrade '
  format: string
  sample_value: yes
  type: parameter
rebootallclusterhostsinparallel:
  derived_components:
    - cluster
  description: Reboot hosts in a given Cluster in parallel
  format: vdnet index
  method: RebootAllClusterHostsInParallel
  params:
    - rebootallclusterhostsinparallel
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1]'
  type: action
reboothostsincluster:
  derived_components:
    - cluster
  description: Reboot hosts in a given Cluster
  format: vdnet index
  method: RebootHostsInCluster
  params:
    - reboothostsincluster
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1]'
  type: action
removehostsfromcluster:
  derived_components:
    - cluster
  description: Remove hosts from a given Cluster
  format: vdnet index
  method: RemoveHostsFromCluster
  params:
    - removehostsfromcluster
  preprocess: ConstructArrayOfObjects
  sample_value: 'host.[1]'
  type: action
removeresourcepool:
  derived_components:
    - cluster
  description: Method to create a resource pool
  format: vdnet index
  method: RemoveResourcePool
  params:
    - resourcepool
  postprocess: RemoveSubComponentObjects
  preprocess: ConstructArrayOfObjects
  sample_value: 'vc.[1].datacenter.[1].cluster.[1]'
  type: action
resolve:
  description: Resolves vib installation/upgrade issues
  type: action
  method: Resolve
  preprocess: PreProcessShiftTypeAPI
  params:
    - resolve
    - hosts
  format:
    - string
  sample_value: resolve
  derived_components:
    - cluster
resourcepool:
  derived_components:
    - datacenter
    - cluster
  description: Method to create a resource pool
  format: vdnet index
  linkedworkload: ResourcePoolWorkload
  method: CreateResourcePool
  params:
    - resourcepool
  postprocess: StoreSubComponentObjects
  preprocess: TransformSubComponentSpec
  sample_value: 'vc.[1].datacenter.[1].cluster.[1]'
  type: component
teaming:
  allowed_values:
    - FAILOVER_ORDER
    - ETHER_CHANNEL
    - LACP
  derived_components:
    - switch
    - cluster
  description: Teaming Policy of VXLAN VDS on this VDN Cluster
  format: string
  method: PickRandomElementFromArray
  sample_value: ETHER_CHANNEL
  type: parameter
vc_id:
  derived_components:
    - cluster
    - transportnode
  description: VC UUID
  format: vdnet index
  method: ProcessParameters
  sample_value: 'vc.[2]'
  type: parameter
verifyupgradestatus:
  derived_components:
    - cluster
  description: verifies the upgrade status of a feature
  format:
    updateAvailable: string
  method: GetUpgradeStatus
  params:
    - verifyupgradestatus
  preprocess: PreProcessVerification
  sample_value:
    updateAvailable: true
  type: verification
vibs:
  allowed_values:
    - install
    - uninstall
  derived_components:
    - cluster
  description: vibs to be pushed on this cluster
  format: string
  sample_value: install
  type: parameter
vlan:
  derived_components:
    - nsx
    - cluster
  description: Transport VLAN for VXLAN on this VDN Cluster
  format: integer
  method: PickRandomElementFromArray
  sample_value: 10
  type: parameter
vmkniccount:
  derived_components:
    - cluster
  description: No of VTEP vmknics per host in this VDN Cluster
  format: integer
  sample_vlaue: 4
  type: parameter
vsan:
  description: Change VSAN configureation in given Cluster
  type: parameter
  format: boolean
  sample_value: 1
  derived_components:
    - cluster
  allowed_values:
    - 1
    - 0
vxlan:
  allowed_values:
    - configure
    - unconfigure
  derived_components:
    - nsx
    - cluster
  description: Configure/Unconfigure VXLAN on a cluster
  format: string
  method: ConfigureVXLAN
  params:
    - vxlan
    - mtu
    - vlan
    - teaming
    - vmkniccount
    - ippool
  preprocess: PreProcessHashTypeAPI
  sample_value: configure
  type: action
waithaconf:
  allowed_values:
    - 1
    - 0
  derived_components:
    - cluster
  description: Used for waiting ha configuration in host added to cluster
  format: boolean
  sample_value: 1
  type: parameter

cluster_status:
  derived_components:
    - cluster
  description: Get the cluster status for verification
  method: status
  params:
    - cluster_status
  preprocess: PreProcessVerification
  type: verification
  format:
    'control_cluster_status[?]equal_to': 'stable'
    'mgmt_cluster_status[?]equal_to': 'stable'

wait_for_required_cluster_status:
  derived_components:
    - cluster
  description: Monitor cluster status for requested status
  method: wait_for_required_cluster_status
  params:
    - wait_for_required_cluster_status
  preprocess: PreProcessHashTypeAPI
  type: action
  format:
    'required_status': 'STABLE'
    'time_to_monitor': '120'

get_cluster_members:
  derived_components:
    - nsxmanager
  description: Get all the members of a cluster for verification
  method: query
  params:
    - get_cluster_members
  preprocess: PreProcessVerification
  type: verification
  format:
    result_count: 2
    results:
      - id: 4230FABC-BBE4-C3B4-0013-BE238AD09F8E
      - id: 42309790-C82A-8C0C-92EF-A25B202A91A5

mgmt_cluster_listen_addr:
  derived_components:
    - cluster
  description: ip address of node
  format: string
  method: PreProcessNestedParameters
  sample_value: false
  type: parameter

manager_role:
  derived_components:
    - cluster
  description: role of a manager
  format: string
  sample_value: false
  type: parameter
  method: PreProcessNestedParameters

master_broker_node_vmstate:
  type: action
  derived_components:
    - cluster
  method: ChangeMasterBrokerNodeVMState
  preprocess: PreProcessShiftTypeAPI
  description: 'Power on/off, suspend/resume specified VM'
  format:
     'managers': vdnet index
     'ipaddress': ip address
     'master_broker_node_vmstate': string
  samplevalue:
     'managers': nsxmanager.[-1]
     'ipaddress': 'esx.[1]->read_master_broker_ip->master_broker_ip'
     'master_broker_node_vmstate': reboot
  params:
    - managers
    - ipaddress
    - master_broker_node_vmstate

state_synch_node_id:
  derived_components:
    - cluster
  description: Get state synch node Id
  format: string
  sample_value: '564D6647-86CB-8891-2174-4AD4487DA065'
  type: parameter

state_synch_node_vmstate:
  type: action
  derived_components:
    - cluster
  method: ChangeStateSynchNodeVMState
  preprocess: PreProcessShiftTypeAPI
  description: 'Power on/off, suspend/resume specified VM'
  format:
     'managers': vdnet index
     'ipaddress': ip address
     'state_synch_node_vmstate': string
  samplevalue:
     'managers': nsxmanager.[-1]
     'ipaddress': 'nsxmanager.[1].state_synch_node.[1]->read->ipaddress'
     'state_synch_node_vmstate': poweron
  params:
    - managers
    - ipaddress
    - state_synch_node_vmstate

non_state_synch_node_vmstate:
  type: action
  derived_components:
    - cluster
  method: ChangeNonStateSynchNodeVMState
  preprocess: PreProcessShiftTypeAPI
  description: 'Power on/off, suspend/resume specified VM'
  format:
     'managers': vdnet index
     'ipaddress': ip address
     'non_state_synch_node_vmstate': string
  samplevalue:
     'managers': nsxmanager.[-1]
     'ipaddress': 'nsxmanager.[1].state_synch_node.[1]->read->ipaddress'
     'non_state_synch_node_vmstate': poweron
  params:
    - managers
    - ipaddress
    - non_state_synch_node_vmstate

ptep_cluster:
  description: IDs of ESXs
  format: array of strings
  method: ProcessParameters
  type: parameter
  sample_value: ["host-1", "host-2"]
  derived_component:
     - ptep

ptep_cluster_entry:
  description: ID of ESX
  format: string
  method: ProcessParameters
  type: parameter
  sample_value: "host-1"
  derived_component:
     - ptep

all_non_state_synch_nodes:
  description: Whether to block traffic from all non-state synch nodes
  format: boolean
  type: parameter
  sample_value: true/false
  derived_component:
     - cluster

network_partition_state_synch_node:
  type: action
  derived_components:
    - nsxmanager
  method: NetworkPartitionStateSynchNode
  preprocess: PreProcessShiftTypeAPI
  description: Block traffic of state synch node to controller nodes
  format:
     'managers': vdnet index
     'ipaddress': ip address
     'controllers': vdnet index
     'network_partition_state_synch_node': string
  samplevalue:
     'managers': nsxmanager.[-1]
     'ipaddress': 'nsxmanager.[1].state_synch_node.[1]->read->ipaddress'
     'controllers': nsxcontroller.[-1]
     'network_partition_state_synch_node': 'set'
  params:
    - managers
    - ipaddress
    - controllers
    - network_partition_state_synch_node

network_partition_non_state_synch_node:
  type: action
  derived_components:
    - nsxmanager
  method: NetworkPartitionNonStateSynchNode
  preprocess: PreProcessShiftTypeAPI
  description: Block traffic of non-state synch node to controller nodes
  format:
     'managers': vdnet index
     'ipaddress': ip address
     'controllers': vdnet index
     'all_non_state_synch_nodes': boolean
     'network_partition_state_synch_node': string
  samplevalue:
     'managers': nsxmanager.[-1]
     'ipaddress': 'nsxmanager.[1].state_synch_node.[1]->read->ipaddress'
     'controllers': nsxcontroller.[-1]
     'all_non_state_synch_nodes': true
     'network_partition_state_synch_node': 'set'
  params:
    - managers
    - ipaddress
    - controllers
    - all_non_state_synch_nodes
    - network_partition_non_state_synch_node

revoke_cluster_node:
  derived_components:
    - nsxmanager
  description: revokes missing nsx nodes from cluster
  format:
     'hosts':
         - vdnet index
         - vdnet index
  method: revoke_cluster_node
  params:
    - revoke_cluster_node
  preprocess: PreProcessShiftTypeAPI
  sample_value:
    'hosts':
       - nsxmanager.[1]
       - nsxmanager.[2]
  type: action

get_bridge_cluster_status:
  type: verification
  preprocess: PreProcessVerification
  method: get_bridge_cluster_status
  derived_components:
    - bridgecluster
  format:
    -'get_bridge_cluster_status':
        'id_[?]equal_to': vdnet index
        'health_status_[?]equal_to': string
  sample_value:
    -'get_bridge_cluster_status':
        'id_[?]equal_to': nsxmanager.[1].bridgecluster.[1]
        'health_status_[?]equal_to': 'UP'

bridge_nodes:
  type: parameter
  description: 'list of bridge nodes to be added in cluster'
  derived_components:
    - bridgecluster
  method: PreProcessNestedParameters
  format: array
  sample_value:
    - nsxmanager.[1].transportnodes.[1]->id

health_status:
  type: parameter
  description: 'health status of bridge cluster'
  derived_components:
    - bridgecluster
  format: string
  allowed_values:
    - UP
    - DOWN
    - DEGRADED
    - UNKNOWN
  sample_value: 'UP'

update:
  derived_components:
    - bridgecluster
  description: 'Reconfigures bridge cluster'
  format:
    name: 'ref: name'
    bridge_nodes: 'ref: bridge_nodes'
  method: UpdateComponent
  params:
    - update
  preprocess: PreProcessNestedParametersForAction
  sample_value:
    name: 'bridge_cluster1'
    bridge_nodes:
      - nsxmanger.[1].transportnode.[1]->id
        nsxmanger.[1].transportnode.[2]->id
  type: action
