#!/usr/bin/perl
#########################################################################
# Copyright (C) 2013 VMWare, Inc.
# # All Rights Reserved
#########################################################################
package TDS::NSX::Networking::VirtualRouting::FunctionalTds;

use FindBin;
use lib "$FindBin::Bin/..";
use lib "$FindBin::Bin/../..";
use TDS::Main::VDNetMainTds;
use VDNetLib::TestData::TestbedSpecs::TestbedSpec;
@ISA = qw(TDS::Main::VDNetMainTds);

# Test constants
use constant TRAFFIC_TESTDURATION => "60";
use constant STRESS_ITERATIONS => "1";

# Import Workloads which are very common across all tests
use TDS::NSX::Networking::VirtualRouting::CommonWorkloads ':AllConstants';
use TDS::NSX::Networking::VirtualRouting::TestbedSpec;

{
%Functional = (
   'RoutingBridgingSanity_SameHost' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "JumboSanityTest_SameHost",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "This is the vdr datapath sanity testcase for vms on same host ",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_OneVDS_FourDVPG_ThreeHost_ThreeVM,
      'WORKLOADS' => {
         Sequence => [
            #['SetSegmentIDRange'],
            #          ['SetMulticastRange'],
            #          ['DeployFirstController'],
            #          ['Install_Config_ClusterSJC'],
                      #['Install_Config_ClusterSJC2'],
                      ['CreateNetworkScope'],
                      #['Expand_TZ'],
                      ['CreateVirtualWires'],

                      ########   Same Host   ########
                      ## VXLAN test - VMs on same vWire
                      ['AddvNICsOnVMs'],
                      ['PoweronVM1','PoweronVM2'],
                      ['MakeSurevNICConnected'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2SamevWire'],
                      ['PingTest'],
                      ['NetperfTestIgnorethroughput'],

                      ['DeployEdge'],
                      ['CreateVXLANLIF1'],
                      ['CreateVXLANLIF2'],
                      ['CreateVLANLIF3'],
                      ['CreateVLANLIF4'],
                      ['BridgevWire3ToVLAN21'],

                      # VDR test - VXLAN to VXLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM2'],
                      ['PingTest'],
                      ['NetperfTestIgnorethroughput'],

                       # VDR test - VLAN to VLAN rotuing
                       ['PlaceVM1OnVLAN16','PlaceVM2OnVLAN17'],
                       ['SetVLANIPVM1','SetVLANIPVM2'],
                       ['AddVLANRouteVM1','AddVLANRouteVM2'],
                       ['PingTest'],
                       ['NetperfTestIgnorethroughput'],

                       # VDR test - VXLAN to VLAN rotuing
                       ['PlaceVM1OnvWire1','PlaceVM2OnVLAN17'],
                       ['SetVXLANIPVM1','SetVLANIPVM2'],
                       ['AddVXLANRouteVM1','AddVLANRouteVM2'],
                       ['PingTest'],
                       ['NetperfTestIgnorethroughput'],

                       # VDR test - VLAN to VXLAN rotuing
                       ['PlaceVM2OnvWire2','PlaceVM1OnVLAN16'],
                       ['SetVLANIPVM1','SetVXLANIPVM2'],
                       ['AddVLANRouteVM1','AddVXLANRouteVM2'],
                       ['PingTest'],
                       ['NetperfTestIgnorethroughput'],

                       # VDR test - Briding
                       ['PlaceVM1OnvWire3','PlaceVM2OnVLAN21'],
                       ['SetVXLANBridgeIPVM1','SetVLANBridgeIPVM2'],
                       ['PingTest'],
                       ['NetperfTestIgnorethroughput'],
                     ],
         ExitSequence => [
                       ['DeleteEdges'],
                       ['RemovevNICFromVM1'],
                       ['RemovevNICFromVM2'],
                       ['RemovevNICFromVM3'],
                       ['Delete_All_VirtualWires'],
                       ['DeleteNetworkScope'],
                       #  ['Uninstall_VDNCluster'],
                       #      # ['DeleteController'],
                       #['RebootHost2', 'RebootHost3'],
                         ],
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
         'DeleteController' => DELETE_ALL_CONTROLLERS,
         'DeleteNetworkScope' => DELETE_ALL_NETWORKSCOPES,
         'Install_Config_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'Install_Config_ClusterSJC2' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC2_VDS1,
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         "Expand_TZ" => {
            Type  => "TransportZone",
            TestTransportZone   => "vsm.[1].networkscope.[1]",
            transportzoneaction => "expand",
            clusters            => "vc.[1].datacenter.[1].cluster.[3]",
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnVLAN16' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM2OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM2OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[3]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.11",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeleteEdges" => DELETE_ALL_EDGES,
         'CreateVXLANLIF1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[2]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF3' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[3]'   => {
                  name        => "lif-16-$$",
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.16.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF4' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[4]'   => {
                  name        => "lif-17-$$",
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.17.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'BridgevWire3ToVLAN21' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  portgroup   => "vc.[1].dvportgroup.[4]",
               },
            },
         },
         "SetVLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.17.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.16.1.1",
         },
         "AddVLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.6',
            netmask    => "255.255.0.0",
         },
         "SetVXLANBridgeIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.32.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "netperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => "60",
            ExpectedResult => "ignore",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'AddvNICsOnVMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnected' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
         'CreateVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            VirtualWire       => {
               "[1]" => {
                  name               => "AutoGenerate",
                  tenantid           => "1",
               },
               "[2]" => {
                  name               => "AutoGenerate",
                  tenantid           => "2",
               },
               "[3]" => {
                  name               => "AutoGenerate",
                  tenantid           => "3",
               },
            },
         },
         'GetVirtualWireID' => {
            Type            => "Switch",
            FindType            => "Switch",
            testvirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'DeleteVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            deletevirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1-3]",
         },
         'UnconfigureVXLAN' => {
            Type             => 'Cluster',
            testcluster      => "vsm.[1].vdncluster.[1]",
            vxlan            => "unconfigure",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
      },
   },

   'RoutingBridgingSanity_DifferentHost' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "JumboSanityTest_DifferentHost",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "This is the vdr datapath sanity testcase for different hosts ",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_OneVDS_FourDVPG_ThreeHost_ThreeVM,
      'WORKLOADS' => {
         Sequence => [
            #['SetSegmentIDRange'],
            #          ['SetMulticastRange'],
                      #   ['DeployFirstController'],
                      #          ['Install_Config_ClusterSJC'],
                      #['Install_Config_ClusterSJC2'],
                      ['CreateNetworkScope'],
                      #['Expand_TZ'],
                      ['CreateVirtualWires'],

                      ['AddvNICsOnVMs'],
                      ['PoweronVM1','PoweronVM2'],
                      ['MakeSurevNICConnected'],

                      ['DeployEdge'],
                      ['CreateVXLANLIF1'],
                      ['CreateVXLANLIF2'],
                      ['CreateVLANLIF3'],
                      ['CreateVLANLIF4'],
                      ['BridgevWire3ToVLAN21'],

                      ########   Different Host   ########
                      ['PoweronVM3'],
                      # VXLAN test - VMs on same vWire
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire1'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3SamevWire'],
                      ['PingTestDifferentHost'],
                      ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VXLAN to VXLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VLAN to VLAN rotuing
                      ['PlaceVM1OnVLAN16','PlaceVM3OnVLAN17'],
                      ['SetVLANIPVM1','SetVLANIPVM3'],
                      ['AddVLANRouteVM1','AddVLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VXLAN to VLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM3OnVLAN17'],
                      ['SetVXLANIPVM1','SetVLANIPVM3'],
                      ['AddVXLANRouteVM1','AddVLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VLAN to VXLAN rotuing
                      ['PlaceVM3OnvWire2','PlaceVM1OnVLAN16'],
                      ['SetVLANIPVM1','SetVXLANIPVM3'],
                      ['AddVLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - Briding
                      ['PlaceVM1OnvWire3'],
                      ['PlaceVM3OnVLAN21'],
                      ['SetVXLANBridgeIPVM1','SetVLANBridgeIPVM3'],
                      ['PingTestDifferentHost'],
                      ['NetperfTestDifferentHostIgnoreThroughput'],
                     ],
         ExitSequence => [
                      ['DeleteEdges'],
                      #['DeleteController'],
                       ['RemovevNICFromVM1'],
                       ['RemovevNICFromVM2'],
                       ['RemovevNICFromVM3'],
                       ['Delete_All_VirtualWires'],
                       ['DeleteNetworkScope'],
                       #['Uninstall_VDNCluster'],
                       #  # ['DeleteController'],
                       # ['RebootHost2', 'RebootHost3'],
                      #['RebootHost'],
                      ],
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
         'DeleteController' => DELETE_ALL_CONTROLLERS,
         'DeleteNetworkScope' => DELETE_ALL_NETWORKSCOPES,
         'Install_Config_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'Install_Config_ClusterSJC2' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC2_VDS1,
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         "Expand_TZ" => {
            Type  => "TransportZone",
            TestTransportZone   => "vsm.[1].networkscope.[1]",
            transportzoneaction => "expand",
            clusters            => "vc.[1].datacenter.[1].cluster.[3]",
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnVLAN16' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM2OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM3OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM2OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVM3OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[3]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.11",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeleteEdges" => DELETE_ALL_EDGES,
         'CreateVXLANLIF1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[2]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF3' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[3]'   => {
                  name        => "lif-16-$$",
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.16.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF4' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[4]'   => {
                  name        => "lif-17-$$",
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.17.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'BridgevWire3ToVLAN21' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  portgroup   => "vc.[1].dvportgroup.[4]",
               },
            },
         },
         "SetVLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.17.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.16.1.1",
         },
         "AddVLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "AddVLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.6',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANBridgeIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.32.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "SamevWireNetperfTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound   => 1,
            l3protocol    => "ipv4,ipv6",
            l4protocol    => "tcp,udp",
            TestDuration   => "60",
            # Test might run on vESX also
            MinExpResult   => "1",
         },
         "PingTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "netperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => "60",
            ExpectedResult => "ignore",
         },
         "NetperfTestDifferentHostIgnoreThroughput" => {
            Type           => "Traffic",
            ToolName       => "netperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => "60",
            # Test might run on vESX also
            ExpectedResult => "ignore",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'AddvNICsOnVMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnected' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
         'CreateVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            VirtualWire       => {
               "[1]" => {
                  name               => "AutoGenerate",
                  tenantid           => "1",
               },
               "[2]" => {
                  name               => "AutoGenerate",
                  tenantid           => "2",
               },
               "[3]" => {
                  name               => "AutoGenerate",
                  tenantid           => "3",
               },
            },
         },
         'GetVirtualWireID' => {
            Type            => "Switch",
            FindType            => "Switch",
            testvirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'DeleteVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            deletevirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1-3]",
         },
         'UnconfigureVXLAN' => {
            Type             => 'Cluster',
            testcluster      => "vsm.[1].vdncluster.[1]",
            vxlan            => "unconfigure",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
      },
   },

   'EdgeActionsRedeployForceSyncRebootHA' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "EdgeActionsRedeployForceSyncRebootHA",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Verify data traffic after redeploying vdr edge",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_TwoVDS_FiveHost_SixVM,
      'WORKLOADS' => {
         Sequence => [
                       ['MoveHostsToClusterSJC'],
                       ['MoveHostsToClusterSFO'],

                       # ['SetSegmentIDRange'],
                       # ['SetMulticastRange'],
                       #['DeployFirstController'],
                       ['Install_Configure_ClusterSJC','Install_Configure_ClusterSFO'],
                        # ['Deploy2ndController','Deploy3rdController'],
                       ['CreateNetworkScopeClusterSJCandSFO'],
                       ['CreateVirtualWires'],

                       ########   Same Cluster  ########
                       # VXLAN test - VMs on same vWire
                       ['AddvNICsOn1to3VMs','AddvNICsOn4to6VMs'],
                       ['PoweronVM1','PoweronVM2'],
                       ['MakeSurevNICConnectedVM1andVM2'],
                       ['SetIPVM1VWire1','SetIPVM2VWire1'],
                       ['PingTest'],
                   # ['NetperfTestIgnorethroughput'],

                       ['DeployEdge'],
                       ['CreateVXLANLIF1'],
                       ['CreateVXLANLIF2'],
                       ['CreateVXLANLIF3'],

                       ['CreateBridges'],

                          # VDR test - VXLAN to VXLAN rotuing
                       ['PlaceVM1OnvWire1','PlaceVM2OnvWire2'],
                       ['SetIPVM1VWire1','SetIPVM2VWire2'],
                       ['AddRouteVM1VWire1','AddRouteVM2VWire2'],
                       ['PingTest'],
                      # ['NetperfTestIgnorethroughput'],

                      # We need this for TrinityFebUpdate release so not removing
                      # VDR test - VLAN to VLAN rotuing
                      # ['CreateVLANLIFs'],
                      # ['PlaceVM1OnVLAN16_VDS1','PlaceVM2OnVLAN17_VDS1'],
                      # ['SetIPVM1VLAN16','SetIPVM2VLAN17'],
                      # ['AddRouteVM1VLAN16','AddRouteVM2VLAN17'],
                      # ['PingTest'],
                      # # ['NetperfTestIgnorethroughput'],

                      # # VDR test - VXLAN to VLAN rotuing
                      #  ['PlaceVM1OnvWire1','PlaceVM2OnVLAN17_VDS1'],
                      #  ['SetIPVM1VWire1','SetIPVM2VLAN17'],
                      #  ['AddRouteVM1VWire1','AddRouteVM2VLAN17'],
                      #  ['PingTest'],
                      # # # ['NetperfTestIgnorethroughput'],

                      #  # VDR test - VLAN to VXLAN rotuing
                      #  ['PlaceVM2OnvWire2','PlaceVM1OnVLAN16_VDS1'],
                      #  ['SetIPVM2VWire2','SetIPVM1VLAN16'],
                      #  ['AddRouteVM1VLAN16','AddRouteVM2VWire2'],
                      #  ['PingTest'],
                      # # ['NetperfTestIgnorethroughput'],

                       # VDR test - Briding
                       ['PlaceVM1OnvWire4','PlaceVM2OnVLAN21_VDS1'],
                       ['SetIPVM1VWire4','SetIPVM2VLAN21'],
                       ['PingTest'],
                       # ['NetperfTestIgnorethroughput'],

                       ########  Different Cluster ########
                       ['PoweronVM3','PoweronVM4','PoweronVM5','PoweronVM6'],
                       # VXLAN test - VMs on same vWire
                       ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                        'PlaceVM3OnvWire1','PlaceVM4OnvWire1',
                        'PlaceVM5OnvWire1','PlaceVM6OnvWire1'],
                       ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire1',
                        'SetIPVM4VWire1','SetIPVM5VWire1','SetIPVM6VWire1'],
                       ['PingTestVM1ToAllOthers'],
                       ['PingTest3VMsToOther3VMs'],
                       #['NetperfTestVM1ToAllOthers'],
                       #['NetperfTest3VMsToOther3VMs'],

                       # 2 VMs on vWire1, 2 on vWire2, 2 on vWire3
                       ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                        'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                        'PlaceVM5OnvWire3','PlaceVM6OnvWire3'],
                       ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire2',
                        'SetIPVM4VWire2','SetIPVM5VWire3','SetIPVM6VWire3'],
                       ['AddRouteVM1VWire1','AddRouteVM2VWire1',
                        'AddRouteVM3VWire2','AddRouteVM4VWire2',
                        'AddRouteVM5VWire3','AddRouteVM6VWire3'],
                       ['PingTestVM1ToAllOthers'],

                       ['ReDeployEdge'],

                       ###2 VMs on vWire1, 2 on vWire2, 2 on vWire3
                       ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                        'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                        'PlaceVM5OnvWire3','PlaceVM6OnvWire3'],
                       ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire2',
                        'SetIPVM4VWire2','SetIPVM5VWire3','SetIPVM6VWire3'],
                       ['AddRouteVM1VWire1','AddRouteVM2VWire1',
                        'AddRouteVM3VWire2','AddRouteVM4VWire2',
                        'AddRouteVM5VWire3','AddRouteVM6VWire3'],
                       ['PingTestVM1ToAllOthers'],
                      # ['NetperfTestVM1ToAllOthers'],
                      # ['NetperfTest3VMsToOther3VMs'],
                      # ['ForceSyncEdge'],
                      #['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                      # 'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                      # 'PlaceVM5OnvWire3','PlaceVM6OnvWire3'],
                      #['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire2',
                      # 'SetIPVM4VWire2','SetIPVM5VWire3','SetIPVM6VWire3'],
                      #['AddRouteVM1VWire1','AddRouteVM2VWire1',
                      # 'AddRouteVM3VWire2','AddRouteVM4VWire2',
                      # 'AddRouteVM5VWire3','AddRouteVM6VWire3'],
                      #['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],

		      #['RebootEdgeHost'],
                      #['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                      # 'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                      # 'PlaceVM5OnvWire3','PlaceVM6OnvWire3'],
                      #['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire2',
                      # 'SetIPVM4VWire2','SetIPVM5VWire3','SetIPVM6VWire3'],
                      #['AddRouteVM1VWire1','AddRouteVM2VWire1',
                      # 'AddRouteVM3VWire2','AddRouteVM4VWire2',
                      # 'AddRouteVM5VWire3','AddRouteVM6VWire3'],
                      #['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],

                      # ['EnableEdgeSpecificHA'],
                      #['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                      # 'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                      # 'PlaceVM5OnvWire3','PlaceVM6OnvWire3'],
                      #['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire2',
                      # 'SetIPVM4VWire2','SetIPVM5VWire3','SetIPVM6VWire3'],
                      #['AddRouteVM1VWire1','AddRouteVM2VWire1',
                      # 'AddRouteVM3VWire2','AddRouteVM4VWire2',
                      # 'AddRouteVM5VWire3','AddRouteVM6VWire3'],
                      #['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],
                      # 1 VM on VLAN16, 2 on VLAN17,
                      # 5 on vWire3, 6 on VLAN18
                      #['PlaceVM1OnVLAN16_VDS1','PlaceVM2OnVLAN17_VDS1',
                      # 'PlaceVM5OnvWire3','PlaceVM6OnVLAN18_VDS1'],
                      #['SetIPVM1VLAN16','SetIPVM2VLAN17',
                      # 'SetIPVM5VWire3','SetIPVM6VLAN18'],
                      #['AddRouteVM1VLAN16','AddRouteVM2VLAN17',
                      #'AddRouteVM5VWire3','AddRouteVM6VLAN18'],
                      #['PingTest2VMsToOther2VMs'],
                      #['NetperfTest2VMsToOther2VMs'],
                     ],
         ExitSequence => [
                      ['DeleteEdges'],
                      ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3','RemovevNICFromVM4',
                       'RemovevNICFromVM5','RemovevNICFromVM6'],
                      ['Delete_All_VirtualWires'],
                      ['DeleteNetworkScopes'],
                      ['Uninstall_VDNCluster'],
                      # # ['DeleteController'],
                      ["RemoveHostsFromClusterSJC","RemoveHostsFromClusterSFO"],
                      ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                    ],
         'CreateVirtualWires' => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'Install_Configure_ClusterSFO' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSFO_VDS2_VLAN22_MTU9000_FAILOVER_VMKNIC4,
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange'    => SET_MULTICAST_RANGE,
         "DeployFirstController"=> DEPLOY_FIRSTCONTROLLER,
         'DeleteVirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'DeleteEdges' => DELETE_ALL_EDGES,
         'DeleteController' => DELETE_ALL_CONTROLLERS,
         'ResetSegmentID' => RESET_SEGMENTID,
         'ResetMulticast' => RESET_MULTICASTRANGE,
         'CreateVXLANLIF1' => CREATEVXLANLIF1,
         'CreateVXLANLIF2' => CREATEVXLANLIF2,
         'CreateVXLANLIF3' => CREATEVXLANLIF3,
         'CreateVLANLIF1' => CREATEVLANLIF1,
         'CreateVLANLIF2' => CREATEVLANLIF2,
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "MoveHostsToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[2],host.[3]",
         },
         "RemoveHostsFromClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsFromCluster => "host.[2],host.[3]",
         },
         "RemoveHostsFromClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsFromCluster => "host.[4],host.[5]",
         },
         "ReDeployEdge"   => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            applianceaction => "redeploy",
         },
         "EnableHAandDRSOnClusterSJCandSFO" => {
             Type => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2-3]",
             EditCluster => "edit",
             HA   => 1,
             DRS  => 1,
         },
         'PrepClusterSFO' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[3]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
               },
            },
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM4OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM5OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM6OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM4OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM5OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM6OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM2OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM4OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM5OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM6OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnvWire4' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[4]",
         },
         'PlaceVM6OnVLAN18_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM1OnVLAN16_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'PlaceVM2OnVLAN17_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM3OnVLAN16_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[7]",
         },
         'PlaceVM4OnVLAN17_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[8]",
         },
         'PlaceVM2OnVLAN21_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVM3OnVLAN21_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.13",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'CreateBridges' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[4]",
                  portgroup   => "vc.[1].dvportgroup.[5]",
               },
               '[2]'   => {
                  name        => "bridge-2-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[5]",
                  portgroup   => "vc.[1].dvportgroup.[6]",
               },
            },
         },
         "SetIPVM1VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM1VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN21" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM1VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM5VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM6VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddRouteVM1VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM2VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM3VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM4VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM1VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM2VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM3VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM4VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM1VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM2VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM3VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM4VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM5VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM6VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "SetIPVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.31.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.31.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.31.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.32.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.32.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.32.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.32.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.33.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire4" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.33.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.33.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.33.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.33.1.65',
            netmask    => "255.255.0.0",
         },
         "AddRouteVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "SamevWireNetperfTestDifferentCluster" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            l3protocol     => "ipv4,ipv6",
            l4protocol     => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            maxtimeout     => "128000",
            MinExpResult   => "1",
         },
         "PingTestSameCluster1" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestSameCluster2" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[3].vnic.[1]",
            SupportAdapter => "vm.[4].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM1ToAllOthers" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            ParallelSession=> "yes",
            TestDuration   => "60",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            ParallelSession=> "yes",
            TestDuration   => "60",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "iperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestVM1ToAllOthers" => {
            Type           => "Traffic",
            ToolName       => "Netperf,Iperf,Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 10,
            NoofInbound    => 3,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            ParallelSession=> "yes",
            maxtimeout     => "128000",
         },
         "NetperfTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            L4Protocol     => "tcp,udp",
            SendMessageSize=> "16384,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            SendMessageSize=> "16384,96684,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         'DeleteAllVmknics' => {
            Type         => "Host",
            TestHost     => "host.[2-5]",
            deletevmknic => "host.[2-5].vmknic.[-1]",
         },
         'AddVmotionvmknicsHost2and3' => {
            Type         => "Host",
            TestHost     => "host.[2-3]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[1]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         'AddVmotionvmknicsHost4and5' => {
            Type         => "Host",
            TestHost     => "host.[4-5]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[6]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[3]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[2]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweronVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweron",
         },
         'PoweronVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweron",
         },
         'PoweronVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'AddvNICsOn1to3VMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOn4to6VMs' => {
            Type   => "VM",
            TestVM => "vm.[4],vm.[5],vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOn1to4VMs' => {
            Type   => "VM",
            TestVM => "vm.[5],vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnectedVM1andVM2' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1To3' => {
            Type       => "VM",
            TestVM     => "vm.[1-3]",
            deletevnic => "vm.[x].vnic.[1]",
         },
         'RemovevNICFromVM4To6' => {
            Type       => "VM",
            TestVM     => "vm.[4-6]",
            deletevnic => "vm.[x].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'CreateNetworkScopeClusterSJCandSFO' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2-3]",
               },
            },
         },
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },

   '2Cluster2VDSAllVXLANRoutingCombos1' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "2Cluster2VDSAllVXLANRoutingCombos1",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Verify different VXLAN routing combos with 1 cluster and 1 vds ",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_TwoVDS_FiveHost_SixVM,
      'WORKLOADS' => {
         Sequence => [
                      ['MoveHostsToClusterSJC'],
                      ['MoveHostsToClusterSFO'],

                      #  ['SetSegmentIDRange'],
                      #  ['SetMulticastRange'],
                      # ['DeployFirstController'],
                      ['Install_Configure_ClusterSJC','Install_Configure_ClusterSFO'],
                      # ['Deploy2ndController','Deploy3rdController'],
                      ['CreateNetworkScopeClusterSJCandSFO'],
                      ['CreateVirtualWires'],

                      ########   Same Cluster  ########
                      # VXLAN test - VMs on same vWire
                      ['AddvNICsOn1to6VMs'],
                      ['PoweronVM1','PoweronVM2'],
                      ['MakeSurevNICConnectedVM1andVM2'],
                      ['SetIPVM1VWire1','SetIPVM2VWire1'],
                      ['PingTest'],
                      # ['NetperfTestIgnorethroughput'],

                      ['DeployEdge'],
                      ['CreateVXLANLIF1'],
                      ['CreateVXLANLIF2'],
                      ['CreateVXLANLIF3'],

                       ['CreateBridges'],

                       # VDR test - VXLAN to VXLAN rotuing
                       ['PlaceVM1OnvWire1','PlaceVM2OnvWire2'],
                       ['SetIPVM1VWire1','SetIPVM2VWire2'],
                       ['AddRouteVM1VWire1','AddRouteVM2VWire2'],
                       ['PingTest'],
                      # ['NetperfTestIgnorethroughput'],

                      # We need this for TrinityFebUpdate release so not removing
                      # VDR test - VLAN to VLAN rotuing
                      # ['CreateVLANLIFs'],
                      # ['PlaceVM1OnVLAN16_VDS1','PlaceVM2OnVLAN17_VDS1'],
                      # ['SetIPVM1VLAN16','SetIPVM2VLAN17'],
                      # ['AddRouteVM1VLAN16','AddRouteVM2VLAN17'],
                      # ['PingTest'],
                      # # ['NetperfTestIgnorethroughput'],

                      # VDR test - VXLAN to VLAN rotuing
                      # ['PlaceVM1OnvWire1','PlaceVM2OnVLAN17_VDS1'],
                      # ['SetIPVM1VWire1','SetIPVM2VLAN17'],
                      # ['AddRouteVM1VWire1','AddRouteVM2VLAN17'],
                      # ['PingTest'],
                      # # ['NetperfTestIgnorethroughput'],

                      # VDR test - VLAN to VXLAN rotuing
                      # ['PlaceVM2OnvWire2','PlaceVM1OnVLAN16_VDS1'],
                      # ['SetIPVM2VWire2','SetIPVM1VLAN16'],
                      # ['AddRouteVM1VLAN16','AddRouteVM2VWire2'],
                      # ['PingTest'],
                      # ['NetperfTestIgnorethroughput'],

                      # VDR test - Briding
                        ['PlaceVM1OnvWire4','PlaceVM2OnVLAN21_VDS1'],
                        ['SetIPVM1VWire4','SetIPVM2VLAN21'],
                        ['PingTest'],
                      # ['NetperfTestIgnorethroughput'],

                     ],
         ExitSequence => [
                       ['DeleteEdges'],
                       # ['DeleteController'],
                       #['RebootHost'],
                      ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3','RemovevNICFromVM4',
                       'RemovevNICFromVM5','RemovevNICFromVM6'],
                      ['DeleteVirtualWires'],
                      ['DeleteNetworkScopes'],
                      ['Uninstall_VDNCluster'],
                      ["RemoveHostsFromClusterSJC","RemoveHostsFromClusterSFO"],
                      ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                    ],
         'CreateVirtualWires' => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'Install_Configure_ClusterSFO' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSFO_VDS2_VLAN22_MTU9000_FAILOVER_VMKNIC4,
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange'    => SET_MULTICAST_RANGE,
         "DeployFirstController"=> DEPLOY_FIRSTCONTROLLER,
         'DeleteVirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'DeleteEdges' => DELETE_ALL_EDGES,
         'DeleteController' => DELETE_ALL_CONTROLLERS,
         'ResetSegmentID' => RESET_SEGMENTID,
         'ResetMulticast' => RESET_MULTICASTRANGE,
         'CreateVXLANLIF1' => CREATEVXLANLIF1,
         'CreateVXLANLIF2' => CREATEVXLANLIF2,
         'CreateVXLANLIF3' => CREATEVXLANLIF3,
         'CreateVXLANLIF4' => CREATEVXLANLIF4,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "MoveHostsToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[2],host.[3]",
         },
         "RemoveHostsFromClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsFromCluster => "host.[2],host.[3]",
         },
         "RemoveHostsFromClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsFromCluster => "host.[4],host.[5]",
         },
         "ReDeployEdge"   => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            applianceaction => "redeploy",
         },
         "EnableHAandDRSOnClusterSJCandSFO" => {
             Type => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2-3]",
             EditCluster => "edit",
             HA   => 1,
             DRS  => 1,
         },
         'PrepClusterSFO' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[3]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
               },
            },
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM4OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM5OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM6OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM4OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM5OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM6OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM2OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM4OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM5OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM6OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnvWire4' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[4]",
         },
         'PlaceVM6OnVLAN18_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM1OnVLAN16_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'PlaceVM2OnVLAN17_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM3OnVLAN16_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[7]",
         },
         'PlaceVM4OnVLAN17_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[8]",
         },
         'PlaceVM2OnVLAN21_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVM3OnVLAN21_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.14",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'CreateBridges' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[4]",
                  portgroup   => "vc.[1].dvportgroup.[5]",
               },
               '[2]'   => {
                  name        => "bridge-2-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[5]",
                  portgroup   => "vc.[1].dvportgroup.[6]",
               },
            },
         },
         "SetIPVM1VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM1VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN21" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM1VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM5VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM6VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddRouteVM1VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM2VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM3VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM4VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM1VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM2VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM3VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM4VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM1VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM2VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM3VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM4VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM5VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM6VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "SetIPVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.31.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.31.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.31.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.32.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.32.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.32.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.32.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.33.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire4" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.33.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.33.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.33.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.33.1.65',
            netmask    => "255.255.0.0",
         },
         "AddRouteVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "SamevWireNetperfTestDifferentCluster" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            l3protocol     => "ipv4,ipv6",
            l4protocol     => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            maxtimeout     => "128000",
            MinExpResult   => "1",
         },
         "PingTestSameCluster1" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestSameCluster2" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[3].vnic.[1]",
            SupportAdapter => "vm.[4].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM1ToAllOthers" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            ParallelSession=> "yes",
            TestDuration   => "60",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            ParallelSession=> "yes",
            TestDuration   => "60",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "iperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestVM1ToAllOthers" => {
            Type           => "Traffic",
            ToolName       => "Netperf,Iperf,Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 10,
            NoofInbound    => 3,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            ParallelSession=> "yes",
            maxtimeout     => "128000",
         },
         "NetperfTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            L4Protocol     => "tcp,udp",
            SendMessageSize=> "16384,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            SendMessageSize=> "16384,96684,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         'DeleteAllVmknics' => {
            Type         => "Host",
            TestHost     => "host.[2-5]",
            deletevmknic => "host.[2-5].vmknic.[-1]",
         },
         'AddVmotionvmknicsHost2and3' => {
            Type         => "Host",
            TestHost     => "host.[2-3]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[1]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         'AddVmotionvmknicsHost4and5' => {
            Type         => "Host",
            TestHost     => "host.[4-5]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[6]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[3]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[2]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweronVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweron",
         },
         'PoweronVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweron",
         },
         'PoweronVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'AddvNICsOn1to6VMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3],vm.[4],vm.[5],vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOn1to4VMs' => {
            Type   => "VM",
            TestVM => "vm.[5],vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnectedVM1andVM2' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1To3' => {
            Type       => "VM",
            TestVM     => "vm.[1-3]",
            deletevnic => "vm.[x].vnic.[1]",
         },
         'RemovevNICFromVM4To6' => {
            Type       => "VM",
            TestVM     => "vm.[4-6]",
            deletevnic => "vm.[x].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'CreateNetworkScopeClusterSJCandSFO' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2-3]",
               },
            },
         },
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },
   '2Cluster2VDSAllVXLANRoutingCombos2' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "2Cluster2VDSAllVXLANRoutingCombos2",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Verify VXLAN routing combos across the clusters with 2 VDS",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_TwoVDS_FiveHost_SixVM,
      'WORKLOADS' => {
         Sequence => [
                      ['MoveHostsToClusterSJC'],
                      ['MoveHostsToClusterSFO'],

                      #   ['SetSegmentIDRange'],
                      #   ['SetMulticastRange'],
                      # ['DeployFirstController'],
                      ['Install_Configure_ClusterSJC','Install_Configure_ClusterSFO'],
                      # ['Deploy2ndController','Deploy3rdController'],
                      ['CreateNetworkScopeClusterSJCandSFO'],
                      ['CreateVirtualWires'],

                      ['DeployEdge'],
                      ['CreateVXLANLIF1'],
                      ['CreateVXLANLIF2'],
                      ['CreateVXLANLIF3'],

                      ['CreateBridges'],


                      ########  Different Cluster ########
                      ['AddvNICsOn1to6VMs'],
                      ['PoweronVM1','PoweronVM2'],
                      ['PoweronVM3','PoweronVM4','PoweronVM5','PoweronVM6'],
                      # VXLAN test - VMs on same vWire
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                       'PlaceVM3OnvWire1','PlaceVM4OnvWire1',
                       'PlaceVM5OnvWire1','PlaceVM6OnvWire1'],
                      ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire1',
                       'SetIPVM4VWire1','SetIPVM5VWire1','SetIPVM6VWire1'],
                      ['PingTestVM1ToAllOthers'],
                      ['PingTest3VMsToOther3VMs'],

                      ['PoweroffVM1','PoweroffVM2','PoweroffVM3'],
                      ['PoweroffVM4','PoweroffVM5','PoweroffVM6'],
                      ['PoweronVM1','PoweronVM2','PoweronVM3'],
                      ['PoweronVM4','PoweronVM5','PoweronVM6'],
                      # 1 VM on vWire1 and rest on vWire2
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire2',
                       'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                       'PlaceVM5OnvWire2','PlaceVM6OnvWire2'],
                      ['SetIPVM1VWire1','SetIPVM2VWire2','SetIPVM3VWire2',
                       'SetIPVM4VWire2','SetIPVM5VWire2','SetIPVM6VWire2'],
                      ['AddRouteVM1VWire1','AddRouteVM2VWire2',
                       'AddRouteVM3VWire2','AddRouteVM4VWire2',
                       'AddRouteVM5VWire2','AddRouteVM6VWire2'],
                      ['PingTestVM1ToAllOthers'],
                      ['PingTest3VMsToOther3VMs'],

                      # 3 VMs on vWire1 and 3 on vWire2
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                       'PlaceVM3OnvWire1','PlaceVM4OnvWire2',
                       'PlaceVM5OnvWire2','PlaceVM6OnvWire2'],
                      ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire1',
                       'SetIPVM4VWire2','SetIPVM5VWire2','SetIPVM6VWire2'],
                      ['AddRouteVM1VWire1','AddRouteVM2VWire1',
                       'AddRouteVM3VWire1','AddRouteVM4VWire2',
                       'AddRouteVM5VWire2','AddRouteVM6VWire2'],
                      ['PingTestVM1ToAllOthers'],
                      ['PingTest3VMsToOther3VMs'],

                      ['PoweroffVM1','PoweroffVM2','PoweroffVM3'],
                      ['PoweroffVM4','PoweroffVM5','PoweroffVM6'],
                      ['PoweronVM1','PoweronVM2','PoweronVM3'],
                      ['PoweronVM4','PoweronVM5','PoweronVM6'],
                      # 2 VMs on vWire1, 2 on vWire2, 2 on vWire3
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                       'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                       'PlaceVM5OnvWire3','PlaceVM6OnvWire3'],
                      ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire2',
                       'SetIPVM4VWire2','SetIPVM5VWire3','SetIPVM6VWire3'],
                      ['AddRouteVM1VWire1','AddRouteVM2VWire1',
                       'AddRouteVM3VWire2','AddRouteVM4VWire2',
                       'AddRouteVM5VWire3','AddRouteVM6VWire3'],
                      ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],

                      # 1 VM on VLAN16, 2 on VLAN17,
                      # 5 on vWire3, 6 on VLAN18
                      #['PlaceVM1OnVLAN16_VDS1','PlaceVM2OnVLAN17_VDS1',
                      # 'PlaceVM5OnvWire3','PlaceVM6OnVLAN18_VDS1'],
                      #['SetIPVM1VLAN16','SetIPVM2VLAN17',
                      # 'SetIPVM5VWire3','SetIPVM6VLAN18'],
                      #['AddRouteVM1VLAN16','AddRouteVM2VLAN17',
                      #'AddRouteVM5VWire3','AddRouteVM6VLAN18'],
                      #['PingTest2VMsToOther2VMs'],
                      #['NetperfTest2VMsToOther2VMs'],
                     ],
         ExitSequence => [
                            ['DeleteEdges'],
                            ['RemovevNICFromVM1','RemovevNICFromVM2',
                             'RemovevNICFromVM3','RemovevNICFromVM4',
                             'RemovevNICFromVM5','RemovevNICFromVM6'],
                            ['DeleteVirtualWires'],
                            ['DeleteNetworkScopes'],
                            ['Uninstall_VDNCluster'],
                            ["RemoveHostsFromClusterSJC","RemoveHostsFromClusterSFO"],
                            ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                         ],
         'CreateVirtualWires' => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'Install_Configure_ClusterSFO' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSFO_VDS2_VLAN22_MTU9000_FAILOVER_VMKNIC4,
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange'    => SET_MULTICAST_RANGE,
         "DeployFirstController"=> DEPLOY_FIRSTCONTROLLER,
         'DeleteVirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'DeleteEdges' => DELETE_ALL_EDGES,
         'DeleteController' => DELETE_ALL_CONTROLLERS,
         'ResetSegmentID' => RESET_SEGMENTID,
         'ResetMulticast' => RESET_MULTICASTRANGE,
         'CreateVXLANLIF1' => CREATEVXLANLIF1,
         'CreateVXLANLIF2' => CREATEVXLANLIF2,
         'CreateVXLANLIF3' => CREATEVXLANLIF3,
         'CreateVXLANLIF4' => CREATEVXLANLIF4,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "MoveHostsToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[2],host.[3]",
         },
         "RemoveHostsFromClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsFromCluster => "host.[2],host.[3]",
         },
         "RemoveHostsFromClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsFromCluster => "host.[4],host.[5]",
         },
         "ReDeployEdge"   => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            applianceaction => "redeploy",
         },
         "EnableHAandDRSOnClusterSJCandSFO" => {
             Type => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2-3]",
             EditCluster => "edit",
             HA   => 1,
             DRS  => 1,
         },
         'PrepClusterSFO' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[3]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
               },
            },
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM4OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM5OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM6OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM4OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM5OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM6OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM2OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM4OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM5OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM6OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnvWire4' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[4]",
         },
         'PlaceVM6OnVLAN18_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM1OnVLAN16_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'PlaceVM2OnVLAN17_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM3OnVLAN16_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[7]",
         },
         'PlaceVM4OnVLAN17_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[8]",
         },
         'PlaceVM2OnVLAN21_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVM3OnVLAN21_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.14",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'CreateBridges' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[4]",
                  portgroup   => "vc.[1].dvportgroup.[5]",
               },
               '[2]'   => {
                  name        => "bridge-2-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[5]",
                  portgroup   => "vc.[1].dvportgroup.[6]",
               },
            },
         },
         "SetIPVM1VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM1VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN21" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM1VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM5VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM6VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddRouteVM1VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM2VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM3VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM4VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM1VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM2VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM3VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM4VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM1VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM2VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM3VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM4VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM5VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM6VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "SetIPVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.31.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.31.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.31.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.32.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.32.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.32.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.32.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.33.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire4" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.21.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.33.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.33.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.33.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.33.1.65',
            netmask    => "255.255.0.0",
         },
         "AddRouteVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "SamevWireNetperfTestDifferentCluster" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            l3protocol     => "ipv4,ipv6",
            l4protocol     => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            maxtimeout     => "128000",
            MinExpResult   => "1",
         },
         "PingTestSameCluster1" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestSameCluster2" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[3].vnic.[1]",
            SupportAdapter => "vm.[4].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM1ToAllOthers" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            ParallelSession=> "yes",
            TestDuration   => "60",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            ParallelSession=> "yes",
            TestDuration   => "60",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "iperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestVM1ToAllOthers" => {
            Type           => "Traffic",
            ToolName       => "Netperf,Iperf,Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 10,
            NoofInbound    => 3,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            ParallelSession=> "yes",
            maxtimeout     => "128000",
         },
         "NetperfTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            L4Protocol     => "tcp,udp",
            SendMessageSize=> "16384,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            SendMessageSize=> "16384,96684,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         'DeleteAllVmknics' => {
            Type         => "Host",
            TestHost     => "host.[2-5]",
            deletevmknic => "host.[2-5].vmknic.[-1]",
         },
         'AddVmotionvmknicsHost2and3' => {
            Type         => "Host",
            TestHost     => "host.[2-3]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[1]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         'AddVmotionvmknicsHost4and5' => {
            Type         => "Host",
            TestHost     => "host.[4-5]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[6]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[3]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[2]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweronVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweron",
         },
         'PoweronVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweron",
         },
         'PoweronVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweroff",
         },
         'PoweroffVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweroff",
         },
         'PoweroffVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweroff",
         },
         'AddvNICsOn1to6VMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3],vm.[4],vm.[5],vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOn1to4VMs' => {
            Type   => "VM",
            TestVM => "vm.[5],vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnectedVM1andVM2' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1To3' => {
            Type       => "VM",
            TestVM     => "vm.[1-3]",
            deletevnic => "vm.[x].vnic.[1]",
         },
         'RemovevNICFromVM4To6' => {
            Type       => "VM",
            TestVM     => "vm.[4-6]",
            deletevnic => "vm.[x].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'CreateNetworkScopeClusterSJCandSFO' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2-3]",
               },
            },
         },
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },

   '4HostsVLANandBridingScenarios' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "4HostsVLANandBridingScenarios",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Verify VLAN routing and bridging scenarios with 4 hosts (1 vds) in same cluster",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_TwoVDS_FiveHost_SixVM,
      'WORKLOADS' => {
         Sequence => [
                          ['RemoveHosts4and5FromVDSSFO'],
                          ['AddHosts4and5ToVDSSJC'],
                          #   ['SetSegmentIDRange'],
                          #   ['SetMulticastRange'],
                          #     ['DeployFirstController'],
                          ['AddHosts2and3ToClusterSJC'],
                            ['InstallVIBs_ClusterSJC'],
                          ['ConfigureVXLAN_ClusterSJC'],
                          ['AddHosts4and5ToClusterSJC'],
                          # To place vNICs
                          ['CreateNetworkScope'],
                          ['CreateVirtualWires'],

                         #*****PR 1093784
                         #*****Do addvNIC after poweron
                          ['AddvNICsOn1to6VMs'],
                          ['PoweronVM1','PoweronVM2','PoweronVM3'],
                          ['PoweronVM4','PoweronVM5','PoweronVM6'],

                          ['MakeSurevNICConnectedVM1toVM6'],
                          ['DeployEdgeOnHost4'],
                          ['CreateVLANLIF1'],
                          ['CreateVLANLIF2'],
                          ['CreateVLANLIF3'],
                          ['CreateBridges'],

                          # 1 VM on VLAN16 and rest on VLAN17
                          ['PlaceVM1OnVLAN16_VDS1','PlaceVM2OnVLAN17_VDS1',
                           'PlaceVM3OnVLAN17_VDS1','PlaceVM4OnVLAN17_VDS1',
                           'PlaceVM5OnVLAN17_VDS1','PlaceVM6OnVLAN17_VDS1'],
                          ['SetIPVM1VLAN16','SetIPVM2VLAN17','SetIPVM3VLAN17',
                           'SetIPVM4VLAN17','SetIPVM5VLAN17','SetIPVM6VLAN17'],
                          ['AddRouteVM1VLAN16','AddRouteVM2VLAN17',
                           'AddRouteVM3VLAN17','AddRouteVM4VLAN17',
                           'AddRouteVM5VLAN17','AddRouteVM6VLAN17'],
                          ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],
                          # ['NetperfTestVM1ToAllOthers','NetperfTest3VMsToOther3VMs'],

                          # 3 VMs on VLAN16 and 3 on VLAN17
                          ['PlaceVM1OnVLAN16_VDS1','PlaceVM2OnVLAN16_VDS1',
                           'PlaceVM3OnVLAN16_VDS1','PlaceVM4OnVLAN17_VDS1',
                           'PlaceVM5OnVLAN17_VDS1','PlaceVM6OnVLAN17_VDS1'],
                          ['SetIPVM1VLAN16','SetIPVM2VLAN16','SetIPVM3VLAN16',
                           'SetIPVM4VLAN17','SetIPVM5VLAN17','SetIPVM6VLAN17'],
                          ['AddRouteVM1VLAN16','AddRouteVM2VLAN16',
                           'AddRouteVM3VLAN16','AddRouteVM4VLAN17',
                           'AddRouteVM5VLAN17','AddRouteVM6VLAN17'],
                          ['PingTestVM1ToAllOthers'],
                          ['PingTest3VMsToOther3VMs'],
                          # ['NetperfTestVM1ToAllOthers'],
                          # ['NetperfTest3VMsToOther3VMs'],

                          ['PoweroffVM1','PoweroffVM2','PoweroffVM3'],
                          ['PoweroffVM4','PoweroffVM5','PoweroffVM6'],
                          ['PoweronVM1','PoweronVM2','PoweronVM3'],
                          ['PoweronVM4','PoweronVM5','PoweronVM6'],
                           # 2 VMs on VLAN16, 2 on VLAN17, 2 on VLAN18
                          ['PlaceVM1OnVLAN16_VDS1','PlaceVM2OnVLAN16_VDS1',
                            'PlaceVM3OnVLAN17_VDS1','PlaceVM4OnVLAN17_VDS1',
                            'PlaceVM5OnVLAN18_VDS1','PlaceVM6OnVLAN18_VDS1'],
                          ['SetIPVM1VLAN16','SetIPVM2VLAN16','SetIPVM3VLAN17',
                            'SetIPVM4VLAN17','SetIPVM5VLAN18','SetIPVM6VLAN18'],
                          ['AddRouteVM1VLAN16','AddRouteVM2VLAN16',
                           'AddRouteVM3VLAN17','AddRouteVM4VLAN17',
                           'AddRouteVM5VLAN18','AddRouteVM6VLAN18'],
                          ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],
                          # ['NetperfTestVM1ToAllOthers'],
                          # ['NetperfTest3VMsToOther3VMs'],

                          ['RemovevNICFromVM1'],
                          ['RemovevNICFromVM2'],
                          ['RemovevNICFromVM3'],
                          ['RemovevNICFromVM4'],
                          ['RemovevNICFromVM5'],
                          ['RemovevNICFromVM6'],
                          ['AddvNICsOn1to6VMsOnVlanPortGroup'],
                          ['DeleteEdges'],
                          ['DeleteVirtualWires'],
                          ['DeleteNetworkScope'],
                          ['UnconfigureVXLAN'],
                          ['DeployEdgeOnHost4'],
                          ['CreateVLANLIF1'],
                          ['CreateVLANLIF2'],
                          ['CreateVLANLIF3'],
                          # 2 VMs on VLAN16, 2 on VLAN17, 2 on VLAN18
                          ['PlaceVM1OnVLAN16_VDS1','PlaceVM2OnVLAN16_VDS1',
                           'PlaceVM3OnVLAN17_VDS1','PlaceVM4OnVLAN17_VDS1',
                           'PlaceVM5OnVLAN18_VDS1','PlaceVM6OnVLAN18_VDS1'],
                          ['SetIPVM1VLAN16','SetIPVM2VLAN16','SetIPVM3VLAN17',
                           'SetIPVM4VLAN17','SetIPVM5VLAN18','SetIPVM6VLAN18'],
                          ['AddRouteVM1VLAN16','AddRouteVM2VLAN16',
                           'AddRouteVM3VLAN17','AddRouteVM4VLAN17',
                           'AddRouteVM5VLAN18','AddRouteVM6VLAN18'],
                          ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],
                        # ['NetperfTestVM1ToAllOthers'],
                        # ['NetperfTest3VMsToOther3VMs'],
                     ],
         ExitSequence => [
                            ['DeleteEdges'],
                            ['RemovevNICFromVM1','RemovevNICFromVM2',
                             'RemovevNICFromVM3','RemovevNICFromVM4',
                             'RemovevNICFromVM5','RemovevNICFromVM6'],
                            ['DeleteVirtualWires'],
                            ['DeleteNetworkScope'],
                            ['Uninstall_VDNCluster'],
                            ['RemoveHosts4and5FromClusterSJC','RemoveHosts2and3FromClusterSJC'],
                            ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                            ['RemoveHosts4and5FromVDSSJC'],
                            ['AddHosts4and5ToVDSSFO'],
                         ],
         'UnconfigureVXLAN' => UNCONFIGUREVXLAN_ClusterSJC_VDS1,
         'DeleteNetworkScope' => DELETE_ALL_NETWORKSCOPES,
         'DeleteVirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'CreateVLANLIF1' => CREATEVLANLIF1,
         'CreateVLANLIF2' => CREATEVLANLIF2,
         'CreateVLANLIF3' => CREATEVLANLIF3,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         'InstallVIBs_ClusterSJC' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[2]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[2]",
                  vibs         => "install",
               },
            },
         },
         "AddHosts2and3ToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[2],host.[3]",
         },
         "AddHosts4and5ToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "RemoveHosts2and3FromClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsFromCluster => "host.[2],host.[3]",
         },
         "RemoveHosts4and5FromClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsFromCluster => "host.[4],host.[5]",
         },
         "RemoveHosts4and5UplinkFromVDSSFO" => {
             Type        => "Switch",
             TestSwitch  => "vc.[1].vds.[2]",
             configureuplinks=> "remove",
             vmnicadapter   => "host.[4-5].vmnic.[1]",
         },
         'RemoveHosts4and5FromVDSSFO' => {
             Type        => "Switch",
             TestSwitch  => "vc.[1].vds.[2]",
             configurehosts => "remove",
             host   => "host.[4-5]",
             #   ExpectedResult => "ignore",
         },
         'AddHosts4and5ToVDSSFO' => {
             Type        => "Switch",
             TestSwitch  => "vc.[1].vds.[2]",
             configurehosts => "add",
             host   => "host.[4-5]",
             #   ExpectedResult => "ignore",
         },
         "AddHosts4and5ToVDSSJC" => {
             Type        => "Switch",
             TestSwitch  => "vc.[1].vds.[1]",
             configurehosts => "add",
             configureuplinks=> "add",
             host           => "host.[4-5]",
             vmnicadapter   => "host.[4-5].vmnic.[1]",
         },
         'RemoveHosts4and5FromVDSSJC' => {
             Type        => "Switch",
             TestSwitch  => "vc.[1].vds.[1]",
             configurehosts => "remove",
             host   => "host.[4-5]",
             #   ExpectedResult => "ignore",
         },
         "ReDeployEdge"   => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            applianceaction => "redeploy",
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         "EnableHAandDRSOnClusterSJCandSFO" => {
             Type => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2-3]",
             EditCluster => "edit",
             HA   => 1,
             DRS  => 1,
         },
         'PrepClusterSFO' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[3]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
               },
            },
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM4OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM5OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM6OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM4OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM5OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM6OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM2OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM4OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM5OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM6OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnvWire4' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[4]",
         },
         'PlaceVM6OnVLAN18_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM1OnVLAN16_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'PlaceVM2OnVLAN16_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'PlaceVM3OnVLAN16_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'PlaceVM2OnVLAN17_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM3OnVLAN17_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM4OnVLAN17_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM5OnVLAN17_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM6OnVLAN17_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM5OnVLAN18_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM6OnVLAN18_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM3OnVLAN16_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[7]",
         },
         'PlaceVM4OnVLAN17_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[8]",
         },
         'PlaceVM2OnVLAN21_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVM3OnVLAN21_VDS2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         "DeployEdgeOnHost4"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[4]",
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.34",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'CreateBridges' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[4]",
                  portgroup   => "vc.[1].dvportgroup.[5]",
               },
               '[2]'   => {
                  name        => "bridge-2-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[5]",
                  portgroup   => "vc.[1].dvportgroup.[6]",
               },
            },
         },
         "SetIPVM1VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM1VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN21" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM5VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM6VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM1VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM3VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM4VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM5VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM6VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddRouteVM1VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM2VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM3VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM4VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteVM1VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM2VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM3VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM4VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM5VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM6VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteVM1VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM2VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM3VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM4VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM5VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "AddRouteVM6VLAN18" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.18.1.1",
         },
         "SetIPVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.31.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.31.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.31.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.32.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.32.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.32.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.32.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.33.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.33.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.33.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.33.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.33.1.65',
            netmask    => "255.255.0.0",
         },
         "AddRouteVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "SamevWireNetperfTestDifferentCluster" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            #ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound   => 1,
            l3protocol    => "ipv4,ipv6",
            l4protocol    => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            MinExpResult   => "1",
         },
         "PingTestSameCluster1" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestSameCluster2" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[3].vnic.[1]",
            SupportAdapter => "vm.[4].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            #NoofInbound    => 1,
            # VLAN LIF ARP Resolution takes time
            TestDuration   => "60",
         },
         "PingTestVM1ToAllOthers" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 1,
            #NoofInbound    => 1,
            # VLAN LIF ARP Resolution takes time
            TestDuration   => "60",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "iperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestVM1ToAllOthers" => {
            Type           => "Traffic",
            ToolName       => "Netperf,Iperf,Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 10,
            #NoofInbound    => 3,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            L4Protocol     => "tcp,udp",
            SendMessageSize=> "16384,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            SendMessageSize=> "16384,96684,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         'DeleteAllVmknics' => {
            Type         => "Host",
            TestHost     => "host.[2-5]",
            deletevmknic => "host.[2-5].vmknic.[-1]",
         },
         'AddVmotionvmknicsHost2and3' => {
            Type         => "Host",
            TestHost     => "host.[2-3]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[1]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         'AddVmotionvmknicsHost4and5' => {
            Type         => "Host",
            TestHost     => "host.[4-5]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[6]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[3]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[2]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweronVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweron",
         },
         'PoweronVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweron",
         },
         'PoweronVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweroff",
         },
         'PoweroffVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweroff",
         },
         'PoweroffVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweroff",
         },
         'AddvNICsOn1to6VMs' => {
            Type   => "VM",
            TestVM => "vm.[1-6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOn1to6VMsOnVlanPortGroup' => {
            Type   => "VM",
            TestVM => "vm.[1-6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vc.[1].dvportgroup.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnectedVM1toVM6' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-6].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
         'CreateVirtualWires' => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'ConfigureVXLAN_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange'    => SET_MULTICAST_RANGE,
         "DeployFirstController"=> DEPLOY_FIRSTCONTROLLER,
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "MoveHostsToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[2],host.[3]",
         },
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },

   'AllHybridMulticastUnicastAndCombinations1' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "AllHybridAllMulticastAllUnicastAndCombinations1",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Same vwire datapath tests for different control plane modes",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_TwoVDS_FiveHost_SixVM,
      'WORKLOADS' => {
         Sequence => [
            #    ['SetSegmentIDRange'],
            #          ['SetMulticastRange'],
                      #['DeployFirstController'],
                      ['AddHosts2and3ToClusterSJC'],
                      ['Install_Configure_ClusterSJC','InstallVIBs_ClusterSFO'],
                      ['ConfigureVXLAN_ClusterSFO'],
                      ['CreateNetworkScopeClusterSJCandSFO'],
                      ['CreateVirtualWires'],
                      ['AddHosts4and5ToClusterSFO'],

                      ['AddvNICsOn1to6VMs'],
                      ['PoweronVM1','PoweronVM2','PoweronVM3'],
                      ['PoweronVM4','PoweronVM5','PoweronVM6'],
                      ['MakeSurevNICConnectedVM1toVM6'],
                      ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],

                      # Update vWires to Multicast Mode
                      ['UpdatevWiresToMulticastMode'],
                      ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],

                      # Update vWires to Unicast Mode
                      ['UpdatevWiresToUnicastMode'],
                      ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],

                      ['PoweroffVM1','PoweroffVM2','PoweroffVM3'],
                      ['PoweroffVM4','PoweroffVM5','PoweroffVM6'],
                      ['PoweronVM1','PoweronVM2','PoweronVM3'],
                      ['PoweronVM4','PoweronVM5','PoweronVM6'],
                      # Update vWires to Hybrid Mode
                      ['UpdatevWiresToHybridMode'],
                      ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],
                      # Mix of different type of vWires
                      ['UpdatevWires1and4ToHybridMode'],
                      ['UpdatevWires2and5ToMulticastMode'],
                      ['UpdatevWires3and6ToUnicastMode'],
                      ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],
                      # ['NetperfTestVM1ToAllOthers'],
                      # ['NetperfTest3VMsToOther3VMs'],
                     ],
         ExitSequence => [
                      ['DeleteEdges'],
                      ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3','RemovevNICFromVM4',
                       'RemovevNICFromVM5','RemovevNICFromVM6'],
                      ['Delete_All_VirtualWires'],
                      ['DeleteNetworkScopes'],
                      ['Uninstall_VDNCluster'],
                      # # ['DeleteController'],
                      #['DeleteController'],
                      #['RebootHost'],
                      ['RemoveHosts4and5FromClusterSFO','RemoveHosts2and3FromClusterSJC'],
                      ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                     ],

         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange'    => SET_MULTICAST_RANGE,
         "DeployFirstController"=> DEPLOY_FIRSTCONTROLLER,
         'CreateVirtualWires'   => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'CreateNetworkScope'   => CREATE_NETWORKSCOPE_ClusterSJC,
         'CreateVXLANLIF1' => CREATEVXLANLIF1,
         'CreateVXLANLIF2' => CREATEVXLANLIF2,
         'CreateVXLANLIF3' => CREATEVXLANLIF3,
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "MoveHostsToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[2],host.[3]",
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.15",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'DeleteVirtualWires'   => DELETE_ALL_VIRTUALWIRES,
         "Delete2ndController"   => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            deletevxlancontroller => "vsm.[1].vxlancontroller.[2]",
         },
         "AddHosts2and3ToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[2],host.[3]",
         },
         "AddHosts4and5ToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "RemoveHosts2and3FromClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsFromCluster => "host.[2],host.[3]",
         },
         "RemoveHosts4and5FromClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsFromCluster => "host.[4],host.[5]",
         },
         "AddHosts4and5ToVDSSJC" => {
             Type        => "Switch",
             TestSwitch  => "vc.[1].vds.[2]",
             configurehosts => "add",
             host           => "host.[4-5]",
             vmnicadapter   => "host.[4-5].vmnic.[1]",
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM4OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM5OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM6OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM4OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM5OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM6OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM2OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM4OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM5OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM6OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnvWire4' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[4]",
         },
         "DeployEdge2OnHost2"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[2]' => {
                  name          => "Edge-2",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]",
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.35",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeployEdgeOnHost4"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-1",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[3]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[4]",
                  portgroup     => "vc.[1].dvportgroup.[7]",
                  primaryaddress => "10.10.10.36",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'CreateBridges' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[2]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[4]",
                  portgroup   => "vc.[1].dvportgroup.[5]",
               },
               '[2]'   => {
                  name        => "bridge-2-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[5]",
                  portgroup   => "vc.[1].dvportgroup.[6]",
               },
            },
         },
         "SetIPVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.31.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.31.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.31.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.32.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.32.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.32.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.32.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.33.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.33.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.33.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.33.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.33.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire4" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.21.1.35',
            netmask    => "255.255.0.0",
         },
             # Bridge settings
             # VM1 to VM2 VXLAN to vLAN
             # VM5 to VM6 VXLAN to vLAN
         'PlaceVM2OnVLAN21_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVM6OnVLAN22_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[6]",
         },
         'PlaceVM1OnvWire4' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[4]",
         },
         'PlaceVM5OnvWire5' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[5]",
         },
         "SetIPVM1VWire4" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.21.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire5" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.22.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VLAN21" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM6VLAN22" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddRouteVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "SamevWireNetperfTestDifferentCluster" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            #ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound   => 1,
            l3protocol    => "ipv4,ipv6",
            l4protocol    => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            MinExpResult   => "1",
         },
         "PingTestSameCluster1" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestSameCluster2" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[3].vnic.[1]",
            SupportAdapter => "vm.[4].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM6ToVM5" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[6].vnic.[1]",
            SupportAdapter => "vm.[5].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM1ToVM2" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM1ToAllOthers" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "iperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestVM1ToAllOthers" => {
            Type           => "Traffic",
            ToolName       => "Netperf,Iperf,Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 10,
            NoofInbound    => 3,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            L4Protocol     => "tcp,udp",
            SendMessageSize=> "16384,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            SendMessageSize=> "16384,96684,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         'DeleteAllVmknics' => {
            Type         => "Host",
            TestHost     => "host.[2-5]",
            deletevmknic => "host.[2-5].vmknic.[-1]",
         },
         'AddVmotionvmknicsHost2and3' => {
            Type         => "Host",
            TestHost     => "host.[2-3]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[1]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         'AddVmotionvmknicsHost4and5' => {
            Type         => "Host",
            TestHost     => "host.[4-5]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[6]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[3]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[2]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweronVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweron",
         },
         'PoweronVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweron",
         },
         'PoweronVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweroff",
         },
         'PoweroffVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweroff",
         },
         'PoweroffVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweroff",
         },
         'AddvNICsOn1to6VMs' => {
            Type   => "VM",
            TestVM => "vm.[1-6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOn1to4VMs' => {
            Type   => "VM",
            TestVM => "vm.[5],vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnectedVM1toVM6' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-6].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'CreateNetworkScopeClusterSJCandSFO' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2-3]",
               },
            },
         },
         'CreateNetworkScopeClusterSJCandSFOHybridMode' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  controlplanemode => "HYBRID_MODE",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2-3]",
               },
            },
         },
         'UpdatevWiresToUnicastMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[1-5]",
            reconfigure      => "true",
            name             => "vWire-Updated-Unicast",
            controlplanemode => "UNICAST_MODE",
         },
         'UpdatevWiresToHybridMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[1-5]",
            reconfigure => "true",
            name             => "vWire-Updated-Hybrid",
            controlplanemode => "HYBRID_MODE",
         },
         'UpdatevWiresToMulticastMode' => {
            Type              => "Switch",
            TestSwitch        => "vsm.[1].networkscope.[1].virtualwire.[1-5]",
            reconfigure => "true",
            name             => "vWire-Updated-Multicast",
            controlplanemode => "MULTICAST_MODE",
         },
         'UpdatevWires1and4ToHybridMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[1],vsm.[1].networkscope.[1].virtualwire.[4]",
            reconfigure => "true",
            name             => "vWire-Updated-Hybrid",
            controlplanemode => "HYBRID_MODE",
         },
         'UpdatevWires2and5ToMulticastMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[2],vsm.[1].networkscope.[1].virtualwire.[5]",
            reconfigure => "true",
            name             => "vWire-Updated-Multicast",
            controlplanemode => "MULTICAST_MODE",
         },
         'UpdatevWires3and6ToUnicastMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[3],vsm.[1].networkscope.[1].virtualwire.[6]",
            reconfigure => "true",
            name             => "vWire-Updated-Unicast",
            controlplanemode => "UNICAST_MODE",
         },
         ConfigureVXLAN_ClusterSFO => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[2]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
                  vibs         => "install",
                  switch       => "vc.[1].vds.[2]",
                  vlan         => "22",
                  mtu          => "1600",
                  vmkniccount  => "1",
                  teaming      => "FAILOVER_ORDER",
               },
            },
         },
         'InstallVIBs_ClusterSFO' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[2]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
                  vibs         => "install",
               },
            },
         },
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },
   'AllHybridMulticastUnicastAndCombinations2' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "AllHybridAllMulticastAllUnicastAndCombinations2",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "VXLAN routing and VXLAN-VLAN bridging for different vwire control plane modes ",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_TwoVDS_FiveHost_SixVM,
      'WORKLOADS' => {
         Sequence => [
            #         ['SetSegmentIDRange'],
            #          ['SetMulticastRange'],
                      #['DeployFirstController'],
                      ['AddHosts2and3ToClusterSJC'],
                      ['Install_Configure_ClusterSJC','InstallVIBs_ClusterSFO'],
                      ['ConfigureVXLAN_ClusterSFO'],
                      ['CreateNetworkScopeClusterSJCandSFO'],
                      ['CreateVirtualWires'],
                      ['AddHosts4and5ToClusterSFO'],

                      ['AddvNICsOn1to6VMs'],
                      ['PoweronVM1','PoweronVM2','PoweronVM3'],
                      ['PoweronVM4','PoweronVM5','PoweronVM6'],
                      ['MakeSurevNICConnectedVM1toVM6'],
                      ['DeployEdgeOnHost4'],
                      ['CreateVXLANLIF1'],
                      ['CreateVXLANLIF2'],
                      ['CreateVXLANLIF3'],
                      ['DeployEdge2OnHost2'],
                      ['CreateBridges'],

                      # 3 VMs on vWire1 and 3 on vWire2
                      # Unicast mode
                      ['UpdatevWiresToUnicastMode'],
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                       'PlaceVM3OnvWire1','PlaceVM4OnvWire2',
                       'PlaceVM5OnvWire2','PlaceVM6OnvWire2'],
                      ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire1',
                       'SetIPVM4VWire2','SetIPVM5VWire2','SetIPVM6VWire2'],
                      ['AddRouteVM1VWire1','AddRouteVM2VWire1',
                       'AddRouteVM3VWire1','AddRouteVM4VWire2',
                       'AddRouteVM5VWire2','AddRouteVM6VWire2'],
                      ['PingTestVM1ToAllOthers'],
                      ['PingTest3VMsToOther3VMs'],
                      # ['NetperfTestVM1ToAllOthers'],
                      # ['NetperfTest3VMsToOther3VMs'],
                      # Bridge test
                      ['PlaceVM1OnvWire4','PlaceVM2OnVLAN21_VDS1',
                       'PlaceVM5OnvWire5','PlaceVM6OnVLAN22_VDS1'],
                      ['SetIPVM1VWire4','SetIPVM2VLAN21',
                       'SetIPVM5VWire5','SetIPVM6VLAN22'],
                      ['PingTestVM1ToVM2'],
                      ['PingTestVM6ToVM5'],

                      # 2 VMs on vWire1, 2 on vWire2
                      # 2 on vWire3
                      # Mix of different vWires
                      ##['Deploy3rdController'],
                      ##['Delete2ndController'],
                      ['UpdatevWires1and4ToHybridMode'],
                      ['UpdatevWires2and5ToMulticastMode'],
                      ['UpdatevWires3and6ToUnicastMode'],
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                       'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                       'PlaceVM5OnvWire3','PlaceVM6OnvWire3'],
                      ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire2',
                       'SetIPVM4VWire2','SetIPVM5VWire3','SetIPVM6VWire3'],
                      ['AddRouteVM1VWire1','AddRouteVM2VWire1',
                       'AddRouteVM3VWire2','AddRouteVM4VWire2',
                       'AddRouteVM5VWire3','AddRouteVM6VWire3'],
                      ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],
                      # ['NetperfTestVM1ToAllOthers','UpdatevWiresToMulticastMode'],
                      # ['NetperfTest3VMsToOther3VMs','UpdatevWiresToUnicastMode'],

                      #['PoweroffVM1','PoweroffVM2','PoweroffVM3'],
                      #['PoweroffVM4','PoweroffVM5','PoweroffVM6'],
                      #['PoweronVM1','PoweronVM2','PoweronVM3'],
                      #['PoweronVM4','PoweronVM5','PoweronVM6'],
                      # Bridge test
                      ['PlaceVM1OnvWire4','PlaceVM2OnVLAN21_VDS1',
                       'PlaceVM5OnvWire5','PlaceVM6OnVLAN22_VDS1'],
                      ['SetIPVM1VWire4','SetIPVM2VLAN21',
                       'SetIPVM5VWire5','SetIPVM6VLAN22'],
                      ['PingTestVM1ToVM2'],
                      ['PingTestVM6ToVM5'],
                     ],
         ExitSequence => [
                      ['DeleteEdges'],
                      ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3','RemovevNICFromVM4',
                       'RemovevNICFromVM5','RemovevNICFromVM6'],
                      ['Delete_All_VirtualWires'],
                      ['DeleteNetworkScopes'],
                      ['Uninstall_VDNCluster'],
                      ['RemoveHosts4and5FromClusterSFO','RemoveHosts2and3FromClusterSJC'],
                      ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                     ],

         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange'    => SET_MULTICAST_RANGE,
         "DeployFirstController"=> DEPLOY_FIRSTCONTROLLER,
         'CreateVirtualWires'   => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'CreateNetworkScope'   => CREATE_NETWORKSCOPE_ClusterSJC,
         'CreateVXLANLIF1' => CREATEVXLANLIF1,
         'CreateVXLANLIF2' => CREATEVXLANLIF2,
         'CreateVXLANLIF3' => CREATEVXLANLIF3,
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.15",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'DeleteVirtualWires'   => DELETE_ALL_VIRTUALWIRES,
         "Delete2ndController"   => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            deletevxlancontroller => "vsm.[1].vxlancontroller.[2]",
         },
         "AddHosts2and3ToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[2],host.[3]",
         },
         "AddHosts4and5ToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "RemoveHosts2and3FromClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsFromCluster => "host.[2],host.[3]",
         },
         "RemoveHosts4and5FromClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsFromCluster => "host.[4],host.[5]",
         },
         "AddHosts4and5ToVDSSJC" => {
             Type        => "Switch",
             TestSwitch  => "vc.[1].vds.[2]",
             configurehosts => "add",
             host           => "host.[4-5]",
             vmnicadapter   => "host.[4-5].vmnic.[1]",
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM4OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM5OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM6OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM4OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM5OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM6OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM2OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM4OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM5OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM6OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnvWire4' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[4]",
         },
         "DeployEdge2OnHost2"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[2]' => {
                  name          => "Edge-2",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]",
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.35",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeployEdgeOnHost4"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-1",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[3]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[4]",
                  portgroup     => "vc.[1].dvportgroup.[7]",
                  primaryaddress => "10.10.10.36",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'CreateBridges' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[2]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[4]",
                  portgroup   => "vc.[1].dvportgroup.[5]",
               },
               '[2]'   => {
                  name        => "bridge-2-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[5]",
                  portgroup   => "vc.[1].dvportgroup.[6]",
               },
            },
         },
         "SetIPVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.31.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.31.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.31.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.32.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.32.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.32.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.32.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.33.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.33.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.33.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.33.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.33.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire4" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.21.1.35',
            netmask    => "255.255.0.0",
         },
             # Bridge settings
             # VM1 to VM2 VXLAN to vLAN
             # VM5 to VM6 VXLAN to vLAN
         'PlaceVM2OnVLAN21_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[5]",
         },
         'PlaceVM6OnVLAN22_VDS1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[6]",
         },
         'PlaceVM1OnvWire4' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[4]",
         },
         'PlaceVM5OnvWire5' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[5]",
         },
         "SetIPVM1VWire4" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM5VWire5" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM2VLAN21" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetIPVM6VLAN22" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddRouteVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "SamevWireNetperfTestDifferentCluster" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            #ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound   => 1,
            l3protocol    => "ipv4,ipv6",
            l4protocol    => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            MinExpResult   => "1",
         },
         "PingTestSameCluster1" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestSameCluster2" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[3].vnic.[1]",
            SupportAdapter => "vm.[4].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM6ToVM5" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[6].vnic.[1]",
            SupportAdapter => "vm.[5].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM1ToVM2" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM1ToAllOthers" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "iperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestVM1ToAllOthers" => {
            Type           => "Traffic",
            ToolName       => "Netperf,Iperf,Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 10,
            NoofInbound    => 3,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            L4Protocol     => "tcp,udp",
            SendMessageSize=> "16384,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            SendMessageSize=> "16384,96684,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         'DeleteAllVmknics' => {
            Type         => "Host",
            TestHost     => "host.[2-5]",
            deletevmknic => "host.[2-5].vmknic.[-1]",
         },
         'AddVmotionvmknicsHost2and3' => {
            Type         => "Host",
            TestHost     => "host.[2-3]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[1]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         'AddVmotionvmknicsHost4and5' => {
            Type         => "Host",
            TestHost     => "host.[4-5]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[6]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[3]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[2]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweronVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweron",
         },
         'PoweronVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweron",
         },
         'PoweronVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweroff",
         },
         'PoweroffVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweroff",
         },
         'PoweroffVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweroff",
         },
         'AddvNICsOn1to6VMs' => {
            Type   => "VM",
            TestVM => "vm.[1-6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOn1to4VMs' => {
            Type   => "VM",
            TestVM => "vm.[5],vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnectedVM1toVM6' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-6].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'CreateNetworkScopeClusterSJCandSFO' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2-3]",
               },
            },
         },
         'CreateNetworkScopeClusterSJCandSFOHybridMode' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  controlplanemode => "HYBRID_MODE",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2-3]",
               },
            },
         },
         'UpdatevWiresToUnicastMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[1-5]",
            reconfigure      => "true",
            name             => "vWire-Updated-Unicast",
            controlplanemode => "UNICAST_MODE",
         },
         'UpdatevWiresToHybridMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[1-5]",
            reconfigure => "true",
            name             => "vWire-Updated-Hybrid",
            controlplanemode => "HYBRID_MODE",
         },
         'UpdatevWiresToMulticastMode' => {
            Type              => "Switch",
            TestSwitch        => "vsm.[1].networkscope.[1].virtualwire.[1-5]",
            reconfigure => "true",
            name             => "vWire-Updated-Multicast",
            controlplanemode => "MULTICAST_MODE",
         },
         'UpdatevWires1and4ToHybridMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[1],vsm.[1].networkscope.[1].virtualwire.[4]",
            reconfigure => "true",
            name             => "vWire-Updated-Hybrid",
            controlplanemode => "HYBRID_MODE",
         },
         'UpdatevWires2and5ToMulticastMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[2],vsm.[1].networkscope.[1].virtualwire.[5]",
            reconfigure => "true",
            name             => "vWire-Updated-Multicast",
            controlplanemode => "MULTICAST_MODE",
         },
         'UpdatevWires3and6ToUnicastMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[3],vsm.[1].networkscope.[1].virtualwire.[6]",
            reconfigure => "true",
            name             => "vWire-Updated-Unicast",
            controlplanemode => "UNICAST_MODE",
         },
         ConfigureVXLAN_ClusterSFO => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[2]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
                  vibs         => "install",
                  switch       => "vc.[1].vds.[2]",
                  vlan         => "22",
                  mtu          => "1600",
                  vmkniccount  => "1",
                  teaming      => "FAILOVER_ORDER",
               },
            },
         },
         'InstallVIBs_ClusterSFO' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[2]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
                  vibs         => "install",
               },
            },
         },
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },
   'AddHostScenarios' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "AddHostScenarios",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Adding/Removing hosts before/after cluster prep and verifying data traffic ",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_TwoVDS_FiveHost_SixVM,
      'WORKLOADS' => {
         Sequence => [
            #       ['SetSegmentIDRange'],
            #             ['SetMulticastRange'],
                         ['AddHost2ToClusterSJC'],
                         # AddHost3ToPreppedVDSThenCluster
                         ['RemoveHosts3FromVDSSJC'],
                         ['Install_Configure_ClusterSJC'],
                         ['AddHosts3ToVDSSJC'],
                         ['AddHost3ToClusterSJC'],

                         # PrepClusterWithoutAddingOneHostToVDS
                         # AddHostToPreppedClusterBeforeVXLANConfig
                         # AddHostToPreppedClusterThenVDS
                         ['InstallVIBs_ClusterSFO'],
                         ['AddHost4ToClusterSFO'],
                         ['ConfigureVXLAN_ClusterSFO'],
                         # ['DeployFirstController'],
                         ['CreateNetworkScopeClusterSJCandSFO'],
                         ['CreateVirtualWires'],

                         # AddHostToClusterAfterVDRCreation scenario
                         # AddHostToPreppedClusterAfterVXLANConfig
                         # DIAddNewHost
                         ['RemoveHost5FromVDSSFO'],
                         ['DeployEdge1OnHost4'],
                         ['CreateVXLANLIF1OnEdge1'],
                         ['CreateVXLANLIF2OnEdge1'],
                         ['CreateVXLANLIF3OnEdge1'],
                         # Uncomment this for Trinity next. PR 1165207
                         # ['CreateVLANLIFsOnEdge1'],
                         ['AddHost5ToVDSSFO'],
                         ['AddHost5ToClusterSFO'],
                         ['AddvNICsOn1to6VMs'],
                         ['PoweronVM1','PoweronVM2','PoweronVM3'],
                         ['PoweronVM4','PoweronVM5','PoweronVM6'],
                         ['MakeSurevNICConnectedVM1toVM6'],
                         ['PingTestVM1ToAllOthers','PingTest3VMsToOther3VMs'],
                         ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                         'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                         'PlaceVM5OnvWire3','PlaceVM6OnvWire3'],
                         ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire2',
                         'SetIPVM4VWire2','SetIPVM5VWire3','SetIPVM6VWire3'],
                         ['AddRouteVM1VWire1','AddRouteVM2VWire1',
                         'AddRouteVM3VWire2','AddRouteVM4VWire2',
                         'AddRouteVM5VWire3','AddRouteVM6VWire3'],
                         ['PingTestVM1ToAllOthers'],
                         ['PingTest3VMsToOther3VMs'],
                         ['RemovevNICFromVM1to6'],
                         ['DeleteEdges'],
                         #  ['RemovevNICFromVM1to6'],
                         ['DeleteVirtualWires'],
                         ['DeleteNetworkScope'],
                         ['UnconfigureVXLAN'],
                         ['Uninstall_Unconfigure_All_Cluster'],
                         ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                         # Hosts leave VDS and come back
                         ['RemoveHosts3FromVDSSJC'],
                         ['RemoveHost5FromVDSSFO'],
                         ['AddHosts3ToVDSSJC'],
                         ['AddHost5ToVDSSFO'],
                         ["RemoveHost5FromClusterSFO"],
                         ['Install_Configure_ClusterSJC'],
                         ['InstallVIBs_ClusterSFO'],
                         ['ConfigureVXLAN_ClusterSFO'],
                         ['CreateNetworkScopeClusterSJCandSFO'],
                         ['CreateVirtualWires'],
                         ['DeployEdge1OnHost4'],
                         ['AddHost5ToClusterSFO'],
                         # Trinity next update release
                         # ['CreateVLANLIFsOnEdge1'],
                         ['CreateVXLANLIF1OnEdge1'],
                         ['CreateVXLANLIF2OnEdge1'],
                         ['CreateVXLANLIF3OnEdge1'],
                         ['PoweronVM1','PoweronVM2','PoweronVM3'],
                         ['PoweronVM4','PoweronVM5','PoweronVM6'],
                         ['AddvNICsOn1to6VMs'],
                         ['MakeSurevNICConnectedVM1toVM6'],
                         ['PlaceVM1OnvWire1','PlaceVM2OnvWire1',
                          'PlaceVM3OnvWire2','PlaceVM4OnvWire2',
                          'PlaceVM5OnvWire3','PlaceVM6OnvWire3'],
                         ['SetIPVM1VWire1','SetIPVM2VWire1','SetIPVM3VWire2',
                          'SetIPVM4VWire2','SetIPVM5VWire3','SetIPVM6VWire3'],
                         ['AddRouteVM1VWire1','AddRouteVM2VWire1',
                          'AddRouteVM3VWire2','AddRouteVM4VWire2',
                          'AddRouteVM5VWire3','AddRouteVM6VWire3'],
                         ['PingTestVM1ToAllOthers'],
                         ['PingTest3VMsToOther3VMs'],
                     ],
         ExitSequence => [
                      ['DeleteEdges'],
                      ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3','RemovevNICFromVM4',
                       'RemovevNICFromVM5','RemovevNICFromVM6'],
                      ['Delete_All_VirtualWires'],
                      ['DeleteNetworkScopes'],
                      ['Uninstall_VDNCluster'],
                      ## ['DeleteController'],
                      ['RemoveHosts2and3FromClusterSJC','RemoveHosts4and5FromClusterSFO'],
                      ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                         ],

         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,

         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         'Uninstall_Unconfigure_All_Cluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'UnconfigureVXLAN' => {
            Type             => 'Cluster',
            testcluster      => "vsm.[1].vdncluster.[-1]",
            vxlan            => "unconfigure",
         },
         "RemoveHosts3UpinkFromVDSSJC" => {
             Type            => "Switch",
             TestSwitch      => "vc.[1].vds.[1]",
             ConfigureUplinks=> "remove",
             vmnicadapter    => "host.[3].vmnic.[1]",
         },
         "RemoveHost5FromVDSSFO" => {
             Type            => "Switch",
             TestSwitch      => "vc.[1].vds.[2]",
             configurehosts  => "remove",
             host            => "host.[5]",
         },
         "RemoveHost4FromVDSSFO" => {
             Type            => "Switch",
             TestSwitch      => "vc.[1].vds.[2]",
             configurehosts  => "remove",
             host            => "host.[4]",
         },
         "RemoveHosts3FromVDSSJC" => {
             Type            => "Switch",
             TestSwitch      => "vc.[1].vds.[1]",
             configurehosts  => "remove",
             host            => "host.[3]",
         },
         "AddHosts3ToVDSSJC" => {
             Type            => "Switch",
             TestSwitch      => "vc.[1].vds.[1]",
             configurehosts  => "add",
             ConfigureUplinks=> "add",
             host            => "host.[3]",
             vmnicadapter    => "host.[3].vmnic.[1]",
         },
         "AddHost4ToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4]",
         },
         "RemoveHost4FromClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsFromCluster => "host.[4]",
         },
         "AddHost5ToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[5]",
         },
         "AddHost5ToVDSSFO" => {
             Type            => "Switch",
             TestSwitch      => "vc.[1].vds.[2]",
             configurehosts  => "add",
             ConfigureUplinks=> "add",
             host            => "host.[5]",
             vmnicadapter    => "host.[5].vmnic.[1]",
         },
         "Delete2ndController"   => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            deletevxlancontroller => "vsm.[1].vxlancontroller.[2]",
         },
         'DeleteNetworkScope'  => {
            Type               => 'NSX',
            TestNSX            => "vsm.[1]",
            deletenetworkscope => "vsm.[1].networkscope.[-1]",
          },
         'DeleteVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            deletevirtualwire => "vsm.[1].networkscope.[1].virtualwire.[-1]",
         },
         "AddHost2ToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[2]",
         },
         "AddHost3ToClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             MoveHostsToCluster => "host.[3]",
         },
         "AddHost4ToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4]",
         },
         "AddHosts4and5ToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "RemoveHost5FromClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             movehostsfromcluster => "host.[5]",
         },
         "RemoveHosts4and5FromClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             movehostsfromcluster => "host.[4],host.[5]",
         },
         "RemoveHosts2and3FromClusterSJC" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[2]",
             movehostsfromcluster => "host.[2],host.[3]",
         },
         "AddHost5ToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[5]",
         },
         "AddHosts4and5ToVDSSJC" => {
             Type        => "Switch",
             TestSwitch  => "vc.[1].vds.[2]",
             configurehosts => "add",
             host           => "host.[4-5]",
             vmnicadapter   => "host.[4-5].vmnic.[1]",
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM4OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM5OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM6OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM4OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM5OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM6OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM2OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM4OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[4].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM5OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[5].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM6OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[6].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnvWire4' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[4]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.16",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeployEdge2OnHost2"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[2]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]",
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.27",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeployEdge3OnHost3"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[3]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]",
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.28",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeployEdge1OnHost4"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[3]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[4]",
                  portgroup     => "vc.[1].dvportgroup.[7]",
                  primaryaddress => "10.10.10.29",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'CreateVXLANLIF1OnEdge1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2OnEdge1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[2]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF3OnEdge1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[3]'   => {
                  name        => "lif-vwire3-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.33.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         "SetIPVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.31.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.31.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.31.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.32.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.32.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.32.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.32.1.65',
            netmask    => "255.255.0.0",
         },
         "SetIPVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.33.1.15',
            netmask    => "255.255.0.0",
         },
         "SetIPVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.33.1.25',
            netmask    => "255.255.0.0",
         },
         "SetIPVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.35',
            netmask    => "255.255.0.0",
         },
         "SetIPVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.33.1.45',
            netmask    => "255.255.0.0",
         },
         "SetIPVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            ipv4       => '172.33.1.55',
            netmask    => "255.255.0.0",
         },
         "SetIPVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            ipv4       => '172.33.1.65',
            netmask    => "255.255.0.0",
         },
         "AddRouteVM1VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM2VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM3VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM4VWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteVM1VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM2VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM3VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM4VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM5VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM6VWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteVM1VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM2VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM3VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM4VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM5VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[5].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddRouteVM6VWire3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[6].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "SamevWireNetperfTestDifferentCluster" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            #ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound   => 1,
            l3protocol    => "ipv4,ipv6",
            l4protocol    => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            MinExpResult   => "1",
         },
         "PingTestSameCluster1" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestSameCluster2" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[3].vnic.[1]",
            SupportAdapter => "vm.[4].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTestVM1ToAllOthers" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => "60",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "iperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestVM1ToAllOthers" => {
            Type           => "Traffic",
            ToolName       => "Netperf,Iperf,Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2-6].vnic.[1]",
            NoofOutbound   => 10,
            NoofInbound    => 3,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest2VMsToOther2VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-2].vnic.[1]",
            SupportAdapter => "vm.[5-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            L4Protocol     => "tcp,udp",
            SendMessageSize=> "16384,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            maxtimeout     => "128000",
            ParallelSession=> "yes",
         },
         "NetperfTest3VMsToOther3VMs" => {
            Type           => "Traffic",
            ToolName       => "Netperf",
            TestAdapter    => "vm.[1-3].vnic.[1]",
            SupportAdapter => "vm.[4-6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            SendMessageSize=> "16384,96684,128804",
            LocalSendSocketSize  => "131072",
            RemoteSendSocketSize => "131072",
            TestDuration   => TRAFFIC_TESTDURATION,
            maxtimeout     => "128000",
            ExpectedResult => "ignore",
            ParallelSession=> "yes",
         },
         'DeleteAllVmknics' => {
            Type         => "Host",
            TestHost     => "host.[2-5]",
            deletevmknic => "host.[2-5].vmknic.[-1]",
         },
         'AddVmotionvmknicsHost2and3' => {
            Type         => "Host",
            TestHost     => "host.[2-3]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[1]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         'AddVmotionvmknicsHost4and5' => {
            Type         => "Host",
            TestHost     => "host.[4-5]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[6]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[3]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[2]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweronVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweron",
         },
         'PoweronVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweron",
         },
         'PoweronVM6' => {
            Type    => "VM",
            TestVM  => "vm.[6]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweroff",
         },
         'AddvNICsOn1to6VMs' => {
            Type   => "VM",
            TestVM => "vm.[1-6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOn1to4VMs' => {
            Type   => "VM",
            TestVM => "vm.[5],vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnectedVM1toVM6' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-6].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1to6' => {
            Type       => "VM",
            TestVM     => "vm.[1-6]",
            deletevnic => "vm.[x].vnic.[1]",
         },
         'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
         'CreateNetworkScopeClusterSJCandSFO' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2-3]",
               },
            },
         },
         'CreateNetworkScopeClusterSJCandSFOHybridMode' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  controlplanemode => "HYBRID_MODE",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2-3]",
               },
            },
         },
         'UpdatevWiresToUnicastMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[1-5]",
            updatelogicalswitch => "true",
            name             => "vWire-Updated-Unicast",
            controlplanemode => "UNICAST_MODE",
         },
         'UpdatevWiresToHybridMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[1-5]",
            updatelogicalswitch => "true",
            name             => "vWire-Updated-Hybrid",
            controlplanemode => "HYBRID_MODE",
         },
         'UpdatevWiresToMulticastMode' => {
            Type              => "Switch",
            TestSwitch        => "vsm.[1].networkscope.[1].virtualwire.[1-5]",
            updatelogicalswitch => "true",
            name             => "vWire-Updated-Multicast",
            controlplanemode => "MULTICAST_MODE",
         },
         'UpdatevWires1and4ToHybridMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[1],vsm.[1].networkscope.[1].virtualwire.[4]",
            updatelogicalswitch => "true",
            name             => "vWire-Updated-Hybrid",
            controlplanemode => "HYBRID_MODE",
         },
         'UpdatevWires2and5ToMulticastMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[2],vsm.[1].networkscope.[1].virtualwire.[5]",
            updatelogicalswitch => "true",
            name             => "vWire-Updated-Multicast",
            controlplanemode => "MULTICAST_MODE",
         },
         'UpdatevWires3and6ToUnicastMode' => {
            Type                => "Switch",
            TestSwitch          => "vsm.[1].networkscope.[1].virtualwire.[3],vsm.[1].networkscope.[1].virtualwire.[6]",
            updatelogicalswitch => "true",
            name             => "vWire-Updated-Unicast",
            controlplanemode => "UNICAST_MODE",
         },
         'CreateVirtualWires' => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         ConfigureVXLAN_ClusterSFO => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[2]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
                  vibs         => "install",
                  switch       => "vc.[1].vds.[2]",
                  vlan         => "22",
                  mtu          => "1600",
                  vmkniccount  => "1",
                  teaming      => "FAILOVER_ORDER",
               },
            },
         },
         ConfigureVXLAN_ClusterSJC => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[1]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[2]",
                  vibs         => "install",
                  switch       => "vc.[1].vds.[1]",
                  vlan         => "19,21",
                  mtu          => "1600",
                  vmkniccount  => "1",
                  teaming      => "FAILOVER_ORDER",
               },
            },
         },
         'InstallVIBs_ClusterSFO' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[2]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
                  vibs         => "install",
               },
            },
         },
         'InstallVIBs_ClusterSJC' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[1]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[2]",
                  vibs         => "install",
               },
            },
         },
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange'    => SET_MULTICAST_RANGE,
         "DeployFirstController"=> DEPLOY_FIRSTCONTROLLER,
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },

   'LIFsOnDifferentVDRs' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "LIFsOnDifferentVDRs",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "This is a negative test to make sure data traffic does not work across different VDRs",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_OneVDS_FourDVPG_ThreeHost_ThreeVM,
      'WORKLOADS' => {
         Sequence => [
            #         ['SetSegmentIDRange'],
            #          ['SetMulticastRange'],
                      #['DeployFirstController'],
                      # ['Install_Configure_ClusterSJC'],
                      ['CreateNetworkScope'],
                      ['CreateVirtualWires'],

                      ########   Same Host   ########
                      # VXLAN test - VMs on same vWire
                      ['AddvNICsOnVMs'],
                      ['PoweronVM1','PoweronVM2'],
                      ['MakeSurevNICConnected'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2SamevWire'],
                      ['PingTest'],
                      #['NetperfTestIgnorethroughput'],

                      ['DeployEdge','DeployEdge2and3','DeployEdge4and5'],
                      ['CreateVXLANLIF1','CreateVXLANLIF2','CreateVLANLIF3','CreateVLANLIF4','BridgevWire3ToVLAN21'],

                      # VDR test - VXLAN to VXLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM2'],
                      ['PingTestNegative'],
                      # ['NetperfTestIgnorethroughput'],

                      # VDR test - VLAN to VLAN rotuing
                      ['PlaceVM1OnVLAN16','PlaceVM2OnVLAN17'],
                      ['SetVLANIPVM1','SetVLANIPVM2'],
                      ['AddVLANRouteVM1','AddVLANRouteVM2'],
                      ['PingTestNegative'],
                      # ['NetperfTestIgnorethroughput'],

                      # VDR test - VXLAN to VLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM2OnVLAN17'],
                      ['SetVXLANIPVM1','SetVLANIPVM2'],
                      ['AddVXLANRouteVM1','AddVLANRouteVM2'],
                      ['PingTestNegative'],
                      # ['NetperfTestIgnorethroughput'],

                      # VDR test - VLAN to VXLAN rotuing
                      ['PlaceVM2OnvWire2','PlaceVM1OnVLAN16'],
                      ['SetVLANIPVM1','SetVXLANIPVM2'],
                      ['AddVLANRouteVM1','AddVXLANRouteVM2'],
                      ['PingTestNegative'],
                      # ['NetperfTestIgnorethroughput'],

                      # VDR test - Briding
                      ['PlaceVM1OnvWire3','PlaceVM2OnVLAN21'],
                      ['SetVXLANBridgeIPVM1','SetVLANBridgeIPVM2'],
                      ['PingTest'],
                      #['NetperfTestIgnorethroughput'],

                      ########   Different Host   ########
                      ['PoweronVM3'],
                      # VXLAN test - VMs on same vWire
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire1'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3SamevWire'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VXLAN to VXLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHostNegative'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VLAN to VLAN rotuing
                      ['PlaceVM1OnVLAN16','PlaceVM3OnVLAN17'],
                      ['SetVLANIPVM1','SetVLANIPVM3'],
                      ['AddVLANRouteVM1','AddVLANRouteVM3'],
                      ['PingTestDifferentHostNegative'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VXLAN to VLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM3OnVLAN17'],
                      ['SetVXLANIPVM1','SetVLANIPVM3'],
                      ['AddVXLANRouteVM1','AddVLANRouteVM3'],
                      ['PingTestDifferentHostNegative'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VLAN to VXLAN rotuing
                      ['PlaceVM3OnvWire2','PlaceVM1OnVLAN16'],
                      ['SetVLANIPVM1','SetVXLANIPVM3'],
                      ['AddVLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHostNegative'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - Briding
                      ['PlaceVM1OnvWire3'],
                      ['PlaceVM3OnVLAN21'],
                      ['SetVXLANBridgeIPVM1','SetVLANBridgeIPVM3'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],
                     ],
         ExitSequence => [
                            ['DeleteEdges'],
                            ['RemovevNICFromVM1','RemovevNICFromVM2',
                             'RemovevNICFromVM3'],
                            ['Delete_All_VirtualWires'],
                            ['DeleteNetworkScopes'],
                            #  ['Uninstall_VDNCluster'],
                            #  ['RebootHost2','RebootHost3'],
                         ],
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'DeleteController' => DELETE_ALL_CONTROLLERS,
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnVLAN16' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM2OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM3OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM2OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVM3OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "autogenerate",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.18",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeployEdge2and3"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[2]' => {
                  name          => "autogenerate",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[2]",
                  primaryaddress => "10.10.10.20",
                  subnetmask     => "255.255.255.0",
               },
               '[3]' => {
                  name          => "autogenerate",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[2]",
                  primaryaddress => "10.10.10.21",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeployEdge4and5"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[4]' => {
                  name          => "autogenerate",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[3]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[3]",
                  primaryaddress => "10.10.10.22",
                  subnetmask     => "255.255.255.0",
               },
               '[5]' => {
                  name          => "autogenerate",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[3]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[3]",
                  primaryaddress => "10.10.10.23",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         'CreateVXLANLIF1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[2]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF3' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[3]",
            lif => {
               '[1]'   => {
                  name        => "lif-16-$$",
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.16.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF4' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[4]",
            lif => {
               '[1]'   => {
                  name        => "lif-17-$$",
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.17.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'BridgevWire3ToVLAN21' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[5]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  portgroup   => "vc.[1].dvportgroup.[4]",
               },
            },
         },
         "SetVLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.17.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.16.1.1",
         },
         "AddVLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "AddVLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.6',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANBridgeIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.32.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "SamevWireNetperfTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            #ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound   => 1,
            l3protocol    => "ipv4,ipv6",
            l4protocol    => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            # Test might run on vESX also
            MinExpResult   => "1",
         },
         "PingTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "PingTestDifferentHostNegative" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "fail",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "PingTestNegative" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "fail",
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "netperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestDifferentHostIgnoreThroughput" => {
            Type           => "Traffic",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            # Test might run on vESX also
            ExpectedResult => "ignore",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweroff",
         },
         'AddvNICsOnVMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnected' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
         'CreateVirtualWires' => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         "DeployFirstController"   => DEPLOY_FIRSTCONTROLLER,
      },
   },
   'FastSwitchingofVMBackingFloodPing_SameHost' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "FastSwitchingofVMBackingFloodPing_SameHost",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Fast switching of port groups of VMs  on same host and making sure data traffic works fine",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_OneVDS_FourDVPG_ThreeHost_ThreeVM,
      'WORKLOADS' => {
         Sequence => [
            #      ['SetSegmentIDRange'],
            #          ['SetMulticastRange'],
                      #['DeployFirstController'],
                      #['Install_Configure_ClusterSJC'],
                      ['CreateNetworkScope'],
                      ['CreateVirtualWires'],
                      ['DeployEdge'],
                      ['CreateVXLANLIF1'],
                      ['CreateVXLANLIF2'],
                      ['CreateVLANLIF3'],
                      ['CreateVLANLIF4'],
                      ['BridgevWire3ToVLAN21'],

                      ########   Same Host   ########
                      # VXLAN test - VMs on same vWire
                      ['PoweronVM1','PoweronVM2'],
                      ['AddvNICsOnVMs'],
                      ['MakeSurevNICConnected'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2SamevWire'],
                      ['PingTest'],

                      # Fast Switching vxlan-vxlan routing
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM2'],
                      ['PingTestWhileSwitching','SwitchVM1BackingVeryFast'],

                      ['PoweroffVM1'],
                      ['PoweronVM1'],
                      # Fast Switching vlan-vlan routing
                      ['PlaceVM1OnVLAN16','PlaceVM2OnVLAN17'],
                      ['SetVLANIPVM1','SetVLANIPVM2'],
                      ['AddVLANRouteVM1','AddVLANRouteVM2'],
                      ['PingTestWhileSwitching','SwitchVM1BackingVeryFast'],

                      ['PoweroffVM1'],
                      ['PoweronVM1'],
                      # Fast Switching vlan-vxlan bridging
                      ['PlaceVM1OnvWire3','PlaceVM2OnVLAN21'],
                      ['SetVXLANBridgeIPVM1','SetVLANBridgeIPVM2'],
                      ['PingTestWhileSwitching','SwitchVM1BackingVeryFast'],

                      ['PoweroffVM1'],
                      ['PoweronVM1'],
                      # Verify ping for vxlan-vxlan routing
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM2'],
                      ['PingTest'],

                     ],
         ExitSequence => [
                            ['DeleteEdges'],
                            ['RemovevNICFromVM1','RemovevNICFromVM2',
                             'RemovevNICFromVM3'],
                            ['Delete_All_VirtualWires'],
                            ['DeleteNetworkScopes'],
                            #       ['Uninstall_VDNCluster'],
                            #       #       # ['DeleteController'],
                            #       ['RebootHost2','RebootHost3'],
                         ],

         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
         'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
         'CreateVirtualWires' => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.19",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         'SwitchVM1BackingVeryFast' => {
            Type        => "NetAdapter",
            Iterations  => STRESS_ITERATIONS,
            maxtimeout  => "12800",
            SleepBetweenCombos=> "10",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1],".
                           "vc.[1].dvportgroup.[4],".
                           "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnVLAN16' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM2OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM3OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM2OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVM3OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         'CreateVXLANLIF1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[2]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF3' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[3]'   => {
                  name        => "lif-16-$$",
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.16.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF4' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[4]'   => {
                  name        => "lif-17-$$",
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.17.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'BridgevWire3ToVLAN21' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  portgroup   => "vc.[1].dvportgroup.[4]",
               },
            },
         },
         "SetVLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.17.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.16.1.1",
         },
         "AddVLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "AddVLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.6',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANBridgeIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.32.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "PingTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            Routingscheme  => 'unicast,flood',
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => 6,
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            Routingscheme  => 'unicast',
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => 6,
         },
         "PingTestDifferentHostWhileSwitching" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            Routingscheme  => 'flood,broadcast',
            ParallelSession=> 'yes',
            NoofOutbound   => 1,
            NoofInbound    => 1,
            connectivitytest=> 0,
            TestDuration   => 6,
            ExpectedResult => "ignore",
         },
         "PingTestWhileSwitching" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            Routingscheme  => 'flood,unicast',
            ParallelSession=> 'yes',
            NoofOutbound   => 1,
            NoofInbound    => 1,
            connectivitytest=> 0,
            TestDuration   => 6,
            ExpectedResult => "ignore",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweroff",
         },
         'AddvNICsOnVMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnected' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'DeleteIPPool' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            sleepbetweenworkloads => "10",
            deleteippool => "vsm.[1].ippool.[1]",
         },
         'DeleteNetworkScope' => DELETE_ALL_NETWORKSCOPES,
         'DeleteVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            deletevirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1-3]",
         },
         'UnconfigureVXLAN' => {
            Type             => 'Cluster',
            testcluster      => "vsm.[1].vdncluster.[1]",
            vxlan            => "unconfigure",
         },
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },

   'FastSwitchingofVMBackingFloodPing_DifferentHost' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "FastSwitchingofVMBackingFloodPing_DifferentHost",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Fast switching of port groups of the VM on different hosts and verify data traffic",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_OneVDS_FourDVPG_ThreeHost_ThreeVM,
      'WORKLOADS' => {
         Sequence => [
            #      ['SetSegmentIDRange'],
            #          ['SetMulticastRange'],
                      #['DeployFirstController'],
                      # ['Install_Configure_ClusterSJC'],
                      ['CreateNetworkScope'],
                      ['CreateVirtualWires'],
                      ['DeployEdge'],
                      ['CreateVXLANLIF1'],
                      ['CreateVXLANLIF2'],
                      ['CreateVLANLIF3'],
                      ['CreateVLANLIF4'],

                      ########   Different Host   ########
                      ['PoweronVM3'],
                      ['PoweronVM1'],
                      ['AddvNICsOnVMs'],

                      # VXLAN test - VMs on same vWire
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire1'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3SamevWire'],
                      ['PingTestDifferentHost'],

                      # VDR test - VXLAN to VXLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHostWhileSwitching','SwitchVM1BackingVeryFast'],

                      ['PoweroffVM1'],
                      ['PoweronVM1'],
                      # VDR test - VLAN to VLAN rotuing
                      ['PlaceVM1OnVLAN16','PlaceVM3OnVLAN17'],
                      ['SetVLANIPVM1','SetVLANIPVM3'],
                      ['AddVLANRouteVM1','AddVLANRouteVM3'],
                      ['PingTestDifferentHostWhileSwitching','SwitchVM1BackingVeryFast'],

                      ['PoweroffVM1'],
                      ['PoweronVM1'],
                      # VDR test - Bridging
                      ['PlaceVM1OnvWire3'],
                      ['PlaceVM3OnVLAN21'],
                      ['SetVXLANBridgeIPVM1','SetVLANBridgeIPVM3'],
                      ['PingTestDifferentHostWhileSwitching','SwitchVM1BackingVeryFast'],

                      ['PoweroffVM1'],
                      ['PoweronVM1'],
                      # # Test datapath
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHost'],
                     ],
         ExitSequence => [
                      ['DeleteEdges'],
                      ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3'],
                      ['Delete_All_VirtualWires'],
                      ['DeleteNetworkScopes'],
                      # ['Uninstall_VDNCluster'],
                      # ['RebootHost2','RebootHost3'],
                     ],

         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         'DeleteController' => DELETE_ALL_CONTROLLERS,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
         'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
         'CreateVirtualWires' => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.19",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         'SwitchVM1BackingVeryFast' => {
            Type        => "NetAdapter",
            Iterations  => STRESS_ITERATIONS,
            maxtimeout  => "12800",
            SleepBetweenCombos=> "10",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1],".
                           "vc.[1].dvportgroup.[4],".
                           "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnVLAN16' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM2OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM3OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM2OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVM3OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         'CreateVXLANLIF1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[2]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF3' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[3]'   => {
                  name        => "lif-16-$$",
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.16.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF4' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[4]'   => {
                  name        => "lif-17-$$",
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.17.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'BridgevWire3ToVLAN21' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  portgroup   => "vc.[1].dvportgroup.[4]",
               },
            },
         },
         "SetVLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.17.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.16.1.1",
         },
         "AddVLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "AddVLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.6',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANBridgeIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.32.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "PingTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            Routingscheme  => 'unicast,flood',
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => 6,
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            Routingscheme  => 'flood',
            ParallelSession=> 'yes',
            NoofOutbound   => 1,
            NoofInbound    => 1,
            connectivitytest=> 0,
            TestDuration   => 5,
         },
         "PingTestDifferentHostWhileSwitching" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            Routingscheme  => 'flood,unicast',
            ParallelSession=> 'yes',
            NoofOutbound   => 1,
            NoofInbound    => 1,
            connectivitytest=> 0,
            TestDuration   => 6,
            ExpectedResult => "ignore",
         },
         "PingTestWhileSwitching" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            Routingscheme  => 'flood,unicast',
            ParallelSession=> 'yes',
            NoofOutbound   => 1,
            NoofInbound    => 1,
            connectivitytest=> 0,
            TestDuration   => 6,
            ExpectedResult => "ignore",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweroff",
         },
         'AddvNICsOnVMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnected' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'DeleteIPPool' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            sleepbetweenworkloads => "10",
            deleteippool => "vsm.[1].ippool.[1]",
         },
         'DeleteNetworkScope' => DELETE_ALL_NETWORKSCOPES,
         'DeleteVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            deletevirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1-3]",
         },
         'UnconfigureVXLAN' => {
            Type             => 'Cluster',
            testcluster      => "vsm.[1].vdncluster.[1]",
            vxlan            => "unconfigure",
         },
      },
   },

   'ChangingUplinks' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "ChangingUplinks",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Add/Remove uplinks of the VDS in a loop and verify data traffic ",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_OneVDS_FourDVPG_ThreeHost_ThreeVM,
      'WORKLOADS' => {
         Sequence => [
            #         ['SetSegmentIDRange'],
            #             ['SetMulticastRange'],
                         #  ['DeployFirstController'],
                         # ['Install_Configure_ClusterSJC'],
                         ['CreateNetworkScope'],
                         ['CreateVirtualWires'],
                         ['AddvNICsOnVMs'],
                         ['PoweronVM1','PoweronVM2'],
                         ['MakeSurevNICConnected'],
                         ['SetVXLANIPVM1','SetVXLANIPVM2SamevWire'],
                         ['PingTest'],
                         ['DeployEdge'],
                         ['CreateVXLANLIF1'],
                         ['CreateVXLANLIF2'],
                         ['CreateVLANLIF3'],
                         ['CreateVLANLIF4'],
                         ['BridgevWire3ToVLAN21'],

                         ########   Different Host   ########
                         ['PoweronVM3'],
                         # VXLAN test - VMs on same vWire
                         ['PlaceVM1OnvWire1','PlaceVM3OnvWire1'],
                         ['SetVXLANIPVM1','SetVXLANIPVM3SamevWire'],
                         ['PingTestDifferentHost'],
                         ['NetperfTestDifferentHostIgnoreThroughput',
                          'RemoveAddUplink1InLoop'],
                         ['PingTestDifferentHost'],

                         # VDR test - VXLAN to VXLAN rotuing
                         ['PlaceVM1OnvWire1','PlaceVM3OnvWire2'],
                         ['SetVXLANIPVM1','SetVXLANIPVM3'],
                         ['AddVXLANRouteVM1','AddVXLANRouteVM3'],
                         ['NetperfTestDifferentHostIgnoreThroughput',
                          'RemoveAddUplink1InLoop'],
                         ['PingTestDifferentHost'],

                         # VDR test - VLAN to VLAN rotuing
                         ['PlaceVM1OnVLAN16','PlaceVM3OnVLAN17'],
                         ['SetVLANIPVM1','SetVLANIPVM3'],
                         ['AddVLANRouteVM1','AddVLANRouteVM3'],
                         ['NetperfTestDifferentHostIgnoreThroughput',
                          'RemoveAddUplink1InLoop'],
                         ['PingTestDifferentHost'],

                         # VDR test - VXLAN to VLAN rotuing
                         ['PlaceVM1OnvWire1','PlaceVM3OnVLAN17'],
                         ['SetVXLANIPVM1','SetVLANIPVM3'],
                         ['AddVXLANRouteVM1','AddVLANRouteVM3'],
                         ['NetperfTestDifferentHostIgnoreThroughput',
                          'RemoveAddUplink1InLoop'],
                         ['PingTestDifferentHost'],

                         # VDR test - VLAN to VXLAN rotuing
                         ['PlaceVM3OnvWire2','PlaceVM1OnVLAN16'],
                         ['SetVLANIPVM1','SetVXLANIPVM3'],
                         ['AddVLANRouteVM1','AddVXLANRouteVM3'],
                         ['NetperfTestDifferentHostIgnoreThroughput',
                          'RemoveAddUplink1InLoop'],
                         ['PingTestDifferentHost'],

                         # VDR test - Briding
                         ['PlaceVM1OnvWire3'],
                         ['PlaceVM3OnVLAN21'],
                         ['SetVXLANBridgeIPVM1','SetVLANBridgeIPVM3'],
                         ['NetperfTestDifferentHostIgnoreThroughput',
                          'RemoveAddUplink1InLoop'],
                         ['PingTestDifferentHost'],

                            # Do the test with Uplink2 now
                            # TODO: Do this for TrinityFebUpdate
                            #['AddUplink2'],
                            #['NetperfTestDifferentHostIgnoreThroughput'],
                            #['PlaceVM1OnvWire1','PlaceVM3OnvWire2'],
                            #['SetVXLANIPVM1','SetVXLANIPVM3'],
                            #['AddVXLANRouteVM1','AddVXLANRouteVM3'],
                            #['NetperfTestDifferentHostIgnoreThroughput',
                            # Keep Uplink1 intact for traffic
                            # 'RemoveAddUplink2InLoop'],
                            #['PingTestDifferentHost'],

                     ],
         ExitSequence => [
                            ['DeleteEdges'],
                            ['RemovevNICFromVM1','RemovevNICFromVM2',
                             'RemovevNICFromVM3'],
                            ['Delete_All_VirtualWires'],
                            ['DeleteNetworkScopes'],
                            #  ['Uninstall_VDNCluster'],
                            #  #       # ['DeleteController'],
                            #  ['RebootHost2','RebootHost3'],
                         ],

         'DeleteController' => DELETE_ALL_CONTROLLERS,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "RemoveUplink1" => {
            Type             => "Switch",
            TestSwitch       => "vc.[1].vds.[1]",
            ConfigureUplinks => "remove",
            vmnicadapter     => "host.[2-3].vmnic.[1]",
         },
         "RemoveAddUplink1InLoop" => {
            Type             => "Switch",
            Iterations       => STRESS_ITERATIONS,
            TestSwitch       => "vc.[1].vds.[1]",
            SleepBetweenCombos=> "20",
            ConfigureUplinks => "remove,add",
            vmnicadapter     => "host.[2-3].vmnic.[1]",
         },
         "RemoveAddUplink2InLoop" => {
            Type             => "Switch",
            Iterations       => STRESS_ITERATIONS,
            TestSwitch       => "vc.[1].vds.[1]",
            SleepBetweenCombos=> "10",
            ConfigureUplinks => "add,remove,add",
            vmnicadapter     => "host.[2-3].vmnic.[2]",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnVLAN16' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM2OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM3OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM2OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVM3OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.30",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         'CreateVXLANLIF1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[2]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF3' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[3]'   => {
                  name        => "lif-16-$$",
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.16.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF4' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[4]'   => {
                  name        => "lif-17-$$",
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.17.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'BridgevWire3ToVLAN21' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  portgroup   => "vc.[1].dvportgroup.[4]",
               },
            },
         },
         "SetVLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.17.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.16.1.1",
         },
         "AddVLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "AddVLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.6',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANBridgeIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.32.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "SamevWireNetperfTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            #ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound   => 1,
            l3protocol    => "ipv4,ipv6",
            l4protocol    => "tcp,udp",
            TestDuration   => '6',
            # Test might run on vESX also
            MinExpResult   => "1",
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => '6',
         },
         "PingTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => '6',
         },
         "NetperfTestDifferentHostIgnoreThroughput" => {
            Type           => "Traffic",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            l4protocol     => 'udp',
            TestDuration   => '10',
            # Test might run on vESX also
            ExpectedResult => "ignore",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweroff",
         },
         'AddvNICsOnVMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnected' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'AddvNICForvMotion' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2]",
            vnic => {
               '[2]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vc.[1].dvportgroup.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'DeleteIPPool' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            sleepbetweenworkloads => "10",
            deleteippool => "vsm.[1].ippool.[1]",
         },
         'CreateNetworkScope' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2]",
               },
            },
         },
         'CreateVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            VirtualWire       => {
               "[1]" => {
                  name               => "AutoGenerate",
                  tenantid           => "1",
               },
               "[2]" => {
                  name               => "AutoGenerate",
                  tenantid           => "2",
               },
               "[3]" => {
                  name               => "AutoGenerate",
                  tenantid           => "3",
               },
            },
         },
         'GetVirtualWireID' => {
            Type            => "Switch",
            FindType            => "Switch",
            testvirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'DeleteNetworkScope' => DELETE_ALL_NETWORKSCOPES,
         'DeleteVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            deletevirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1-3]",
         },
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'UnconfigureVXLAN' => {
            Type             => 'Cluster',
            testcluster      => "vsm.[1].vdncluster.[1]",
            vxlan            => "unconfigure",
         },
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         'ResetSegmentID' => RESET_SEGMENTID,
         'ResetMulticast' => RESET_MULTICASTRANGE,
         "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },
   'HostRebootScenarios' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "HostRebootScenarios",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "rebooting the hosts carrying vdr instances and then verify different traffic combos ",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_OneVDS_FourDVPG_ThreeHost_ThreeVM,
      'WORKLOADS' => {
         Sequence => [
            #       ['SetSegmentIDRange'],
            #          ['SetMulticastRange'],
                      #['DeployFirstController'],
                      #'Deploy2ndController','Deploy3rdController',
                      #['Install_Configure_ClusterSJC'],
                      ['CreateNetworkScope'],
                      ['CreateVirtualWires'],
                      ['AddvNICsOnVMs'],
                      ['PoweronVM1','PoweronVM2'],
                      ['MakeSurevNICConnected'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2SamevWire'],
                      ['PingTest'],
                      ['DeployEdge'],
                      ['CreateVXLANLIF1'],
                      ['CreateVXLANLIF2'],
                      ['CreateVLANLIF3'],
                      ['CreateVLANLIF4'],
                      ['BridgevWire3ToVLAN21'],

                      ########   Different Host   ########
                      ['PoweronVM3'],
                      # VXLAN test - VMs on same vWire
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire1'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3SamevWire'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VXLAN to VXLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3'],
                         ['AddVXLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # Rebooot one host
                      ['RebootHost2'],
                      ['PoweronVM1','PoweronVM2','PoweronVM3'],
                      # VDR test - VXLAN to VXLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],
                      # Rebooot both hosts
                      ['RebootHost2','RebootHost3'],
                      ['PoweronVM1','PoweronVM2','PoweronVM3'],
                      # VDR test - VXLAN to VXLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM3OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM3'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VLAN to VLAN rotuing
                      ['PlaceVM1OnVLAN16','PlaceVM3OnVLAN17'],
                      ['SetVLANIPVM1','SetVLANIPVM3'],
                      ['AddVLANRouteVM1','AddVLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VXLAN to VLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM3OnVLAN17'],
                      ['SetVXLANIPVM1','SetVLANIPVM3'],
                      ['AddVXLANRouteVM1','AddVLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - VLAN to VXLAN rotuing
                      ['PlaceVM3OnvWire2','PlaceVM1OnVLAN16'],
                      ['SetVLANIPVM1','SetVXLANIPVM3'],
                      ['AddVLANRouteVM1','AddVXLANRouteVM3'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],

                      # VDR test - Briding
                      ['PlaceVM1OnvWire3'],
                      ['PlaceVM3OnVLAN21'],
                      ['SetVXLANBridgeIPVM1','SetVLANBridgeIPVM3'],
                      ['PingTestDifferentHost'],
                      # ['NetperfTestDifferentHostIgnoreThroughput'],
                     ],
         ExitSequence => [
                      ['DeleteEdges'],
                      ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3'],
                      ['Delete_All_VirtualWires'],
                      ['DeleteNetworkScopes'],
                      # ['Uninstall_VDNCluster'],
                      # # # ['DeleteController'],
                      # ['RebootHost2','RebootHost3'],
                         ],
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "Deploy2ndController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[2]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         "Deploy3rdController"   => {
            Type       => "NSX",
            TestNSX    => "vsm.[1]",
            vxlancontroller  => {
               '[3]' => {
                  name         => "AutoGenerate",
                  ippool       => "vsm.[1].ippool.[1]",
                  resourcepool => "vc.[1].datacenter.[1].cluster.[1]",
                  host         => "host.[1]",
               },
            },
         },
         'PrepClusterSFO' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[3]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
               },
            },
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnVLAN16' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM2OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM3OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM2OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVM3OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.31",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         'CreateVXLANLIF1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[2]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF3' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[3]'   => {
                  name        => "lif-16-$$",
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.16.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF4' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[4]'   => {
                  name        => "lif-17-$$",
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.17.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'BridgevWire3ToVLAN21' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  portgroup   => "vc.[1].dvportgroup.[4]",
               },
            },
         },
         "SetVLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.17.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.16.1.1",
         },
         "AddVLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "AddVLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.6',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANBridgeIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
             ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.32.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "SamevWireNetperfTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            #ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound   => 1,
            l3protocol    => "ipv4,ipv6",
            l4protocol    => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            # Test might run on vESX also
            MinExpResult   => "1",
         },
         "PingTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            sleepbetweenworkloads => "60",
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "netperf,iperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
            ParallelSession=> "yes",
         },
         "NetperfTestDifferentHostIgnoreThroughput" => {
            Type           => "Traffic",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            # Test might run on vESX also
            ExpectedResult => "ignore",
         },
         'AddVmotionvmknics' => {
            Type         => "Host",
            TestHost     => "host.[2-3]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[1]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[2]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[3]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'AddvNICsOnVMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnected' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'AddvNICForvMotion' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2]",
            vnic => {
               '[2]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vc.[1].dvportgroup.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'DeleteIPPool' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            sleepbetweenworkloads => "10",
            deleteippool => "vsm.[1].ippool.[1]",
         },
         'CreateNetworkScope' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2]",
               },
            },
         },
         'CreateVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            VirtualWire       => {
               "[1]" => {
                  name               => "AutoGenerate",
                  tenantid           => "1",
               },
               "[2]" => {
                  name               => "AutoGenerate",
                  tenantid           => "2",
               },
               "[3]" => {
                  name               => "AutoGenerate",
                  tenantid           => "3",
               },
            },
         },
         'GetVirtualWireID' => {
            Type            => "Switch",
            FindType            => "Switch",
            testvirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'DeleteNetworkScope' => DELETE_ALL_NETWORKSCOPES,
         'DeleteVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            deletevirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1-3]",
         },
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'UnconfigureVXLAN' => {
            Type             => 'Cluster',
            testcluster      => "vsm.[1].vdncluster.[1]",
            vxlan            => "unconfigure",
         },
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         'ResetSegmentID'    => RESET_SEGMENTID,
         'ResetMulticast'    => RESET_MULTICASTRANGE,
         "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
         'DeleteController' => DELETE_ALL_CONTROLLERS,
      },
   },
   'JumboSanityTestVmknics' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "JumboSanityTestVmknics",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Sanity test to verify different routing/bridging traffic combos for vmknics",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_OneVDS_FourDVPG_ThreeHost_ThreeVM,
      'WORKLOADS' => {
         Sequence => [
            #    ['SetSegmentIDRange'],
            #           ['SetMulticastRange'],
                       #['DeployFirstController'],
                       #['Install_Configure_ClusterSJC'],
                       ['CreateNetworkScope'],
                       ['CreateVirtualWires'],

                       ['DeployEdge'],
                       ['CreateVXLANLIF1'],
                       ['CreateVXLANLIF2'],
                       ['CreateVLANLIF3'],
                       ['CreateVLANLIF4'],
                       ['BridgevWire3ToVLAN21'],

                       ########   Different Host   ########
                       # VXLAN test - Vmknics on same vWire
                       ['CreateAllNetstacks'],
                       ['DeleteAllVmknicsHost2','DeleteAllVmknicsHost3'],
                       ['AddvmknicHost2VirtualWire1','AddvmknicHost3VirtualWire1'],
                       ['AddvmknicHost2VirtualWire2','AddvmknicHost3VirtualWire2'],
                       ['AddvmknicHost2VLAN16','AddvmknicHost3VLAN16'],
                       ['AddvmknicHost2VLAN17','AddvmknicHost3VLAN17'],
                       ['SetGatewayvWire1Netstack'],
                       ['SetGatewayvWire2Netstack'],
                       ['SetGatewayVLAN16Netstack'],
                       ['SetGatewayVLAN17Netstack'],
                       ['PingTestVmknics'],
                       ['MassivePingTestVmknics'],
                       ['AddvmknicHost2VirtualWire3','AddvmknicHost3VLAN21'],
                       ['SetGatewayNetstackForBridge'],
                       ['PingTestBridgedVmknics'],
                      ],
            ExitSequence => [
                       ['DeleteAllVmknicsHost2','DeleteAllVmknicsHost3'],
                       ['DeleteEdges'],
                       #['RemovevNICFromVM1','RemovevNICFromVM2',
                       #'RemovevNICFromVM3'],
                       ['Delete_All_VirtualWires'],
                       ['DeleteNetworkScopes'],
                       # ['Uninstall_VDNCluster'],
                       # ['RebootHost2','RebootHost3'],
                      ],

            'DeleteController' => DELETE_ALL_CONTROLLERS,
            'DeleteEdges' => DELETE_ALL_EDGES,
            'CreateNetworkScope'    => CREATE_NETWORKSCOPE_ClusterSJC,
            'CreateVirtualWires'    => CREATE_VIRTUALWIRES_NETWORKSCOPE1,
            'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
            'SetSegmentIDRange'     => SET_SEGMENTID_RANGE,
            'SetMulticastRange'     => SET_MULTICAST_RANGE,
            'DeployFirstController' => DEPLOY_FIRSTCONTROLLER,
            'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
            'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
            'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
            'RemovevNICFromVM1' => {
               Type       => "VM",
               TestVM     => "vm.[1]",
               deletevnic => "vm.[1].vnic.[1]",
            },
            'RemovevNICFromVM2' => {
               Type       => "VM",
               TestVM     => "vm.[2]",
               deletevnic => "vm.[2].vnic.[1]",
            },
            'RemovevNICFromVM3' => {
               Type       => "VM",
               TestVM     => "vm.[3]",
               deletevnic => "vm.[3].vnic.[1]",
            },
            'RemovevNICFromVM4' => {
               Type       => "VM",
               TestVM     => "vm.[4]",
               deletevnic => "vm.[4].vnic.[1]",
            },
            'RemovevNICFromVM5' => {
               Type       => "VM",
               TestVM     => "vm.[5]",
               deletevnic => "vm.[5].vnic.[1]",
            },
            'RemovevNICFromVM6' => {
               Type       => "VM",
               TestVM     => "vm.[6]",
               deletevnic => "vm.[6].vnic.[1]",
            },
            "RebootHost" => {
               Type            => "Host",
               TestHost        => "host.[1]",
               reboot          => "yes",
            },
            "RebootHost2" => {
               Type            => "Host",
               TestHost        => "host.[2]",
               reboot          => "yes",
            },
            "RebootHost3" => {
               Type            => "Host",
               TestHost        => "host.[3]",
               reboot          => "yes",
            },
            "RebootHost4" => {
               Type            => "Host",
               TestHost        => "host.[4]",
               reboot          => "yes",
            },
            "RebootHost5" => {
               Type            => "Host",
               TestHost        => "host.[5]",
               reboot          => "yes",
            },
            "MoveHostsToClusterSFO" => {
                Type        => "Cluster",
                TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
                MoveHostsToCluster => "host.[4],host.[5]",
            },
            "RebootHost" => {
               Type            => "Host",
               TestHost        => "host.[1]",
               reboot          => "yes",
            },
            "CreateAllNetstacks" => {
               Type     => "Host",
               TestHost => "host.[2-3]",
               netstack => {
                  '[1]' => {
                     name => "subnet31-netstack-$$",
                  },
                  '[2]' => {
                     name => "subnet32-netstack-$$",
                  },
                  '[3]' => {
                     name => "subnet16-netstack-$$",
                  },
                  '[4]' => {
                     name => "subnet17-netstack-$$",
                  },
                  '[5]' => {
                     name => "subnet21-netstack-$$",
                  },
               },
            },
            "SetGatewayNetstackForBridge" => {
               Type         => "Netstack",
               TestNetstack => "host.[2-3].netstack.[5]",
               setnetstackgateway => "add",
               route        => "172.21.1.1",
            },
            "SetGatewayVLAN17Netstack" => {
               Type         => "Netstack",
               TestNetstack => "host.[2-3].netstack.[4]",
               setnetstackgateway => "add",
               route        => "172.17.1.1",
            },
            "SetGatewayVLAN16Netstack" => {
               Type         => "Netstack",
               TestNetstack => "host.[2-3].netstack.[3]",
               setnetstackgateway => "add",
               route        => "172.16.1.1",
            },
            "SetGatewayvWire2Netstack" => {
               Type         => "Netstack",
               TestNetstack => "host.[2-3].netstack.[2]",
               setnetstackgateway => "add",
               route        => "172.32.1.1",
            },
            "SetGatewayvWire1Netstack" => {
               Type         => "Netstack",
               TestNetstack => "host.[2-3].netstack.[1]",
               setnetstackgateway => "add",
               route        => "172.31.1.1",
            },
            'DeleteAllVmknicsHost2' => {
               Type         => "Host",
               TestHost     => "host.[2]",
               deletevmknic => "host.[2].vmknic.[-1]",
            },
            'DeleteAllVmknicsHost3' => {
               Type         => "Host",
               TestHost     => "host.[3]",
               deletevmknic => "host.[3].vmknic.[-1]",
            },
            'AddvmknicHost2VirtualWire1' => {
               Type     => "Host",
               TestHost => "host.[2]",
               maxtimeout  => "128000",
               vmknic   => {
                  '[1]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                     ipv4address => '172.31.1.7',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[1]",
                  },
                  '[6]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                     ipv4address => '172.31.1.8',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[1]",
                  },
                  '[11]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                     ipv4address => '172.31.1.9',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[1]",
                  },
                  '[16]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                     ipv4address => '172.31.1.10',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[1]",
                  },
               },
            },
            'AddvmknicHost2VirtualWire2' => {
               Type     => "Host",
               TestHost => "host.[2]",
               maxtimeout  => "128000",
               vmknic   => {
                  '[2]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                     ipv4address => '172.32.1.7',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[2]",
                  },
                  '[7]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                     ipv4address => '172.32.1.8',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[2]",
                  },
                  '[12]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                     ipv4address => '172.32.1.9',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[2]",
                  },
                  '[17]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                     ipv4address => '172.32.1.10',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[2]",
                  },
               },
            },
            'AddvmknicHost2VirtualWire3' => {
               Type     => "Host",
               TestHost => "host.[2]",
               maxtimeout     => "128000",
               vmknic   => {
                  '[5]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
                     ipv4address => '172.21.1.7',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[5]",
                  },
                  '[10]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
                     ipv4address => '172.21.1.8',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[5]",
                  },
                  '[15]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
                     ipv4address => '172.21.1.9',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[5]",
                  },
                  '[20]' => {
                     portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
                     ipv4address => '172.21.1.10',
                     netmask     => "255.255.0.0",
                     netstack    => "host.[2].netstack.[5]",
                  },
               },
            },
            'AddvmknicHost2VLAN16' => {
               Type     => "Host",
               TestHost => "host.[2]",
               maxtimeout  => "128000",
               vmknic   => {
                  '[3]' => {
                     portgroup   => "vc.[1].dvportgroup.[2]",
                     ipv4address => 'dhcp',
                     netstack    => "host.[2].netstack.[3]",
                  },
                  '[8]' => {
                     portgroup   => "vc.[1].dvportgroup.[2]",
                     ipv4address => 'dhcp',
                     netstack    => "host.[2].netstack.[3]",
                  },
                  '[13]' => {
                     portgroup   => "vc.[1].dvportgroup.[2]",
                     ipv4address => 'dhcp',
                     netstack    => "host.[2].netstack.[3]",
                  },
                  '[18]' => {
                     portgroup   => "vc.[1].dvportgroup.[2]",
                     ipv4address => 'dhcp',
                     netstack    => "host.[2].netstack.[3]",
                  },
               },
            },
            'AddvmknicHost2VLAN17' => {
               Type     => "Host",
               TestHost => "host.[2]",
               maxtimeout  => "128000",
               vmknic   => {
                  '[4]' => {
                     portgroup   => "vc.[1].dvportgroup.[3]",
                     ipv4address => 'dhcp',
                     netstack    => "host.[2].netstack.[4]",
                  },
                  '[9]' => {
                     portgroup   => "vc.[1].dvportgroup.[3]",
                     ipv4address => 'dhcp',
                     netstack    => "host.[2].netstack.[4]",
                  },
                  '[14]' => {
                     portgroup   => "vc.[1].dvportgroup.[3]",
                     ipv4address => 'dhcp',
                     netstack    => "host.[2].netstack.[4]",
                  },
                  '[19]' => {
                     portgroup   => "vc.[1].dvportgroup.[3]",
                     ipv4address => 'dhcp',
                     netstack    => "host.[2].netstack.[4]",
                  },
               },
            },
            'AddvmknicHost3VirtualWire1' => {
               Type     => "Host",
               TestHost => "host.[3]",
               maxtimeout  => "128000",
               vmknic   => {
                  '[1]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  ipv4address => '172.31.1.17',
                  netmask     => "255.255.0.0",
                  netstack    => "host.[3].netstack.[1]",
               },
               '[6]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  ipv4address => '172.31.1.18',
                  netmask     => "255.255.0.0",
                  netstack    => "host.[3].netstack.[1]",
               },
               '[11]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  ipv4address => '172.31.1.19',
                  netmask     => "255.255.0.0",
                  netstack    => "host.[3].netstack.[1]",
               },
               '[16]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  ipv4address => '172.31.1.20',
                  netmask     => "255.255.0.0",
                  netstack    => "host.[3].netstack.[1]",
               },
            },
         },
         'AddvmknicHost3VirtualWire2' => {
            Type     => "Host",
            TestHost => "host.[3]",
            maxtimeout  => "128000",
            vmknic   => {
               '[2]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  ipv4address => '172.32.1.17',
                  netmask     => "255.255.0.0",
                  netstack    => "host.[3].netstack.[2]",
               },
               '[7]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  ipv4address => '172.32.1.18',
                  netmask     => "255.255.0.0",
                  netstack    => "host.[3].netstack.[2]",
               },
               '[12]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  ipv4address => '172.32.1.19',
                  netmask     => "255.255.0.0",
                  netstack    => "host.[3].netstack.[2]",
               },
               '[17]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  ipv4address => '172.32.1.20',
                  netmask     => "255.255.0.0",
                  netstack    => "host.[3].netstack.[2]",
               },
            },
         },
         'AddvmknicHost3VLAN16' => {
            Type     => "Host",
            TestHost => "host.[3]",
            maxtimeout  => "128000",
            vmknic   => {
               '[3]' => {
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[3]",
               },
               '[8]' => {
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[3]",
               },
               '[13]' => {
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[3]",
               },
               '[18]' => {
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[3]",
               },
            },
         },
         'AddvmknicHost3VLAN17' => {
            Type     => "Host",
            TestHost => "host.[3]",
            maxtimeout  => "128000",
            vmknic   => {
               '[4]' => {
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[4]",
               },
               '[9]' => {
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[4]",
               },
               '[14]' => {
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[4]",
               },
               '[19]' => {
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[4]",
               },
            },
         },
         'AddvmknicHost3VLAN21' => {
            Type     => "Host",
            TestHost => "host.[3]",
            maxtimeout  => "128000",
            vmknic   => {
               '[5]' => {
                  portgroup   => "vc.[1].dvportgroup.[4]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[5]",
               },
               '[10]' => {
                  portgroup   => "vc.[1].dvportgroup.[4]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[5]",
               },
               '[15]' => {
                  portgroup   => "vc.[1].dvportgroup.[4]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[5]",
               },
               '[20]' => {
                  portgroup   => "vc.[1].dvportgroup.[4]",
                  ipv4address => 'dhcp',
                  netstack    => "host.[3].netstack.[5]",
               },
            },
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.32",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'CreateVXLANLIF1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[2]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF3' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[3]'   => {
                  name        => "lif-16-$$",
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.16.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF4' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[4]'   => {
                  name        => "lif-17-$$",
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.17.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'BridgevWire3ToVLAN21' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  portgroup   => "vc.[1].dvportgroup.[4]",
               },
            },
         },
         "PingTestBridgedVmknics" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "host.[2].vmknic.[5]",
            SupportAdapter => "host.[3].vmknic.[5],host.[3].vmknic.[10],".
                              "host.[3].vmknic.[15],host.[3].vmknic.[20]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            sleepbetweenworkloads => "60",
            TestDuration   => "60",
         },
         "MassivePingTestVmknics" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "host.[2].vmknic.[1-4],host.[2].vmknic.[6-9]",
            SupportAdapter => "host.[2].vmknic.[11-14],host.[2].vmknic.[16-19]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            sleepbetweenworkloads => 10,
            TestDuration   => "60",
         },
         "PingTestVmknics" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "host.[2].vmknic.[1-4]",
            SupportAdapter => "host.[3].vmknic.[1-4]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            sleepbetweenworkloads => 10,
            TestDuration   => "60",
         },
         "MassiveNetperfTestVmknicsIgnorethroughput" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "netperf",
            TestAdapter    => "host.[2].vmknic.[1-4],host.[2].vmknic.[6-9]",
            SupportAdapter => "host.[2].vmknic.[11-14],host.[2].vmknic.[16-19]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            L4Protocol     => "tcp,udp",
            BurstType      => "stream,rr",
            SendMessageSize=> "16384,128804",
            LocalSendSocketSize  => "131072-100,5000",
            RemoteSendSocketSize => "131072",
            #ParallelSession=> "yes",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestVmknicsIgnorethroughput" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "netperf",
            TestAdapter    => "host.[2].vmknic.[1-4]",
            SupportAdapter => "host.[3].vmknic.[1-4]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            L4Protocol     => "tcp,udp",
            BurstType      => "stream,rr",
            SendMessageSize=> "16384,128804",
            LocalSendSocketSize  => "131072-100,5000",
            RemoteSendSocketSize => "131072",
            ParallelSession=> "yes",
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
      },
   },
   'TestAllVmotionCombos' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      TestName         => "TestAllVmotionCombos",
      Version          => "2" ,
      Tags             => "RunOnCAT",
      Summary          => "Verify different vMotion combinations work and verify data traffic",
      TestbedSpec      => $VDNetLib::TestData::TestbedSpecs::TestbedSpec::OneVSM_OneVC_OneDC_OneVDS_FourDVPG_ThreeHost_ThreeVM,
      'WORKLOADS' => {
         Sequence => [
            #        ['SetSegmentIDRange'],
            #          ['SetMulticastRange'],
                      #['DeployFirstController'],
                      #    ['Install_Configure_ClusterSJC'],
                      ['CreateNetworkScope'],
                      ['CreateVirtualWires'],
                      ['DeployEdge'],
                      ['CreateVXLANLIF1'],
                      ['CreateVXLANLIF2'],
                      ['CreateVLANLIF3'],
                      ['CreateVLANLIF4'],
                      ['BridgevWire3ToVLAN21'],

                      ['AddvNICsOnVMs'],
                      ['PoweronVM1','PoweronVM2'],
                      ['MakeSurevNICConnected'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2SamevWire'],
                      ['PingTest'],
                      ['NetperfTestIgnorethroughput'],

                       # Same VLAN vmotion
                      ['AddvmknicHost2VLAN16','AddvmknicHost3VLAN16'],
                      ['NetperfTestIgnorethroughput','vMotionVM2ToHost3'],
                      ['PingTest'],

                       # Same vWire vmotion
                      ['DeleteAllVmknicsHost2','DeleteAllVmknicsHost3'],
                      ['AddvmknicHost2VirtualWire1','AddvmknicHost3VirtualWire1'],
                      ['NetperfTestIgnorethroughput','vMotionVM2ToHost3'],
                      ['PingTest'],

                      # VDR test - VLAN to VLAN rotuing
                      ['PlaceVM1OnVLAN16','PlaceVM2OnVLAN17'],
                      ['SetVLANIPVM1','SetVLANIPVM2'],
                      ['AddVLANRouteVM1','AddVLANRouteVM2'],
                      ['PingTest'],
                      ['DeleteAllVmknicsHost2','DeleteAllVmknicsHost3'],
                      ['AddvmknicHost2VLAN16','AddvmknicHost3VLAN17'],
                      ['AddRouteHost2VLAN16','AddRouteHost3VLAN17'],
                      ['NetperfTestIgnorethroughput','vMotionVM1ToHost3'],
                      ['PingTest'],

                      # VDR test - VXLAN to VXLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM2OnvWire2'],
                      ['SetVXLANIPVM1','SetVXLANIPVM2'],
                      ['AddVXLANRouteVM1','AddVXLANRouteVM2'],
                      ['PingTest'],
                      ['DeleteAllVmknicsHost2','DeleteAllVmknicsHost3'],
                      ['AddvmknicHost2VirtualWire1','AddvmknicHost3VirtualWire2'],
                      ['AddRouteHost2vWire1','AddRouteHost3vWire2'],
                      ['NetperfTestIgnorethroughput','vMotionVM1ToHost2'],
                      ['PingTest'],


                      # VDR test - VXLAN to VLAN rotuing
                      ['PlaceVM1OnvWire1','PlaceVM2OnVLAN17'],
                      ['SetVXLANIPVM1','SetVLANIPVM2'],
                      ['AddVXLANRouteVM1','AddVLANRouteVM2'],
                      ['PingTest'],
                      ['DeleteAllVmknicsHost2','DeleteAllVmknicsHost3'],
                      ['AddvmknicHost2VirtualWire1','AddvmknicHost3VLAN17'],
                      ['AddRouteHost2vWire1','AddRouteHost3VLAN17'],
                      ['NetperfTestIgnorethroughput','vMotionVM2ToHost2'],
                      ['PingTest'],

                      # VDR test - VLAN to VXLAN rotuing
                      ['PlaceVM2OnvWire2','PlaceVM1OnVLAN16'],
                      ['SetVLANIPVM1','SetVXLANIPVM2'],
                      ['AddVLANRouteVM1','AddVXLANRouteVM2'],
                      ['PingTest'],
                      ['DeleteAllVmknicsHost2','DeleteAllVmknicsHost3'],
                      ['AddvmknicHost2VirtualWire2','AddvmknicHost3VLAN16'],
                      ['AddRouteHost2vWire2','AddRouteHost3VLAN16'],
                      ['NetperfTestIgnorethroughput','vMotionVM2ToHost3'],
                      ['PingTest'],

                      # VDR test - Briding
                      ['PlaceVM1OnvWire3','PlaceVM2OnVLAN21'],
                      ['SetVXLANBridgeIPVM1','SetVLANBridgeIPVM2'],
                      ['PingTest'],
                      ['DeleteAllVmknicsHost2','DeleteAllVmknicsHost3'],
                      ['AddvmknicHost2VirtualWire3','AddvmknicHost3VLAN21'],
                      ['NetperfTestIgnorethroughput','vMotionVM2ToHost2'],
                      ['PingTest'],

                     ],
         ExitSequence => [
                            ['DeleteAllVmknicsHost2','DeleteAllVmknicsHost3'],
                            ['DeleteEdges'],
                            ['RemovevNICFromVM1','RemovevNICFromVM2',
                             'RemovevNICFromVM3'],
                            ['Delete_All_VirtualWires'],
                            ['DeleteNetworkScopes'],
                            #       ['Uninstall_VDNCluster'],
                            #       # ['DeleteController'],
                            #       ['RebootHost2','RebootHost3'],
                         ],
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "MoveHostsToClusterSFO" => {
             Type        => "Cluster",
             TestCluster => "vc.[1].datacenter.[1].cluster.[3]",
             MoveHostsToCluster => "host.[4],host.[5]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         'DeleteAllVmknicsHost2' => {
            Type         => "Host",
            TestHost     => "host.[2]",
            deletevmknic => "host.[2].vmknic.[-1]",
         },
         'DeleteAllVmknicsHost3' => {
            Type         => "Host",
            TestHost     => "host.[3]",
            deletevmknic => "host.[3].vmknic.[-1]",
         },
         "vMotionVM1ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[1]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[3]",
         },
         "vMotionVM1ToHost2"       => {
            Type            => "VM",
            TestVM          => "vm.[1]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[2]",
         },
         "vMotionVM2ToHost2"       => {
            Type            => "VM",
            TestVM          => "vm.[2]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[2]",
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[2]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[3]",
         },
         "vMotionVM3ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[3]",
            Iterations      => "1",
            vmotion         => "roundtrip",
            dsthost         => "host.[3]",
         },
         'AddvmknicHost2VirtualWire1' => {
            Type     => "Host",
            TestHost => "host.[2]",
            vmknic   => {
               '[1]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  ipv4address => '172.31.1.9',
                  netmask     => "255.255.0.0",
                  configurevmotion => "enable",
               },
            },
         },
         'AddvmknicHost2VirtualWire2' => {
            Type     => "Host",
            TestHost => "host.[2]",
            vmknic   => {
               '[2]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  ipv4address => '172.32.1.9',
                  netmask     => "255.255.0.0",
                  configurevmotion => "enable",
               },
            },
         },
         'AddvmknicHost2VirtualWire3' => {
            Type     => "Host",
            TestHost => "host.[2]",
            vmknic   => {
               '[5]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  ipv4address => '172.21.1.9',
                  netmask     => "255.255.0.0",
                  configurevmotion => "enable",
               },
            },
         },
         'AddvmknicHost2VLAN16' => {
            Type     => "Host",
            TestHost => "host.[2]",
            vmknic   => {
               '[3]' => {
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  ipv4address => 'dhcp',
                  configurevmotion => "enable",
               },
            },
         },
         'AddvmknicHost2VLAN17' => {
            Type     => "Host",
            TestHost => "host.[2]",
            vmknic   => {
               '[4]' => {
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  ipv4address => 'dhcp',
                  configurevmotion => "enable",
               },
            },
         },
         'AddvmknicHost3VirtualWire1' => {
            Type     => "Host",
            TestHost => "host.[3]",
            vmknic   => {
               '[1]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  ipv4address => '172.31.1.19',
                  netmask     => "255.255.0.0",
                  configurevmotion => "enable",
               },
            },
         },
         'AddvmknicHost3VirtualWire2' => {
            Type     => "Host",
            TestHost => "host.[3]",
            vmknic   => {
               '[2]' => {
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  ipv4address => '172.32.1.19',
                  netmask     => "255.255.0.0",
                  configurevmotion => "enable",
               },
            },
         },
         'AddvmknicHost3VLAN16' => {
            Type     => "Host",
            TestHost => "host.[3]",
            vmknic   => {
               '[3]' => {
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  ipv4address => 'dhcp',
                  configurevmotion => "enable",
               },
            },
         },
         'AddvmknicHost3VLAN17' => {
            Type     => "Host",
            TestHost => "host.[3]",
            vmknic   => {
               '[4]' => {
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  ipv4address => 'dhcp',
                  configurevmotion => "enable",
               },
            },
         },
         'AddvmknicHost3VLAN21' => {
            Type     => "Host",
            TestHost => "host.[3]",
            vmknic   => {
               '[5]' => {
                  portgroup   => "vc.[1].dvportgroup.[4]",
                  ipv4address => 'dhcp',
                  configurevmotion => "enable",
               },
            },
         },
         "AddRouteHost2vWire1" => {
            Type       => "NetAdapter",
            Testadapter=> "host.[2].vmknic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddRouteHost2vWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "host.[2].vmknic.[2]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteHost3vWire2" => {
            Type       => "NetAdapter",
            Testadapter=> "host.[3].vmknic.[2]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddRouteHost2VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "host.[2].vmknic.[3]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteHost2VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "host.[2].vmknic.[4]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         "AddRouteHost3VLAN16" => {
            Type       => "NetAdapter",
            Testadapter=> "host.[3].vmknic.[3]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "AddRouteHost3VLAN17" => {
            Type       => "NetAdapter",
            Testadapter=> "host.[3].vmknic.[4]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.17.1.1",
         },
         'PrepClusterSFO' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
               '[3]' => {
                  cluster      => "vc.[1].datacenter.[1].cluster.[3]",
               },
            },
         },
         'PlaceVM1OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM2OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire2' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
         },
         'PlaceVM3OnvWire1' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'PlaceVM1OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM3OnvWire3' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vsm.[1].networkscope.[1].virtualwire.[3]",
         },
         'PlaceVM1OnVLAN16' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[2]",
         },
         'PlaceVM2OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM3OnVLAN17' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[3]",
         },
         'PlaceVM2OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVM3OnVLAN21' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[4]",
         },
         'PlaceVMsOnMgmtdvPG' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1-3].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[2]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[2]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.33",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         "DeleteEdges" => DELETE_ALL_EDGES,
         'CreateVXLANLIF1' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[1]'   => {
                  name        => "lif-vwire1-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.31.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVXLANLIF2' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[2]'   => {
                  name        => "lif-vwire2-$$",
                  portgroup   => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.32.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF3' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[3]'   => {
                  name        => "lif-16-$$",
                  portgroup   => "vc.[1].dvportgroup.[2]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.16.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'CreateVLANLIF4' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            lif => {
               '[4]'   => {
                  name        => "lif-17-$$",
                  portgroup   => "vc.[1].dvportgroup.[3]",
                  type        => "internal",
                  connected   => 1,
                  addressgroup => [{addresstype => "primary",
                                    ipv4address => "172.17.1.1",
                                    netmask     => "255.255.0.0",}]
               },
            },
         },
         'BridgevWire3ToVLAN21' => {
            Type   => "VM",
            TestVM => "vsm.[1].vse.[1]",
            bridge => {
               '[1]'   => {
                  name        => "bridge-1-$$",
                  virtualwire => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  portgroup   => "vc.[1].dvportgroup.[4]",
               },
            },
         },
         "SetVLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.17.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.16.1.1",
         },
         "AddVLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "AddVLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.16.0.0,172.31.0.0,172.32.0.0",
            gateway    => "172.17.1.1",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.31.1.15',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2SamevWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.31.1.6',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANBridgeIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "SetVLANBridgeIPVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.32.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.255.0.0",
            route      => "add",
            network    => "172.31.0.0,172.16.0.0,172.17.0.0",
            gateway    => "172.32.1.1",
         },
         "SamevWireNetperfTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            #ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound   => 1,
            l3protocol    => "ipv4,ipv6",
            l4protocol    => "tcp,udp",
            TestDuration   => TRAFFIC_TESTDURATION,
            # Test might run on vESX also
            MinExpResult   => "1",
         },
         "PingTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "PingTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "NetperfTestIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "netperf",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            ExpectedResult => "ignore",
         },
         "NetperfTestDifferentHostIgnoreThroughput" => {
            Type           => "Traffic",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            # Test might run on vESX also
            ExpectedResult => "ignore",
         },
         'AddVmotionvmknics' => {
            Type         => "Host",
            TestHost     => "host.[2-3]",
            vmknic          => {
               '[1]' => {
                  portgroup        => "vc.[1].dvportgroup.[1]",
                  configurevmotion => "enable",
                  ipv4             => "dhcp",
               },
            },
         },
         "vMotionVM2ToHost3"       => {
            Type            => "VM",
            TestVM          => "vm.[2]",
            Iterations      => "1",
            vmotion         => "oneway",
            dsthost         => "host.[3]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweroffVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'PoweroffVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweroff",
         },
         'PoweroffVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweroff",
         },
         'AddvNICsOnVMs' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2],vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'MakeSurevNICConnected' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'PlaceVM2OnMgmtdvpg' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[2].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
         },
         'AddvNICForvMotion' => {
            Type   => "VM",
            TestVM => "vm.[1],vm.[2]",
            vnic => {
               '[2]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vc.[1].dvportgroup.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'DeleteIPPool' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            sleepbetweenworkloads => "10",
            deleteippool => "vsm.[1].ippool.[1]",
         },
         'CreateNetworkScope' => {
            Type         => "NSX",
            TestNSX      => "vsm.[1]",
            networkscope => {
               '[1]' => {
                  name         => "network-scope-1-$$",
                  clusters     => "vc.[1].datacenter.[1].cluster.[2]",
               },
            },
         },
         'CreateVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            VirtualWire       => {
               "[1]" => {
                  name               => "AutoGenerate",
                  tenantid           => "1",
               },
               "[2]" => {
                  name               => "AutoGenerate",
                  tenantid           => "2",
               },
               "[3]" => {
                  name               => "AutoGenerate",
                  tenantid           => "3",
               },
            },
         },
         'GetVirtualWireID' => {
            Type            => "Switch",
            FindType            => "Switch",
            testvirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1]",
         },
         'DeleteNetworkScope' => DELETE_ALL_NETWORKSCOPES,
         'DeleteVirtualWires' => {
            Type              => "TransportZone",
            TestTransportZone => "vsm.[1].networkscope.[1]",
            deletevirtualwire => "vsm.[1].networkscope.[1].virtualwire.[1-3]",
         },
         'Install_Configure_ClusterSJC' => INSTALLVIBS_CONFIGUREVXLAN_ClusterSJC_VDS1,
         'UnconfigureVXLAN' => {
            Type             => 'Cluster',
            testcluster      => "vsm.[1].vdncluster.[1]",
            vxlan            => "unconfigure",
         },
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         'ResetSegmentID'    => RESET_SEGMENTID,
         'ResetMulticast'    => RESET_MULTICASTRANGE,
         "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
         'DeleteController'  => DELETE_ALL_CONTROLLERS,
      },
   },
   'ExpandShrinkTransportZoneTestScenarios' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      Product          => 'VSM',
      QCPath           => '',
      Procedure        => '',
      ExpectedResult   => 'TZ expand and shrink scenarios executed successfully',
      Status           => 'Execution Ready',
      TestName         => 'ExpandShrinkTransportZoneTestScenarios',
      Version          => '2' ,
      Tags             => 'vdr',
      AutomationLevel  => 'Automated',
      FullyAutomatable => 'Y',
      TestcaseLevel    => 'Functional',
      TestcaseType     => 'Functional',
      Priority         => 'P0',
      Developer        => 'adityaj',
      PartnerFacing    => 'N',
      Duration         => '',
      Summary          => "This is the vdr TZ expand and shrink across" .
                           "clusters with one or 2 VDSes ",
      TestbedSpec      => $TDS::NSX::Networking::VirtualRouting::TestbedSpec::OneVC_OneDC_TwoVDS_FourClusters_FiveHost_SevenVMs,
      'WORKLOADS' =>  {
         Sequence => [
                       # First do the initial configuration for
                       # VXLAN/VDR and verify ping
                       # traffic works between hosts in same cluster
                       #      ['SetSegmentIDRange'],
                       #['SetMulticastRange'],
                       #['DeployFirstController'],
                       #['InstallVibsConfigureVxlanClusterSJCVds1'],
                       #['InstallVibsConfigureVxlanClusterSFOVds1'],
                       ['CreateNetworkScope'],
                       ['CreateVirtualWires'],
                       ['DeployEdge'],
                       ['CreateVXLANLIF1'],
                       ['CreateVXLANLIF2'],
                       ['AddvNICsOnVM1'],
                       ['AddvNICsOnVM2'],
                       ['PoweronVM1','PoweronVM2'],
                       ['MakeSurevNICConnectedVm1andVm2'],
                       ['SetVXLANIPVM1','SetVXLANIPVM2DifferentvWire'],
                       ['AddVXLANRouteVM1','AddVXLANRouteVM2'],
                       ['PingTestDifferentHost'],
                       ['NetperfTestDifferentHostIgnorethroughput'],
                       # Start expand the TZ to include another cluster
                       # and do a ping test\
                       # on the vm in that cluster
                       ['Expand_TZ'],
                       ['CreateVXLANLIF3'],
                       ['AddvNICsOnVM3'],
                       ['PoweronVM3'],
                       ['MakeSurevNICConnectedVm1andVm2andVm3'],
                       ['SetVXLANIPVM3DifferentvWire'],
                       ['AddVXLANRouteVM3'],
                       ['PingAllTestDifferentHost'],
                       #Shrink the TZ back to include only cluster 1
                       ['Shrink_TZ'],
                       ['PingTestDifferentHostNegative'],
                       #Expand the TZ across two VDSes
                       #['InstallVibsConfigureVxlanClusterLAXVds2'],
                       ['Expand_TZ_Across_VDSes'],
                       ['CreateVXLANLIF4'],
                       ['AddvNICsOnVM4'],
                       ['PoweronVM4'],
                       ['MakeSurevNICConnectedVm1andVm2andVm3andVm4'],
                       ['SetVXLANIPVM4DifferentvWire'],
                       ['AddVXLANRouteVM4'],
                       ['PingAllTestThreeDifferentHost'],
                       #Shrink the TZ back to include only cluster 1
                       ['RemovevNICFromVM4'],
                       ['Shrink_TZ_1'],
                       ['PingTestDifferentHost'],
                       # Start prep , unprep host and do expansion of TZ
                       # and verify ping traffic
                       ['DeleteEdge'],
                       ['UninstallvibsConfigureVxlanClusterSFOVds1'],
                       ['RebootHost4'],
                       ['InstallVibsConfigureVxlanClusterSFOVds1'],
                       ['PoweronVM3'],
                       ['PoweronVM4'],
                       ['Expand_TZ'],
                       ['Expand_TZ_Across_VDSes'],
                       ['DeployEdge'],
                       ['CreateVXLANLIF1'],
                       ['CreateVXLANLIF2'],
                       ['CreateVXLANLIF3'],
                       ['CreateVXLANLIF4'],
                       ['AddvNICsOnVM4'],
                       ['MakeSurevNICConnectedVm1andVm2andVm3andVm4'],
                       ['SetVXLANIPVM3DifferentvWire'],
                       ['AddVXLANRouteVM3'],
                       ['SetVXLANIPVM4DifferentvWire'],
                       ['AddVXLANRouteVM4'],
                       ['PingAllTest'],
                       #Check the expand shrink by creating vlan lifs
                       # VDR test - VLAN to VXLAN routing
                       ['Shrink_TZ'],
                       ['RemovevNICFromVM4'],
                       ['Shrink_TZ_1'],
                       ['DeleteAllLifs'],
                       ['CreateVLANLIF1'],
                       ['CreateVXLANLIF2'],
                       ['PlaceVM1OnVLAN16'],
                       ['SetVLANIPVM1'],
                       ['AddVLANRouteVM1'],
                       ['PingTestDifferentHost'],
                       #Expand the TZ and see if the ping works
                       # for vds1 across the cluster
                       ['Expand_TZ'],
                       ['Expand_TZ_Across_VDSes'],
                       ['PingTestDifferentHost'],
                       ['Shrink_TZ'],
                       ['Shrink_TZ_1'],
                       ['PingTestDifferentHost'],
        ],
         ExitSequence => [
                      ['DeleteEdge'],
                      ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3'],
                      ['Delete_All_VirtualWires'],
                      ['DeleteNetworkScopes'],
                      # ['Uninstall_VDNCluster'],
                      # # ['DeleteController'],
                      # ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                         ],
        'DeleteController' => DELETE_ALL_CONTROLLERS,
        'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
        'SetMulticastRange' => SET_MULTICAST_RANGE,
        "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
        'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
        'DeleteEdge' => DELETE_ALL_EDGES,
        'CreateVirtualWires' =>  CREATE_VIRTUALWIRES_NETWORKSCOPE1,
        'CreateVXLANLIF1' =>  CREATEVXLANLIF1,
        'CreateVXLANLIF2' =>  CREATEVXLANLIF2,
        'CreateVXLANLIF3' =>  CREATEVXLANLIF3,
        'CreateVXLANLIF4' =>  CREATEVXLANLIF4,
        'CreateVLANLIF1' =>  CREATEVLANLIF1,
        'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
        'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
        'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'RemovevNICFromVM5' => {
            Type       => "VM",
            TestVM     => "vm.[5]",
            deletevnic => "vm.[5].vnic.[1]",
         },
         'RemovevNICFromVM6' => {
            Type       => "VM",
            TestVM     => "vm.[6]",
            deletevnic => "vm.[6].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
        'DeleteAllLifs' => {
            Type       => "VM",
            TestVM     => "vsm.[1].vse.[1]",
            deletelif  => "vsm.[1].vse.[1].lif.[-1]",
        },
        'PlaceVM1OnVLAN16' => {
            Type        => "NetAdapter",
            reconfigure => "true",
            testadapter => "vm.[1].vnic.[1]",
            portgroup   => "vc.[1].dvportgroup.[1]",
        },
        'InstallVibsConfigureVxlanClusterSFOVds1' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
             '[2]' => {
                cluster      => "vc.[1].datacenter.[1].cluster.[3]",
                vibs         => "install",
                switch       => "vc.[1].vds.[1]",
                vlan         => "18",
                mtu          => "1600",
                vmkniccount  => "1",
                teaming      => VDNetLib::TestData::TestConstants::ARRAY_VXLAN_CONFIG_TEAMING_POLICIES,
             },
           },
        },
         'InstallVibsConfigureVxlanClusterSJCVds1' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
             '[1]' => {
                cluster      => "vc.[1].datacenter.[1].cluster.[2]",
                vibs         => "install",
                switch       => "vc.[1].vds.[1]",
                vlan         => "18",
                mtu          => "1600",
                vmkniccount  => "1",
                teaming      => VDNetLib::TestData::TestConstants::ARRAY_VXLAN_CONFIG_TEAMING_POLICIES,
            },
          },
        },
         'RebootHost1' => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
        },
         'RebootHost4' => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
        },
         'RebootHost2' => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
        },
         'RebootHost3' => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
        },
         'RebootHost5' => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
        },
         'InstallVibsConfigureVxlanClusterLAXVds2' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
             '[3]' => {
                cluster      => "vc.[1].datacenter.[1].cluster.[4]",
                vibs         => "install",
                switch       => "vc.[1].vds.[2]",
                vlan         => "19",
                mtu          => "1600",
                vmkniccount  => "1",
                teaming      => VDNetLib::TestData::TestConstants::ARRAY_VXLAN_CONFIG_TEAMING_POLICIES,
            },
          },
        },
         'UninstallvibsConfigureVxlanClusterSFOVds1' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            deletevdncluster     => "vsm.[1].vdncluster.[2]",
          },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[3]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[4]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.10",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'AddvNICsOnVM1' => {
            Type   => "VM",
            TestVM => "vm.[1]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },

         'AddvNICsOnVM2' => {
            Type   => "VM",
            TestVM => "vm.[2]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },

         'AddvNICsOnVM3' => {
            Type   => "VM",
            TestVM => "vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },

         'AddvNICsOnVM4' => {
            Type   => "VM",
            TestVM => "vm.[4]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[4]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },

         'AddvNICsOnVM5' => {
            Type   => "VM",
            TestVM => "vm.[5]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vc.[1].dvportgroup.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOnVM6' => {
            Type   => "VM",
            TestVM => "vm.[6]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vc.[1].dvportgroup.[2]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'AddvNICsOnVM7' => {
            Type   => "VM",
            TestVM => "vm.[7]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vc.[1].dvportgroup.[3]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'RemovevNICFromVM4' => {
            Type       => "VM",
            TestVM     => "vm.[4]",
            deletevnic => "vm.[4].vnic.[1]",
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         'PoweronVM4' => {
            Type    => "VM",
            TestVM  => "vm.[4]",
            vmstate => "poweron",
         },
         'PoweronVM5' => {
            Type    => "VM",
            TestVM  => "vm.[5]",
            vmstate => "poweron",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2DifferentvWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3DifferentvWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM4DifferentvWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            ipv4       => '172.34.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => 'dhcp',
         },
         "PingTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "PingAllTestDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1],vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "PingAllTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1],vm.[3].vnic.[1],vm.[4].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "PingAllTestThreeDifferentHost" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1],vm.[4].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "PingTestDifferentHostNegative" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
            expectedresult => "fail",
         },
         "PingVlanTestSameVdsDifferentCluster" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[5].vnic.[1]",
            SupportAdapter => "vm.[6].vnic.[1], vm.[7].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "PingVlanTestSameVdsSameCluster" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[5].vnic.[1]",
            SupportAdapter => "vm.[6].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         "AddVXLANRouteVM4" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[4].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.34.1.1",
         },
         "AddVLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.16.1.1",
         },
         "NetperfTestDifferentHostIgnorethroughput" => {
            Type           => "Traffic",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1]",
            NoofOutbound   => 1,
            TestDuration   => "60",
            # Test might run on vESX also
            ExpectedResult => "ignore",
         },
         'MakeSurevNICConnectedVm1andVm2' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'MakeSurevNICConnectedVm1andVm2andVm3' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-3].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'MakeSurevNICConnectedVm1andVm2andVm3andVm4' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-4].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
          "Expand_TZ" => {
            Type  => "TransportZone",
            TestTransportZone   => "vsm.[1].networkscope.[1]",
            transportzoneaction => "expand",
            clusters            => "vc.[1].datacenter.[1].cluster.[3]",
         },
          "Expand_TZ_Across_VDSes" => {
            Type  => "TransportZone",
            TestTransportZone   => "vsm.[1].networkscope.[1]",
            transportzoneaction => "expand",
            clusters            => "vc.[1].datacenter.[1].cluster.[4]",
         },
          "Shrink_TZ" => {
            Type  => "TransportZone",
            TestTransportZone   => "vsm.[1].networkscope.[1]",
            transportzoneaction => "shrink",
            clusters            => "vc.[1].datacenter.[1].cluster.[3]",
         },
          "Shrink_TZ_1" => {
            Type  => "TransportZone",
            TestTransportZone   => "vsm.[1].networkscope.[1]",
            transportzoneaction => "shrink",
            clusters            => "vc.[1].datacenter.[1].cluster.[4]",
        },
      },
    },

   'ControllerVMOperationsTestScenarios' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      Product          => 'VSM',
      QCPath           => '',
      Procedure        => '',
      Status           => 'Execution Ready',
      TestName         => 'ControllerVMOperationsTestScenarios',
      Version          => '2' ,
      Tags             => 'vdr',
      AutomationLevel  => 'Automated',
      FullyAutomatable => 'Y',
      TestcaseLevel    => 'Functional',
      TestcaseType     => 'Functional',
      Priority         => 'P0',
      Developer        => 'adityaj',
      PartnerFacing    => 'N',
      Duration         => '',
      Summary          => "Check if the data traffic is working properly" .
                           "while doing VM operations on controller VMs ",
      TestbedSpec      => $TDS::NSX::Networking::VirtualRouting::TestbedSpec::OneVC_OneDC_TwoVDS_FourClusters_FiveHost_SevenVMs,
      'WORKLOADS' =>  {
         Sequence => [
                       # First do the initial configuration for VXLAN/VDR
                       # and verify ping traffic works across all clusters
                       #         ['SetSegmentIDRange'],
                       #['SetMulticastRange'],
                       #['DeployFirstController'],
                       #['InstallVibsConfigureVxlanClusterSJCVds1'],
                       #['InstallVibsConfigureVxlanClusterSFOVds1'],
                       ['CreateNetworkScope'],
                       ['CreateVirtualWires'],
                       ['DeployEdge'],
                       ['CreateVXLANLIF1'],
                       ['CreateVXLANLIF2'],
                       ['AddvNICsOnVM1'],
                       ['AddvNICsOnVM2'],
                       ['PoweronVM1','PoweronVM2'],
                       ['MakeSurevNICConnectedVm1andVm2'],
                       ['SetVXLANIPVM1','SetVXLANIPVM2DifferentvWire'],
                       ['AddVXLANRouteVM1','AddVXLANRouteVM2'],
                       ['Expand_TZ'],
                       ['CreateVXLANLIF3'],
                       ['AddvNICsOnVM3'],
                       ['PoweronVM3'],
                       ['MakeSurevNICConnectedVm1andVm2andVm3'],
                       ['SetVXLANIPVM3DifferentvWire'],
                       ['AddVXLANRouteVM3'],
                       ['PingAllTest'],
                       # Now do the controller VM operations like reboot,
                       # reset, power off , power on, suspend, resume
                       ['RebootControllerVM1'],
                       ['PingAllTest'],
                       ['ResetControllerVM1'],
                       ['PingAllTest'],
                       ['PoweroffControllerVM1'],
                       ['PingAllTest'],
                       ['PoweronControllerVM1'],
                       ['PingAllTest'],
                       ['SuspendControllerVM1'],
                       ['PingAllTest'],
                       ['ResumeControllerVM1'],
                       ['PingAllTest'],
                       # Now deploy 2 more controller VMs and
                       # do all these operations again
                       ['DeploySecondController'],
                       ['DeployThirdController'],
                       ['PingAllTest'],
                       ['RebootControllerVM1'],
                       ['RebootControllerVM2'],
                       ['RebootControllerVM3'],
                       ['PingAllTest'],
                       ['ResetControllerVM1'],
                       ['ResetControllerVM2'],
                       ['ResetControllerVM3'],
                       ['PingAllTest'],
                       ['PoweroffControllerVM1'],
                       ['PoweroffControllerVM2'],
                       ['PoweroffControllerVM3'],
                       ['PingAllTest'],
                       ['PoweronControllerVM1'],
                       ['PoweronControllerVM2'],
                       ['PoweronControllerVM3'],
                       ['PingAllTest'],
                       ['SuspendControllerVM1'],
                       ['SuspendControllerVM2'],
                       ['SuspendControllerVM3'],
                       ['PingAllTest'],
                       ['ResumeControllerVM1'],
                       ['ResumeControllerVM2'],
                       ['ResumeControllerVM3'],
                       ['PingAllTest'],
                       # Now delete all the controllers and see if ping still works
                       ["DeleteAllControllers"],
                       ['PingAllTest'],
                       ['DeployFirstController'],
        ],
         ExitSequence => [
                       ['DeleteEdges'],
                       ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3'],
                       ['Delete_All_VirtualWires'],
                       ['DeleteNetworkScopes'],
                       #['Uninstall_VDNCluster'],
                       #['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                      ],
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         'DeleteEdges' => DELETE_ALL_EDGES,
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
         "DeploySecondController" => DEPLOY_SECONDCONTROLLER,
         "DeployThirdController" => DEPLOY_THIRDCONTROLLER,
	 "DeleteAllControllers" => DELETE_ALL_CONTROLLERS,
         'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
         'deleteEdge' => DELETE_ALL_EDGES,
         'CreateVirtualWires' =>  CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'CreateVXLANLIF1' =>  CREATEVXLANLIF1,
         'CreateVXLANLIF2' =>  CREATEVXLANLIF2,
         'CreateVXLANLIF3' =>  CREATEVXLANLIF3,
         'CreateVXLANLIF4' =>  CREATEVXLANLIF4,
         'CreateVLANLIF1' =>  CREATEVLANLIF1,
         'CreateVLANLIF2' =>  CREATEVLANLIF2,
         'CreateVLANLIF3' =>  CREATEVLANLIF3,
         'InstallVibsConfigureVxlanClusterSFOVds1' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
             '[2]' => {
                cluster      => "vc.[1].datacenter.[1].cluster.[3]",
                vibs         => "install",
                switch       => "vc.[1].vds.[1]",
                vlan         => "18",
                mtu          => "1600",
                vmkniccount  => "1",
                teaming      => VDNetLib::TestData::TestConstants::ARRAY_VXLAN_CONFIG_TEAMING_POLICIES,
            },
          },
        },
         'InstallVibsConfigureVxlanClusterSJCVds1' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
             '[1]' => {
                cluster      => "vc.[1].datacenter.[1].cluster.[2]",
                vibs         => "install",
                switch       => "vc.[1].vds.[1]",
                vlan         => "18",
                mtu          => "1600",
                vmkniccount  => "1",
                teaming      => VDNetLib::TestData::TestConstants::ARRAY_VXLAN_CONFIG_TEAMING_POLICIES,
            },
          },
        },
         'RebootControllerVM1' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[1]",
            vmstate          => "reboot",
        },
         'RebootControllerVM2' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[2]",
            vmstate          => "reboot",
        },
         'RebootControllerVM3' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[3]",
            vmstate          => "reboot",
        },
         'ResetControllerVM1' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[1]",
            vmstate          => "reset",
        },
         'ResetControllerVM2' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[2]",
            vmstate          => "reset",
        },
         'ResetControllerVM3' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[3]",
            vmstate          => "reset",
        },
         'PoweroffControllerVM1' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[1]",
            vmstate          => "poweroff",
        },
         'PoweroffControllerVM2' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[2]",
            vmstate          => "poweroff",
        },
         'PoweroffControllerVM3' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[3]",
            vmstate          => "poweroff",
        },
         'PoweronControllerVM1' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[1]",
            vmstate          => "poweron",
        },
         'PoweronControllerVM2' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[2]",
            vmstate          => "poweron",
        },
         'PoweronControllerVM3' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[3]",
            vmstate          => "poweron",
        },
         'ResumeControllerVM1' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[1]",
            vmstate          => "resume",
        },
         'ResumeControllerVM2' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[2]",
            vmstate          => "resume",
        },
         'ResumeControllerVM3' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[3]",
            vmstate          => "resume",
        },
         'SuspendControllerVM1' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[1]",
            vmstate          => "suspend",
        },
         'SuspendControllerVM2' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[2]",
            vmstate          => "suspend",
        },
         'SuspendControllerVM3' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vxlancontroller.[3]",
            vmstate          => "suspend",
        },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[3]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[4]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.10",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'AddvNICsOnVM1' => {
            Type   => "VM",
            TestVM => "vm.[1]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },

         'AddvNICsOnVM2' => {
            Type   => "VM",
            TestVM => "vm.[2]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },

         'AddvNICsOnVM3' => {
            Type   => "VM",
            TestVM => "vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },

         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2DifferentvWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3DifferentvWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.5',
            netmask    => "255.255.0.0",
         },
         "PingAllTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1],vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         'MakeSurevNICConnectedVm1andVm2' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'MakeSurevNICConnectedVm1andVm2andVm3' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-3].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
          "Expand_TZ" => {
            Type  => "TransportZone",
            TestTransportZone   => "vsm.[1].networkscope.[1]",
            transportzoneaction => "expand",
            clusters            => "vc.[1].datacenter.[1].cluster.[3]",
         },
      },
    },

   'EdgeVMOperationsTestScenarios' => {
      Category         => 'NSX',
      Component        => 'network vDR',
      Product          => 'VSM',
      QCPath           => '',
      Procedure        => '',
      Status           => 'Execution Ready',
      TestName         => 'EdgeVMOperationsTestScenarios',
      Version          => '2' ,
      Tags             => 'vdr',
      AutomationLevel  => 'Automated',
      FullyAutomatable => 'Y',
      TestcaseLevel    => 'Functional',
      TestcaseType     => 'Functional',
      Priority         => 'P0',
      Developer        => 'adityaj',
      PartnerFacing    => 'N',
      Duration         => '',
      Summary          => "Check if the data traffic is working properly" .
                           "while doing VM operations on Edge VMs ",
      TestbedSpec      => $TDS::NSX::Networking::VirtualRouting::TestbedSpec::OneVC_OneDC_TwoVDS_FourClusters_FiveHost_SevenVMs,
      'WORKLOADS' =>  {
         Sequence => [
                       # First do the initial configuration for VDR
		       # and verify ping
                       # traffic works across all clusters
                       #     ['SetSegmentIDRange'],
                       #['SetMulticastRange'],
                       # ['DeployFirstController'],
                       #['InstallVibsConfigureVxlanClusterSJCVds1'],
                       #['InstallVibsConfigureVxlanClusterSFOVds1'],
                       ['CreateNetworkScope'],
                       ['CreateVirtualWires'],
                       ['DeployEdge'],
                       ['CreateVXLANLIF1'],
                       ['CreateVXLANLIF2'],
                       ['PoweronVM1','PoweronVM2'],
                       ['AddvNICsOnVM1'],
                       ['AddvNICsOnVM2'],
                       ['MakeSurevNICConnectedVm1andVm2'],
                       ['SetVXLANIPVM1','SetVXLANIPVM2DifferentvWire'],
                       ['AddVXLANRouteVM1','AddVXLANRouteVM2'],
                       ['Expand_TZ'],
                       ['CreateVXLANLIF3'],
                       ['PoweronVM3'],
                       ['AddvNICsOnVM3'],
                       ['MakeSurevNICConnectedVm1andVm2andVm3'],
                       ['SetVXLANIPVM3DifferentvWire'],
                       ['AddVXLANRouteVM3'],
                       ['PingAllTest'],
                       # Now do the Edge VM operations like reboot, reset,
                       # power off , power on, suspend, resume
                       ['RebootEdgeVM'],
                       ['PingAllTest'],
                       ['ResetEdgeVM'],
                       ['PingAllTest'],
                       ['PoweroffEdgeVM'],
                       ['PingAllTest'],
                       ['PoweronEdgeVM'],
                       ['PingAllTest'],
                       ['SuspendEdgeVM'],
                       ['PingAllTest'],
                       ['ResumeEdgeVM'],
                       ['PingAllTest'],
                       #Now delete all Edge VMs and redeploy to see
                       #if ping still works
                       ["DeleteEdge"],
                       ['DeployEdge'],
                       ['CreateVXLANLIF1'],
                       ['CreateVXLANLIF2'],
                       ['CreateVXLANLIF3'],
                       ['PingAllTest'],
        ],
         ExitSequence => [
                      ['DeleteEdge'],
                      ['RemovevNICFromVM1','RemovevNICFromVM2',
                       'RemovevNICFromVM3'],
                      ['Delete_All_VirtualWires'],
                      ['DeleteNetworkScopes'],
                      # ['Uninstall_VDNCluster'],
                      # ['RebootHost2','RebootHost3','RebootHost4','RebootHost5'],
                         ],
         "RebootHost" => {
            Type            => "Host",
            TestHost        => "host.[1]",
            reboot          => "yes",
         },
         'RemovevNICFromVM1' => {
            Type       => "VM",
            TestVM     => "vm.[1]",
            deletevnic => "vm.[1].vnic.[1]",
         },
         'RemovevNICFromVM2' => {
            Type       => "VM",
            TestVM     => "vm.[2]",
            deletevnic => "vm.[2].vnic.[1]",
         },
         'RemovevNICFromVM3' => {
            Type       => "VM",
            TestVM     => "vm.[3]",
            deletevnic => "vm.[3].vnic.[1]",
         },
         "RebootHost2" => {
            Type            => "Host",
            TestHost        => "host.[2]",
            reboot          => "yes",
         },
         "RebootHost3" => {
            Type            => "Host",
            TestHost        => "host.[3]",
            reboot          => "yes",
         },
         "RebootHost4" => {
            Type            => "Host",
            TestHost        => "host.[4]",
            reboot          => "yes",
         },
         "RebootHost5" => {
            Type            => "Host",
            TestHost        => "host.[5]",
            reboot          => "yes",
         },
         'Delete_All_VirtualWires' => DELETE_ALL_VIRTUALWIRES,
         'Uninstall_VDNCluster' => UNINSTALL_UNCONFIGURE_ALL_VDNCLUSTER,
         'DeleteNetworkScopes' => DELETE_ALL_NETWORKSCOPES,
         'SetSegmentIDRange' => SET_SEGMENTID_RANGE,
         'SetMulticastRange' => SET_MULTICAST_RANGE,
         "DeployFirstController" => DEPLOY_FIRSTCONTROLLER,
         "DeploySecondController" => DEPLOY_SECONDCONTROLLER,
         "DeployThirdController" => DEPLOY_THIRDCONTROLLER,
	 "DeleteAllControllers" => DELETE_ALL_CONTROLLERS,
         'CreateNetworkScope' => CREATE_NETWORKSCOPE_ClusterSJC,
         'DeleteEdge' => DELETE_ALL_EDGES,
         'CreateVirtualWires' =>  CREATE_VIRTUALWIRES_NETWORKSCOPE1,
         'CreateVXLANLIF1' =>  CREATEVXLANLIF1,
         'CreateVXLANLIF2' =>  CREATEVXLANLIF2,
         'CreateVXLANLIF3' =>  CREATEVXLANLIF3,
         'CreateVXLANLIF4' =>  CREATEVXLANLIF4,
         'CreateVLANLIF1' =>  CREATEVLANLIF1,
         'CreateVLANLIF2' =>  CREATEVLANLIF2,
         'CreateVLANLIF3' =>  CREATEVLANLIF3,
         'InstallVibsConfigureVxlanClusterSFOVds1' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
             '[2]' => {
                cluster      => "vc.[1].datacenter.[1].cluster.[3]",
                vibs         => "install",
                switch       => "vc.[1].vds.[1]",
                vlan         => "18",
                mtu          => "1600",
                vmkniccount  => "1",
                teaming      => VDNetLib::TestData::TestConstants::ARRAY_VXLAN_CONFIG_TEAMING_POLICIES,
            },
          },
        },
         'InstallVibsConfigureVxlanClusterSJCVds1' => {
            Type       => 'NSX',
            TestNSX    => "vsm.[1]",
            VDNCluster => {
             '[1]' => {
                cluster      => "vc.[1].datacenter.[1].cluster.[2]",
                vibs         => "install",
                switch       => "vc.[1].vds.[1]",
                vlan         => "18",
                mtu          => "1600",
                vmkniccount  => "1",
                teaming      => VDNetLib::TestData::TestConstants::ARRAY_VXLAN_CONFIG_TEAMING_POLICIES,
            },
          },
        },
         'RebootEdgeVM' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vse.[1]",
            vmstate          => "reboot",
        },
         'ResetEdgeVM' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vse.[1]",
            vmstate          => "reset",
        },
         'PoweroffEdgeVM' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vse.[1]",
            vmstate          => "poweroff",
        },
         'PoweronEdgeVM' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vse.[1]",
            vmstate          => "poweron",
        },
         'ResumeEdgeVM' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vse.[1]",
            vmstate          => "resume",
        },
         'SuspendEdgeVM' => {
            Type            => "VM",
            TestVM          => "vsm.[1].vse.[1]",
            vmstate          => "suspend",
        },
         "DeployEdge"   => {
            Type    => "NSX",
            TestNSX => "vsm.[1]",
            vse => {
               '[1]' => {
                  name          => "Edge-$$",
                  resourcepool  => "vc.[1].datacenter.[1].cluster.[3]",
                  datacenter    => "vc.[1].datacenter.[1]",
                  host          => "host.[4]", # To pick datastore
                  portgroup     => "vc.[1].dvportgroup.[1]",
                  primaryaddress => "10.10.10.10",
                  subnetmask     => "255.255.255.0",
               },
            },
         },
         'AddvNICsOnVM1' => {
            Type   => "VM",
            TestVM => "vm.[1]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[1]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },

         'AddvNICsOnVM2' => {
            Type   => "VM",
            TestVM => "vm.[2]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[2]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },

         'AddvNICsOnVM3' => {
            Type   => "VM",
            TestVM => "vm.[3]",
            vnic => {
               '[1]'   => {
                  driver            => "vmxnet3",
                  portgroup         => "vsm.[1].networkscope.[1].virtualwire.[3]",
                  connected         => 1,
                  startconnected    => 1,
                  allowguestcontrol => 1,
               },
            },
         },
         'PoweronVM1' => {
            Type    => "VM",
            TestVM  => "vm.[1]",
            vmstate => "poweron",
         },
         'PoweronVM2' => {
            Type    => "VM",
            TestVM  => "vm.[2]",
            vmstate => "poweron",
         },
         'PoweronVM3' => {
            Type    => "VM",
            TestVM  => "vm.[3]",
            vmstate => "poweron",
         },
         "SetVXLANIPVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            ipv4       => '172.31.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM2DifferentvWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            ipv4       => '172.32.1.5',
            netmask    => "255.255.0.0",
         },
         "SetVXLANIPVM3DifferentvWire" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            ipv4       => '172.33.1.5',
            netmask    => "255.255.0.0",
         },
         "PingAllTest" => {
            Type           => "Traffic",
            maxtimeout     => "128000",
            ToolName       => "Ping",
            TestAdapter    => "vm.[1].vnic.[1]",
            SupportAdapter => "vm.[2].vnic.[1],vm.[3].vnic.[1]",
            NoofOutbound   => 1,
            NoofInbound    => 1,
            TestDuration   => TRAFFIC_TESTDURATION,
         },
         "AddVXLANRouteVM1" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[1].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.31.1.1",
         },
         "AddVXLANRouteVM2" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[2].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.32.1.1",
         },
         "AddVXLANRouteVM3" => {
            Type       => "NetAdapter",
            Testadapter=> "vm.[3].vnic.[1]",
            netmask    => "255.0.0.0",
            route      => "add",
            network    => "172.0.0.0",
            gateway    => "172.33.1.1",
         },
         'MakeSurevNICConnectedVm1andVm2' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-2].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
         'MakeSurevNICConnectedVm1andVm2andVm3' => {
            Type           => "NetAdapter",
            reconfigure    => "true",
            testadapter    => "vm.[1-3].vnic.[1]",
            connected      => 1,
            startconnected => 1,
         },
          "Expand_TZ" => {
            Type  => "TransportZone",
            TestTransportZone   => "vsm.[1].networkscope.[1]",
            transportzoneaction => "expand",
            clusters            => "vc.[1].datacenter.[1].cluster.[3]",
         },
      },
    },
);
}

##########################################################################
# new --
#       This is the constructor for VDR TDS
#
# Input:
#       none
#
# Results:
#       An instance/object of VDR class
#
# Side effects:
#       None
#
########################################################################

sub new
{
   my ($proto) = @_;
      # Below way of getting class name is to allow new class as well as
      # $class->new.  In new class, proto itself is class, and $class->new,
      # ref($class) return the class
      my $class = ref($proto) || $proto;
      my $self = $class->SUPER::new(\%Functional);
      return (bless($self, $class));
}

1;
