WORKLOADS:
    PlaceVM1OnDVPG1: &PlaceVM1OnDVPG1
        Type: "VM"
        TestVM: "vm.[1]"
        vnic:
            '[1]':
                driver: "e1000"
                portgroup: "vc.[1].dvportgroup.[1]"
                connected: 1
                startconnected: 1
                allowguestcontrol: 1
    PlaceVM2OnDVPG2: &PlaceVM2OnDVPG2
        Type: "VM"
        TestVM: "vm.[2]"
        vnic:
            '[1]':
                driver: "e1000"
                portgroup: "vc.[1].dvportgroup.[4]"
                connected: 1
                startconnected: 1
                allowguestcontrol: 1
    PlaceVM3OnLS1: &PlaceVM3OnLS1
        Type: "VM"
        TestVM: "vm.[3]"
        vnic:
            '[1]':
                driver: "e1000"
                portgroup: "vsm.[1].networkscope.[1].virtualwire.[1]"
                connected: 1
                startconnected: 1
                allowguestcontrol: 1
    PlaceVM4OnLS2: &PlaceVM4OnLS2
        Type: "VM"
        TestVM: "vm.[4]"
        vnic:
            '[1]':
                driver: "e1000"
                portgroup: "vsm.[1].networkscope.[2].virtualwire.[2]"
                connected: 1
                startconnected: 1
                allowguestcontrol: 1
    SetDVPGIPVM1: &SetDVPGIPVM1
        Type: "NetAdapter"
        Testadapter: "vm.[1].vnic.[1]"
        ipv4: '172.16.0.2'
        netmask: "255.255.255.0"
    ChangeVM1MTU:
        Type: "NetAdapter"
        Testadapter: "vm.[1].vnic.[1]"
        ipv4: '172.16.0.2'
        netmask: "255.255.255.0"
        mtu: "1300"
    ResetVM1MTU:
        Type: "NetAdapter"
        Testadapter: "vm.[1].vnic.[1]"
        ipv4: '172.16.0.2'
        netmask: "255.255.255.0"
        mtu: "1500"
    SetDVPGIPv6VM1: &SetDVPGIPv6VM1
        Type: "NetAdapter"
        Testadapter: "vm.[1].vnic.[1]"
        ipv6: 'ADD'
        ipv6addr: '2001::2/64'
    SetDVPGIPVM2: &SetDVPGIPVM2
        Type: "NetAdapter"
        Testadapter: "vm.[2].vnic.[1]"
        ipv4: '9.9.9.2'
        netmask: "255.255.255.0"
    SetDVPGIPv6VM2: &SetDVPGIPv6VM2
        Type: "NetAdapter"
        Testadapter: "vm.[2].vnic.[1]"
        ipv6: 'ADD'
        ipv6addr: '2002::2/64'
    SetDVPGIPVM3: &SetDVPGIPVM3
        Type: "NetAdapter"
        Testadapter: "vm.[3].vnic.[1]"
        ipv4: '172.16.1.2'
        netmask: "255.255.255.0"
    SetDVPGIPVM4: &SetDVPGIPVM4
        Type: "NetAdapter"
        Testadapter: "vm.[4].vnic.[1]"
        ipv4: '9.9.10.2'
        netmask: "255.255.255.0"
    AddRouteVM12: &AddRouteVM12
        Type: "NetAdapter"
        Testadapter: "vm.[2].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "172.16.0.0"
        gateway: "172.16.0.1"
        expectedresult: "ignore"
    AddRouteVM1: &AddRouteVM1
        Type: "NetAdapter"
        Testadapter: "vm.[1].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "172.16.0.0"
        expectedresult: "ignore"
    AddRouteVM1_VM2: &AddRouteVM1_VM2
        Type: "NetAdapter"
        Testadapter: "vm.[1].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "9.9.9.0"
        gateway: "172.16.0.1"
        expectedresult: "ignore"
    AddRouteVM1_VM4: &AddRouteVM1_VM4
        Type: "NetAdapter"
        Testadapter: "vm.[1].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "9.9.10.0"
        gateway: "172.16.0.1"
        expectedresult: "ignore"
    AddRouteVM2: &AddRouteVM2
        Type: "NetAdapter"
        Testadapter: "vm.[2].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "10.10.10.0"
        expectedresult: "ignore"
    AddRouteVM2_VM1: &AddRouteVM2_VM1
        Type: "NetAdapter"
        Testadapter: "vm.[2].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "172.16.0.0"
        gateway: "9.9.9.1"
        expectedresult: "ignore"
    AddRouteVM2_VM3: &AddRouteVM2_VM3
        Type: "NetAdapter"
        Testadapter: "vm.[2].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "172.16.1.0"
        gateway: "9.9.9.1"
        expectedresult: "ignore"
    AddRouteVM3_VM2: &AddRouteVM3_VM2
        Type: "NetAdapter"
        Testadapter: "vm.[3].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "9.9.9.0"
        gateway: "172.16.1.1"
        expectedresult: "ignore"
    AddRouteVM3_VM4: &AddRouteVM3_VM4
        Type: "NetAdapter"
        Testadapter: "vm.[3].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "9.9.10.0"
        gateway: "172.16.1.1"
        expectedresult: "ignore"
    AddRouteVM4_VM1: &AddRouteVM4_VM1
        Type: "NetAdapter"
        Testadapter: "vm.[4].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "172.16.0.0"
        gateway: "9.9.10.1"
        expectedresult: "ignore"
    AddRouteVM4_VM3: &AddRouteVM4_VM3
        Type: "NetAdapter"
        Testadapter: "vm.[4].vnic.[1]"
        netmask: "255.255.255.0"
        route: "add"
        network: "172.16.1.0"
        gateway: "9.9.10.1"
        expectedresult: "ignore"

    DeployController: &DeployController
        Type: "NSX"
        TestNSX: "vsm.[1]"
        'vxlancontroller':
            '[1]':
                'name': 'AutoGenerate'
                'firstnodeofcluster': 'true'
                'ippool': "vsm.[1].ippool.[1]"
                'resourcepool': 'vc.[1].datacenter.[1].cluster.[1]'
                'host': 'host.[1]'
                'datastoretype': "shared"

    DeployGatewayServicesEdge1: &DeployGatewayServicesEdge1
        Type: "NSX"
        TestNSX: "vsm.[1]"
        gateway:
            '[1]':
                name: "InternalGateway"
                resourcepool: "vc.[1].datacenter.[1].cluster.[1]"
                datacenter: "vc.[1].datacenter.[1]"
                host: "host.[1]"
                portgroup: "vc.[1].dvportgroup.[3]"
                primaryaddress: "10.65.31.202"
                subnetmask: "255.255.255.0"
                datastoretype: "shared"
                username: "admin"
                password: "Node@1234567"
                remoteaccess: "true"

    CreateGateway1Interfaces: &CreateGateway1Interfaces
         - - 'CreateGateway1Interface1'
         - - 'CreateGateway1Interface2'
         - - 'CreateGateway1Interface3'
         - - 'CreateGateway1Interface4'

    CreateGateway1Interface1:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[1]"
        interface:
            '[1]':
                name: "internal1"
                index: "1"
                portgroup: "vc.[1].dvportgroup.[1]"
                ipv4address: "172.16.0.1"
                netmask: "255.255.255.0"
                type: "internal"

    CreateGateway1Interface2:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[1]"
        interface:
            '[2]':
                name: "uplink1"
                index: "2"
                portgroup: "vc.[1].dvportgroup.[2]"
                ipv4address: "10.10.10.1"
                netmask: "255.255.255.0"
                type: "uplink"

    CreateGateway1Interface3:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[1]"
        interface:
            '[3]':
                name: "internal2"
                index: "3"
                portgroup: "vsm.[1].networkscope.[1].virtualwire.[1]"
                ipv4address: "172.16.1.1"
                netmask: "255.255.255.0"
                type: "internal"

    CreateGateway1Interface4:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[1]"
        interface:
            '[4]':
                name: "uplink2"
                index: "4"
                portgroup: "vc.[1].dvportgroup.[7]"
                ipv4address: "10.10.11.1"
                netmask: "255.255.255.0"
                type: "uplink"

    DeployGatewayServicesEdge2: &DeployGatewayServicesEdge2
        Type: "NSX"
        TestNSX: "vsm.[1]"
        gateway:
            '[2]':
                     name: "ExternalGateway"
                     resourcepool: "vc.[1].datacenter.[2].cluster.[2]"
                     datacenter: "vc.[1].datacenter.[2]"
                     host: "host.[2]"
                     portgroup: "vc.[1].dvportgroup.[6]"
                     primaryaddress: "10.65.31.203"
                     subnetmask: "255.255.255.0"
                     datastoretype: "shared"
                     username: "admin"
                     password: "Node@1234567"
                     remote_access: "true"

    CreateGateway2Interfaces: &CreateGateway2Interfaces
         - - 'CreateGateway2Interface1'
         - - 'CreateGateway2Interface2'
         - - 'CreateGateway2Interface3'
         - - 'CreateGateway2Interface4'

    CreateGateway2Interface1:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[2]"
        interface:
            '[1]':
                name: "uplink1"
                index: "1"
                portgroup: "vc.[1].dvportgroup.[5]"
                ipv4address: "10.10.10.11"
                netmask: "255.255.255.0"
                type: "uplink"

    CreateGateway2Interface2:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[2]"
        interface:
            '[2]':
                name: "internal1"
                index: "2"
                portgroup: "vc.[1].dvportgroup.[4]"
                ipv4address: "9.9.9.1"
                netmask: "255.255.255.0"
                type: "internal"

    DeployGatewayServicesEdge3: &DeployGatewayServicesEdge3
        Type: "NSX"
        TestNSX: "vsm.[1]"
        gateway:
            '[3]':
                     name: "Int2Gateway"
                     resourcepool: "vc.[1].datacenter.[1].cluster.[1]"
                     datacenter: "vc.[1].datacenter.[1]"
                     host: "host.[1]"
                     portgroup: "vc.[1].dvportgroup.[6]"
                     primaryaddress: "10.65.31.205"
                     subnetmask: "255.255.255.0"
                     datastoretype: "shared"
                     username: "admin"
                     password: "Node@1234567"
                     remote_access: "true"

    CreateGateway3Interface1:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[3]"
        interface:
            '[1]':
                name: "uplink1"
                index: "1"
                portgroup: "vc.[1].dvportgroup.[5]"
                ipv4address: "10.10.12.1"
                netmask: "255.255.255.0"
                type: "uplink"

    CreateGateway3Interface2:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[2]"
        interface:
            '[3]':
                name: "internal1"
                index: "2"
                portgroup: "vc.[1].dvportgroup.[4]"
                address_groups:
                    primary_ip_address: "172.16.2.1"
                    secondary_ip_addresses:  "172.16.2.11"
                netmask: "255.255.255.0"
                type: "internal"

    CreateGateway2Interface3:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[2]"
        interface:
            '[3]':
                name: "internal2"
                index: "3"
                portgroup: "vsm.[1].networkscope.[2].virtualwire.[2]"
                ipv4address: "9.9.10.1"
                netmask: "255.255.255.0"
                type: "internal"

    CreateGateway2Interface4:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[2]"
        interface:
            '[4]':
                name: "uplink2"
                index: "4"
                portgroup: "vc.[1].dvportgroup.[8]"
                ipv4address: "10.10.11.11"
                netmask: "255.255.255.0"
                type: "internal"

    VifAttachment_VM1_VM2: &VIFATTACHMENT_VM1_VM2
         - - 'VIF_ATTACHMENT_VM1'
         - - 'VIF_ATTACHMENT_VM2'

    VifAttachment_VM3_VM4: &VIFATTACHMENT_VM3_VM4
         - - 'VIF_ATTACHMENT_VM3'
         - - 'VIF_ATTACHMENT_VM4'

    VIF_ATTACHMENT_VM1:
         Type: VM
         TestVM: 'vm.[1]'
         vnic:
            '[1]':
                driver: "e1000"
                portgroup: "vc.[1].dvportgroup.[1]"
                connected: 1
                startconnected: 1

    VIF_ATTACHMENT_VM2:
         Type: VM
         TestVM: 'vm.[2]'
         vnic:
            '[1]':
                driver: "e1000"
                portgroup: "vc.[1].dvportgroup.[4]"
                connected: 1
                startconnected: 1

    VIF_ATTACHMENT_VM3:
         Type: VM
         TestVM: 'vm.[3]'
         vnic:
            '[1]':
                driver: "e1000"
                portgroup: "vsm.[1].networkscope.[1].virtualwire.[1]"
                connected: 1
                startconnected: 1
                allowguestcontrol: 1

    VIF_ATTACHMENT_VM4:
         Type: VM
         TestVM: 'vm.[4]'
         vnic:
            '[1]':
                driver: "e1000"
                portgroup: "vsm.[1].networkscope.[2].virtualwire.[1]"
                connected: 1
                startconnected: 1
                allowguestcontrol: 1

    ConfigureIP_VM1_VM2: &CONFIGUREIP_VM1_VM2
         - - 'ConfigureVM1Vnic1IP_172_16_0_2'
         - - 'ConfigureVM2Vnic1IP_9_9_9_2'

    ConfigureIP_VM3_VM4: &CONFIGUREIP_VM3_VM4
         - - 'ConfigureVM3Vnic1IP_172_16_1_2'
         - - 'ConfigureVM4Vnic1IP_9_9_10_2'

    ConfigureVM1Vnic1IP_172_16_0_2: &CONFIGUREVM1VNIC1IP_172_16_0_2
         Type: NetAdapter
         TestAdapter: 'vm.[1].vnic.[1]'
         ipv4:       '172.16.0.2'
         netmask:    "255.255.255.0"

    ConfigureVM2Vnic1IP_9_9_9_2: &CONFIGUREVM1VNIC1IP_9_9_9_2
         Type: NetAdapter
         Testadapter: "vm.[2].vnic.[1]"
         ipv4: '9.9.9.2'
         netmask:    "255.255.255.0"

    ConfigureVM3Vnic1IP_172_16_1_2:
        Type: "NetAdapter"
        Testadapter: "vm.[3].vnic.[1]"
        ipv4: '172.16.1.2'
        netmask: "255.255.255.0"

    ConfigureVM4Vnic1IP_9_9_10_2:
        Type: "NetAdapter"
        Testadapter: "vm.[4].vnic.[1]"
        ipv4: '9.9.10.2'
        netmask: "255.255.255.0"

    AddRouteALLVMs: &ADD_ROUTE_ALL_VMS
         - - 'AddRouteVM1_VM2'
         - - 'AddRouteVM2_VM1'
         - - 'AddRouteVM3_VM4'
         - - 'AddRouteVM4_VM3'

    AddRoute_VM1_VM2: &AddRoute_VM1_VM2
         - - 'AddRouteVM1_VM2'
         - - 'AddRouteVM2_VM1'

    CreateIPset:
        Type: 'NSX'
        TestNSX: "vsm.[1]"
        ipset:
            '[1]':
               name: "IPSet5"
               value: 10.10.10.2-10.10.10.10
               description: "IP set with large number of IPs"
               inheritanceallowed: "true"

    SecurityGroupCreation:
        Type: "NSX"
        TestNSX: "vsm.[1]"
        securitygroup:
            '[1]':
                name: "SG-1"
                sg_description: "Service Group - 1"
                objecttypename: "SecurityGroup"
                type:
                    typename: "SecurityGroup"
                scope:
                    id: "globalroot-0"
                    objecttypename: "GlobalRoot"
                    name: "Global"
                member:
                    - datacenter_id: "vc.[1].datacenter.[1]"
                      objecttypename: "Datacenter"
                excludemember:
                    - cluster_id: "vc.[1].datacenter.[1].cluster.[1]"
                      objecttypename: "ClusterComputeResource"
                dynamicmemberdefinition:
                    dynamicset:
                        - operator: "OR"
                          dynamiccriteria:
                              - operator: "OR"
                                key: "VM.GUEST_HOST_NAME"
                                criteria: "contains"
                                value: "Ubuntu"
                                isvalid: "true"
                metadata:
                    expectedresultcode: "201"

    CreateVDS1:
        Type: "VC"
        TestVC: "vc.[1]"
        vds:
            '[1]':
                datacenter: "vc.[1].datacenter.[1]"
                vmnicadapter: "host.[-1].vmnic.[1]"
                version: "4.1.0"
                name: autogenerate
                host: "host.[-1]"

    CreateVDS1_2DVPG7_8:
        Type: "VC"
        TestVC: "vc.[1]"
        dvportgroup:
            '[7]':
                name: "dvpg-VDS1-vlan300"
                vds: "vc.[1].vds.[1]"
                vlan: "300"
                vlantype: "access"
            '[8]':
                name: "dvpg-VDS2-vlan300"
                vds: "vc.[1].vds.[2]"
                vlan: "300"
                vlantype: "access"

    NVPControllerComponents:
         Component: "Infrastructure"
         Category: "vdnet"
         TestName: "NVPControllerComponents"
         Version: "2"
         TestbedSpec:
             nvpcontroller':
                 '[1]':
                     transportzone:
                         '[1]':
                             name:"autogenerate"

    CreateGatewayInterface5IP6:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[1]"
        interface:
            '[5]':
                name: "vnic2-ip6"
                index: "1"
                portgroup: "vc.[1].dvportgroup.[2]"
                ipv4address: "20:20:20:20:20:20:20:2"
                subnet_prefix_length: "64"
                type: "internal"

    CreateVM1:
        Type: Root
        TestNode: root.[1]
        vm:
            '[1]':
                host: host.[1]
             #   template: 'tty_linux'
                template: 'RHEL63_srv_64'
                vmstate: poweroff

    CreateVM2:
        Type: Root
        TestNode: root.[1]
        vm:
            '[2]':
                host: host.[2]
             #   template: 'tty_linux'
                template: 'RHEL63_srv_64'
                vmstate: poweroff

    CreateVM3:
        Type: Root
        TestNode: root.[1]
        vm:
            '[3]':
                host: host.[1]
                template: 'RHEL63_srv_64'
                vmstate: poweroff

    CreateVM4:
        Type: Root
        TestNode: root.[1]
        vm:
            '[4]':
                host: host.[2]
                template: 'RHEL63_srv_64'
                vmstate: poweroff

    PoweronVMs: &PoweronVMs
        - - 'PoweronVM1'
        - - 'PoweronVM2'
        - - 'PoweronVM3'
        - - 'PoweronVM4'

    Poweron_VM1_VM2: &Poweron_VM1_VM2
        - - 'PoweronVM1'
        - - 'PoweronVM2'

    PoweronVM1:
        Type: VM
        TestVM: vm.[1]
        vmstate: poweron

    PoweronEdge2:
        Type: VM
        TestVM: vsm.[1].gateway.[2]
        vmstate: poweron

    PoweronVM2:
        Type: VM
        TestVM: vm.[2]
        vmstate: poweron

    PoweronVM3:
        Type: VM
        TestVM: vm.[3]
        vmstate: poweron

    PoweronVM4:
        Type: VM
        TestVM: vm.[4]
        vmstate: poweron

    PoweroffVM1:
        Type: VM
        TestVM: vm.[1]
        vmstate: poweroff

    PoweroffVM2:
        Type: VM
        TestVM: vm.[2]
        vmstate: poweroff

    PoweroffVM3:
        Type: VM
        TestVM: vm.[3]
        vmstate: poweroff

    PoweroffVM4:
        Type: VM
        TestVM: vm.[4]
        vmstate: poweroff

    EnableECMP: &EnableECMP
        - - 'EnableECMPIntGW'
        - - 'EnableECMPExtGW'

    EnableECMPIntGW:
        Type: "Router"
        TestRouter: "vsm.[1].gateway.[1]"
        globalrouteconfig:
            '[1]':
                 ecmp: "true"
                 routerid: "5.5.5.5"

    EnableECMPExtGW:
        Type: "Router"
        TestRouter: "vsm.[1].gateway.[2]"
        globalrouteconfig:
            '[1]':
                 ecmp: "true"
                 routerid: "6.6.6.6"

    AddStaticRoutes: &AddStaticRoutes
        - - 'AddStaticRouteIntGWtoExtGW'
        - - 'AddStaticRouteExtGWtoIntGW'

    AddStaticRouteIntGWtoExtGW:
        Type: "Router"
        TestRouter: "vsm.[1].gateway.[1]"
        staticrouting:
            '[1]':
                staticroutes:
                    - network: '9.9.9.0/24'
                      nexthop: '10.10.10.11,10.10.11.11'
                      mtu : '1600'
                    - network: '9.9.10.0/24'
                      nexthop: '10.10.11.11,10.10.10.11'
                      mtu : '1600'

    AddStaticRouteExtGWtoIntGW:
        Type: "Router"
        TestRouter: "vsm.[1].gateway.[2]"
        staticrouting:
            '[1]':
                staticroutes:
                    - network: '172.16.0.0/24'
                      nexthop: '10.10.10.1,10.10.11.1'
                      mtu : '1600'
                    - network: '172.16.1.0/24'
                      nexthop: '10.10.11.1,10.10.10.1'
                      mtu : '1600'

    CreateIPpool:
        Type: NSX
        TestNSX: "vsm.[1]"
        'ippool':
            '[2]':
                'name'        : 'ip-pool-3'
                'gateway'     : '10.65.31.253'
                'prefixlength': '20'
                'ipranges'    : ['10.65.31.154-10.65.31.155']

    CreateVDNCluster:
        Type: NSX
        TestNSX: "vsm.[1]"
        'VDNCluster':
            '[1]':
                'cluster': "vc.[1].datacenter.[2].cluster.[2]"
                'vibs': "install"
                'switch': "vc.[1].vds.[2]"
                'ippool': "vsm.[1].ippool.[2]"
                'vlan': "122"
                'mtu': "1600"
                'vmkniccount': "1"
                'teaming':
                     - "FAILOVER_ORDER"

    CreateTransportZone:
        Type: NSX
        TestNSX: "vsm.[1]"
        networkscope:
            '[2]':
                name: "network-scope-6-2"
                clusters: "vc.[1].datacenter.[2].cluster.[2]"
                controlplanemode: "HYBRID_MODE"

#     SET_SEGMENTID_RANGE:
#         Type: 'NSX'
#         TestNSX: "vsm.[1]"
#         segmentidrange:
#             '[1]':
#                 name: "AutoGenerate"
#                 begin: "6001-10001"
#                 end: "99000"

#     SET_MULTICAST_RANGE:
#         Type: 'NSX'
#         TestNSX: "vsm.[1]"
#         Multicastiprange:
#             '[1]':
#                 name: "AutoGenerate"
#                 begin: "239.0.0.101"
#                 end: "239.254.254.254"

    CreateVirtualWires: &CreateVirtualWires
        Type: "TransportZone"
        TestTransportZone: "vsm.[1].networkscope.[1]"
        VirtualWire:
           '[1]':
               name: "AutoGenerate"
               tenantid: "AutoGenerate"
    CreateVirtualWires_External: &CreateVirtualWires_External
        Type: "TransportZone"
        TestTransportZone: "vsm.[1].networkscope.[2]"
        VirtualWire:
           '[2]':
               name: "AutoGenerate"
               tenantid: "AutoGenerate"

    AllowFirewallExtGateway:
        Type: "Router"
        TestRouter: "vsm.[1].gateway.[2]"
        firewall:
            '[1]':
                enabled: "true"
                default_policy:
                    action: "accept"
                    logging_enabled: "true"
                global_config:
                    tcp_pick_ongoing_conn: "true"
                    tcp_allow_outofwindow_packets: "true"
                    tcp_send_resets_for_closed_servicerouter_ports: "true"
                    tcp_timeout_close: 30
                    tcp_timeout_established: 3600
                    tcp_timeout_open: 30
                    icmp_timeout: 10
                    icmp6_timeout: 10
                    drop_invalid_traffic: "true"
                    log_invalid_traffic: "true"
                    udp_timeout: 120
                    ip_generic_timeout: 120

    DELETE_STATICROUTE_ALL_EDGES: &DELETE_STATICROUTE_ALL_EDGES
        Type: "Router"
        TestRouter: "vsm.[1].gateway.[-1]"
        deletestaticrouting: "vsm.[1].gateway.[-1].staticrouting.[-1]"

    CreateSecurityGroupWithVM1:
        Type: 'NSX'
        TestNSX: "vsm.[1]"
        securitygroup:
            '[1]':
                'name': "Autogenerate-SG1VM1"
                'objecttypename': "SecurityGroup"
                'type':
                    'typename': "SecurityGroup"
                'scope':
                    'id': "globalroot-0"
                    'objecttypename': "GlobalRoot"
                    'name': "Global"
                'member':
                    - 'vm_id': "vm.[1]"
                      'objecttypename': "VirtualMachine"

    CreateSecurityGroupWithVM2:
        Type: 'NSX'
        TestNSX: "vsm.[1]"
        securitygroup:
            '[2]':
                'name': "Autogenerate-SG2VM2"
                'objecttypename': "SecurityGroup"
                'type':
                    'typename': "SecurityGroup"
                'scope':
                    'id': "globalroot-0"
                    'objecttypename': "GlobalRoot"
                    'name': "Global"
                'member':
                    - 'vm_id': "vm.[2]"
                      'objecttypename': "VirtualMachine"

    CreateSecurityGroupWithVM3:
        Type: 'NSX'
        TestNSX: "vsm.[1]"
        securitygroup:
            '[3]':
                'name': "Autogenerate-SG3VM3"
                'objecttypename': "SecurityGroup"
                'type':
                    'typename': "SecurityGroup"
                'scope':
                    'id': "globalroot-0"
                    'objecttypename': "GlobalRoot"
                    'name': "Global"
                'member':
                    - 'vm_id': "vm.[3]"
                      'objecttypename': "VirtualMachine"

    CreateSecurityGroupWithVM4:
        Type: 'NSX'
        TestNSX: "vsm.[1]"
        securitygroup:
            '[4]':
                'name': "Autogenerate-SG4VM4"
                'objecttypename': "SecurityGroup"
                'type':
                    'typename': "SecurityGroup"
                'scope':
                    'id': "globalroot-0"
                    'objecttypename': "GlobalRoot"
                    'name': "Global"
                'member':
                    - 'vm_id': "vm.[4]"
                      'objecttypename': "VirtualMachine"

    DeleteSecurityGroups: &DeleteSecurityGroups
        Type: "NSX"
        TestNSX: "vsm.[1]"
        deletesecuritygroup: "vsm.[1].securitygroup.[-1]"

    CreateService:
        Type: "NSX"
        TestNSX: "vsm.[1]"
        applicationservice:
            '[1]':
               name: "Service-A"
               element:
                   applicationprotocol: TCP
                   #sourceport: 8080
                   #value: '1024,1025-1029'
               inheritanceallowed: "true"
            '[2]':
               name: "Service-B"
               element:
                   applicationprotocol: ICMP
                   #sourceport: 33000
                   #value: '1024,1025-1029'
               inheritanceallowed: "true"
            '[3]':
               name: "Service-C"
               element:
                   applicationprotocol: UDP
                   #sourceport: 33000
                   #value: '1024,1025-1029'
               inheritanceallowed: "true"


    CreateServiceGroup:
        Type: "NSX"
        TestNSX: "vsm.[1]"
        applicationservicegroup:
            '[1]':
                name: "ServiceGroup-A"
                groupingobject_desc: "Service Group Description-A"
                scope:
                    name: Global
                    id: globalroot-0
                type:
                    typeName: ApplicationGroup
                inheritanceallowed: "true"
                metadata:
                    'expectedresultcode': "201"

    AddService1ToServiceGroup:
        Type: "GroupingObject"
        Testgroupingobject: "vsm.[1].applicationservicegroup.[1]"
        applicationservicegroupmember:
            '[1]':
                member: "vsm.[1].applicationservice.[1]"
    AddService2ToServiceGroup:
        Type: "GroupingObject"
        Testgroupingobject: "vsm.[1].applicationservicegroup.[1]"
        applicationservicegroupmember:
            '[1]':
                member: "vsm.[1].applicationservice.[2]"
    AddService3ToServiceGroup:
        Type: "GroupingObject"
        Testgroupingobject: "vsm.[1].applicationservicegroup.[1]"
        applicationservicegroupmember:
            '[1]':
                member: "vsm.[1].applicationservice.[3]"

    AllowFirewall_ForNAT: &AllowFirewall_ForNAT
        - - 'AllowFirewall_ForNAT_IntEdge'
        - - 'AllowFirewall_ForNAT_ExtEdge'

    AllowFirewall_ForNAT_IntEdge:
            Type: "Router"
            TestRouter: "vsm.[1].gateway.[1]"
            firewall:
                '[1]':
                    enabled: "true"
                    default_policy:
                       action: "deny"
                       logging_enabled: "true"
                    global_config:
                        tcp_pick_ongoing_conn: "true"
                        tcp_allow_outofwindow_packets: "true"
                        tcp_send_resets_for_closed_servicerouter_ports: "true"
                        tcp_timeout_close: 30
                        tcp_timeout_established: 3600
                        tcp_timeout_open: 30
                        icmp_timeout: 10
                        icmp6_timeout: 10
                        drop_invalid_traffic: "true"
                        log_invalid_traffic: "true"
                        udp_timeout: 120
                        ip_generic_timeout: 120
                    rules:
                        - name: "AllowRuleForNAT"
                          rule_type: "USER"
                          enabled: "true"
                          logging_enabled: "true"
                          action: "accept"
                         # application:
                         #     application_id:
                         #         - value: "vsm.[1].applicationservicegroup.[1]"
                         #           type: "ServiceGroup"

    AllowFirewall_ForNAT_ExtEdge:
            Type: "Router"
            TestRouter: "vsm.[1].gateway.[2]"
            firewall:
                '[1]':
                    enabled: "true"
                    default_policy:
                       action: "deny"
                       logging_enabled: "true"
                    global_config:
                        tcp_pick_ongoing_conn: "true"
                        tcp_allow_outofwindow_packets: "true"
                        tcp_send_resets_for_closed_servicerouter_ports: "true"
                        tcp_timeout_close: 30
                        tcp_timeout_established: 3600
                        tcp_timeout_open: 30
                        icmp_timeout: 10
                        icmp6_timeout: 10
                        drop_invalid_traffic: "true"
                        log_invalid_traffic: "true"
                        udp_timeout: 120
                        ip_generic_timeout: 120
                    rules:
                        - name: "AllowRuleForNAT"
                          rule_type: "USER"
                          enabled: "true"
                          logging_enabled: "true"
                          action: "accept"
                         # application:
                         #     application_id:
                         #         - value: "vsm.[1].applicationservicegroup.[1]"
                         #           type: "ServiceGroup"

    DeleteEdge:
        Type: "NSX"
        TestNSX: "vsm.[1]"
        deletegateway: "vsm.[1].gateway.[1]"

    DeleteServices:
            Type: "NSX"
            TestNSX: "vsm.[1]"
            deleteapplicationservice: vsm.[1].applicationservice.[-1]

    DeleteServiceGroup:
            Type: "NSX"
            TestNSX: "vsm.[1]"
            deleteapplicationservicegroup: vsm.[1].applicationservicegroup.[1]

    DefaultFirewallRuleOnEdges: &DefaultFirewallRuleOnEdges
        - - 'DefaultFirewallRuleOnEdge1'
        - - 'DefaultFirewallRuleOnEdge2'

    DefaultFirewallRuleOnEdge1:
        Type: "Router"
        TestRouter: "vsm.[1].gateway.[1]"
        firewall:
            '[1]':
                enabled: "true"
                default_policy:
                   action: "deny"
                   logging_enabled: "false"

    DefaultFirewallRuleOnEdge2:
        Type: "Router"
        TestRouter: "vsm.[1].gateway.[2]"
        firewall:
            '[1]':
                enabled: "true"
                default_policy:
                   action: "deny"
                   logging_enabled: "false"

    DeleteVnic1_VM1_VM2: &DELETEVNIC1_VM1_VM2
         - - 'DeleteVM1Vnic1'
         - - 'DeleteVM2Vnic1'

    DeleteVM1Vnic1:
         Type: VM
         TestVM: 'vm.[1]'
         deletevnic: 'vm.[1].vnic.[1]'

    DeleteVM2Vnic1:
         Type: VM
         TestVM: 'vm.[2]'
         deletevnic: 'vm.[2].vnic.[1]'

    DeleteVnic1_VM3_VM4: &DELETEVNIC1_VM3_VM4
         - - 'DeleteVM3Vnic1'
         - - 'DeleteVM4Vnic1'

    DeleteVM3Vnic1:
         Type: VM
         TestVM: 'vm.[3]'
         deletevnic: 'vm.[3].vnic.[1]'

    DeleteVM4Vnic1:
         Type: VM
         TestVM: 'vm.[4]'
         deletevnic: 'vm.[4].vnic.[1]'

    DeleteGateway1Interfaces: &DeleteGateway1Interfaces
         - - 'DeleteGateway1Interface1'
         - - 'DeleteGateway1Interface2'
         - - 'DeleteGateway1Interface3'
         - - 'DeleteGateway1Interface4'

    DeleteGateway1Interface1:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[1]"
        vnic_index: "1"
        deleteinterface: "vsm.[1].gateway.[1].interface.[1]"

    DeleteGateway1Interface2:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[1]"
        vnic_index: "2"
        deleteinterface: "vsm.[1].gateway.[1].interface.[2]"

    DeleteGateway1Interface3:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[1]"
        vnic_index: "1"
        deleteinterface: "vsm.[1].gateway.[1].interface.[3]"

    DeleteGateway1Interface4:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[1]"
        vnic_index: "2"
        deleteinterface: "vsm.[1].gateway.[1].interface.[4]"

    DeleteGateway2Interfaces: &DeleteGateway2Interfaces
         - - 'DeleteGateway2Interface1'
         - - 'DeleteGateway2Interface2'
         - - 'DeleteGateway2Interface3'
         - - 'DeleteGateway2Interface4'

    DeleteGateway2Interface1:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[2]"
        vnic_index: "1"
        deleteinterface: "vsm.[1].gateway.[2].interface.[1]"

    DeleteGateway2Interface2:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[2]"
        vnic_index: "2"
        deleteinterface: "vsm.[1].gateway.[2].interface.[2]"

    DeleteGateway2Interface3:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[2]"
        vnic_index: "1"
        deleteinterface: "vsm.[1].gateway.[2].interface.[3]"

    DeleteGateway2Interface4:
        Type: "VM"
        TestVM: "vsm.[1].gateway.[2]"
        vnic_index: "2"
        deleteinterface: "vsm.[1].gateway.[2].interface.[4]"
