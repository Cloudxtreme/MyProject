SpoofGaurdMACBindingPortLevel:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "SpoofGaurdMACBindingPortLevel"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create spoof guard profile.
        - Set LPORT for spoof guard profile.
        - Create Address Bindings ( specifying mac address) for logical port.
        - Run Traffic and make sure that desired traffic is allowed.
        - MAC address bindings are applicable to non ip traffic.
    Priority: P0
    version: "2"
    Summary: "enabling spoof guard profile with l2 whitelist at port level"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

SpoofGaurdVLANBinding:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "SpoofGaurdVLANBinding"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create spoof guard profile.
        - Set LPORT for spoof guard profile.
        - Create Address Bindings with a vlan id.
        - Run Traffic and make sure that desired traffic is allowed.
    Priority: P1
    version: "2"
    Summary: "enabling spoof guard profile with vlan white list"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:


DefaultSwitchSecurityProfile:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "DefaultSwitchSecurityProfile"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create Logical switch.
        - The system should have a default switch security profile.
        - The default switch security profile should have
          ip discovery and DHCP snooping  enabled.
    Priority: P0
    version: "2"
    Summary: "make sure that there is a default switch security profile"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

SpoofGaurdMACBindingSwitchLevel:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "SpoofGaurdMACBindingSwitchLevel"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create spoof guard profile.
        - Set LSWITCH for spoof guard profile white list providers
        - Create Address Bindings ( specifying mac address) for logical port.
        - Run Traffic and make sure that desired traffic is allowed.
        - MAC bindings should affect only non ip traffic.
    Priority: P0
    version: "2"
    Summary: "enabling spoof guard profile with l2 whitelist at switch level"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

SpoofGaurdIPBindingPortLevel:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "SpoofGaurdIPBindingPortLevel"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create spoof guard profile.
        - Set LPORT for spoof guard profile.
        - Create Address Bindings with ipv4 and ipv6 addresses.
        - Run Traffic and make sure that desired traffic is allowed.
        - Traffic run should include ipv4/ipv6.
    Priority: P0
    version: "2"
    Summary: "enabling spoof guard profile with l3 whitelist at port level"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

SpoofGaurdIPBindingSwitchLevel:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "SpoofGaurdIPBindingSwitchLevel"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create spoof guard profile.
        - Set LSWITCH for spoof guard profile.
        - Create Address Bindings with ipv4 and ipv6 addresses.
        - Run Traffic and make sure that desired traffic is allowed.
        - Traffic run should include ipv4/ipv6.
    Priority: P0
    version: "2"
    Summary: "enabling spoof guard profile with l3 whitelist at switch level"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

SpoofGaurdMACAndIPBindingPortLevel:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "SpoofGaurdMACAndIPBindingPortLevel"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create spoof guard profile.
        - Set LPORT for spoof guard profile.
        - Create Address Bindings with ipv4 and ipv6 addresses.
        - Add address bindings with mac addresses.
        - Run Traffic and make sure that desired traffic is allowed.
        - Traffic run should include ipv4/ipv6, ARP, ND, non ip.
    Priority: P0
    version: "2"
    Summary: "enabling spoof guard profile with l2 and l3 whitelist at port level"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

SpoofGaurdMACAndIPBindingSwitchLevel:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "SpoofGaurdMACAndIPBindingSwitchLevel"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create spoof guard profile.
        - Set LSWITCH for spoof guard profile.
        - Create Address Bindings with ipv4 and ipv6 addresses.
        - Add address bindings with mac addresses.
        - Run Traffic and make sure that desired traffic is allowed.
        - Traffic run should include ipv4/ipv6, ARP, ND, non ip.
    Priority: P1
    version: "2"
    Summary: "enabling spoof guard profile with l2 and l3 whitelist at switch level"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

SpoofGaurdWithPortLevelAndSwitchLevel:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "SpoofGaurdWithPortLevelAndSwitchLevel"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create spoof guard profile.
        - Set LPORT and LSWITCH as white list providers.
        - Create Address bindings for LPORT and LSWITCH.
        - Run traffic and make sure the allowed traffic is intersection
          of lport and lswitch.
        - Traffic run should include ipv4/ipv6, ARP, ND, non ip.
    Priority: P1
    version: "2"
    Summary: "enabling spoof guard profile at port and switch level"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

EnableDisableBPDUFilter:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "EnableDisableBPDUFilter"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create switch security profile.
        - Enable bpdu filter.
        - Ensure macs in the default blacklist are dropped.
        - enable bpdu filter and remove some of the macs from the default blacklist.
        - Ensure MACs removed from the blacklist are allowed.
    Priority: P1
    version: "2"
    Summary: "enable disable bpdu filter"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

EnableDisableDHCPServerBlock:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "EnableDisableDHCPServerBlock"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create switch security profile.
        - Enable dhcp server block.
        - The dhcp server offers would be blocked.
        - Disable dhcp server block.
        - The DHCP offers should not be blocked.
    Priority: P1
    version: "2"
    Summary: "enable disable dhcp server block"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:

EnableDisableDHCPClientBlock:
    Product: "NSXTransformers"
    Component: "SwitchSecurity"
    Category: "KVM"
    TestName: "EnableDisableDHCPClientBlock"
    Tags: "KVM"
    Keywords: "KVM"
    QCPath: KVM
    SubRelease: 'Bumblebee'
    TestcaseLevel: Functional
    TestcaseType: Functional
    Procedure:
        - Deploy and prep MP, CCP, TN, TZ.
        - Deploy VM guest.
        - Register CCP with MP.
        - Register TN with MP.
        - Set CCP on TN.
        - Create switch security profile.
        - Enable dhcp client block.
        - The dhcp client requests would be blocked.
        - VM's won't get the dhcp ip.
        - Disable dhcp client block.
        - The VM's should get the dhcp ip.
    Priority: P1
    version: "2"
    Summary: "enable disable dhcp client block"
    ExpectedResult: PASS
    Duration: 0
    AutomationLevel: Manual
    FullyAutomatable: Y
    Status: Execution Ready
    PartnerFacing: N
    Developer: hchilkot
    TestbedSpec:
    WORKLOADS:
        Sequence:
