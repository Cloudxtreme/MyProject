AutoGeneratedWorkloads: &AutoGeneratedWorkloads
    AddVM1Vnic1ToLS1:
        TestVM: vm.[1]
        Type: VM
        vnic:
            '[1]':
                connected: 1
                driver: e1000
                portgroup: nsxmanager.[1].logicalswitch.[1]
                startconnected: 1
    AddVM2Vnic1ToLS1:
        TestVM: vm.[2]
        Type: VM
        vnic:
            '[1]':
                connected: 1
                driver: e1000
                portgroup: nsxmanager.[1].logicalswitch.[1]
                startconnected: 1
    AssociateQosProfile-3_LP-1:
        TestPort: nsxmanager.[1].logicalport.[1]
        Type: Port
        reconfigure: 'true'
        switching_profile_ids:
        -   switching_profile_key: QosSwitchingProfile
            switching_profile_value: nsxmanager.[1].qos_profile.[3]->id
    AssociateQosProfile-4_LS-1:
        TestSwitch: nsxmanager.[1].logicalswitch.[1]
        Type: Switch
        reconfigure: 'true'
        switching_profile_ids:
        -   switching_profile_key: QosSwitchingProfile
            switching_profile_value: nsxmanager.[1].qos_profile.[4]->id
    ConfigureVM1Vnic1IP-192.168.1.10:
        TestAdapter: vm.[1].vnic.[1]
        Type: NetAdapter
        ipv4: 192.168.1.10
        netmask: 255.255.255.0
    ConfigureVM2Vnic1IP-192.168.1.11:
        TestAdapter: vm.[2].vnic.[1]
        Type: NetAdapter
        ipv4: 192.168.1.11
        netmask: 255.255.255.0
    CreateLS-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalswitch:
            '[1]':
                admin_state: UP
                name: lswitch1
                replication_mode: MTEP
                summary: lswitch1 (created through automation)
                transport_zone_id: nsxmanager.[1].transportzone.[1]
    CreateLS-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalswitch:
            '[2]':
                admin_state: UP
                name: lswitch2
                replication_mode: MTEP
                summary: lswitch2 (created through automation)
                transport_zone_id: nsxmanager.[1].transportzone.[1]
    CreateQosProfile-1_DISCOVER-true_NAME-nsx-default-qos-switching-profile:
        TestNSX: nsxmanager.[1]
        Type: NSX
        qos_profile:
            '[1]':
                discover: true
                name: nsx-default-qos-switching-profile
                resource_type: QosSwitchingProfile
    CreateQosProfile-2_NAME-QosProfile2_DESCRIPTION-Qos profile with system default values.:
        TestNSX: nsxmanager.[1]
        Type: NSX
        qos_profile:
            '[2]':
                description: Qos profile with system default values.
                name: QosProfile2
                resource_type: QosSwitchingProfile
    ? CreateQosProfile-3_NAME-QosProfile3_DESCRIPTION-Qos profile with custom values._DSCPPRIORITY-0_DSCPMODE-TRUSTED_COS-0_INGRESSENABLED-true_INGRESSAVERAGE-200000_INGRESSPEAK-400000_INGRESSBURST-2147483647
    :   TestNSX: nsxmanager.[1]
        Type: NSX
        qos_profile:
            '[3]':
                class_of_service: 0
                description: Qos profile with custom values.
                dscp:
                    mode: TRUSTED
                    priority: 0
                name: QosProfile3
                resource_type: QosSwitchingProfile
    ? CreateQosProfile-4_NAME-QosProfile4_DESCRIPTION-Qos profile with custom values._DSCPPRIORITY-0_DSCPMODE-TRUSTED_COS-0_INGRESSENABLED-true_INGRESSAVERAGE-200000_INGRESSPEAK-400000_INGRESSBURST-2147483647
    :   TestNSX: nsxmanager.[1]
        Type: NSX
        qos_profile:
            '[4]':
                class_of_service: 0
                description: Qos profile with custom values.
                dscp:
                    mode: TRUSTED
                    priority: 0
                name: QosProfile4
                resource_type: QosSwitchingProfile
    CreateTN-1_HOSTNODE-1_TZ-1_DEVICE-vmnic1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportnode:
            '[1]':
                host_switches:
                -   host_switch_profile_ids:
                    -   key: UplinkHostSwitchProfile
                        value: nsxmanager.[1].uplinkprofile.[1]->id
                    switch_name: nsxvswitch
                    uplinks: null
                node_id: nsxmanager.[1].hostnode.[x=transportnode_index]->id
                transport_zone_endpoint:
                -   transport_zone_id: nsxmanager.[1].transportzone.[1]
    CreateTN-2_HOSTNODE-2_TZ-1_DEVICE-vmnic1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportnode:
            '[2]':
                host_switches:
                -   host_switch_profile_ids:
                    -   key: UplinkHostSwitchProfile
                        value: nsxmanager.[1].uplinkprofile.[1]->id
                    switch_name: nsxvswitch
                    uplinks: null
                node_id: nsxmanager.[1].hostnode.[x=transportnode_index]->id
                transport_zone_endpoint:
                -   transport_zone_id: nsxmanager.[1].transportzone.[1]
    CreateTZ-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportzone:
            '[1]':
                name: transportzone1
                summary: transportzone1 (created through automation)
                switch_name: nsxvswitch
                transport_zone_type: OVERLAY
    CreateUPROF-1_MTU-1600:
        TestNSX: nsxmanager.[1]
        Type: NSX
        uplinkprofile:
            '[1]':
                mtu: 1600
                resource_type: UplinkHostSwitchProfile
                teaming:
                    active:
                    -   adapter_name: uplink1
                        adapter_type: PNIC
                    policy: FAILOVER_ORDER
                vlan: 0
    DeleteLS-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalswitch: nsxmanager.[1].logicalswitch.[1]
    DeleteLS-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalswitch: nsxmanager.[1].logicalswitch.[2]
    DeleteQosProfile-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deleteqos_profile: nsxmanager.[1].qos_profile.[2]
    DeleteQosProfile-3_FORCE-true:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deleteqos_profile: nsxmanager.[1].qos_profile.[3]
        query_params:
            unbind: true
    DeleteQosProfile-4_FORCE-true:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deleteqos_profile: nsxmanager.[1].qos_profile.[4]
        query_params:
            unbind: true
    DeleteTN-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportnode: nsxmanager.[1].transportnode.[1]
    DeleteTN-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportnode: nsxmanager.[1].transportnode.[2]
    DeleteTZ-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportzone: nsxmanager.[1].transportzone.[1]
    DeleteUPROF-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deleteuplinkprofile: nsxmanager.[1].uplinkprofile.[1]
    DeleteVnic-1_VM-1:
        TestVM: vm.[1]
        Type: VM
        deletevnic: vm.[x=vm_index].vnic.[1]
    DeleteVnic-1_VM-2:
        TestVM: vm.[2]
        Type: VM
        deletevnic: vm.[x=vm_index].vnic.[1]
    DiscoverHostNode1FromESX1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        hostnode:
            '[1]':
                discover: 'true'
                ip_addresses: esx.[1]
    DiscoverHostNode2FromESX2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        hostnode:
            '[2]':
                discover: 'true'
                ip_addresses: esx.[2]
    DiscoverLport1FromVM1Vnic1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[1]':
                attachment:
                    attachment_type: VIF
                    id_: vm.[1].vnic.[1]->uuid
                discover: 'true'
    DiscoverLport2FromVM2Vnic1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[2]':
                attachment:
                    attachment_type: VIF
                    id_: vm.[2].vnic.[1]->uuid
                discover: 'true'
    PingFromVM1Vnic1ToVM2Vnic1:
        SupportAdapter: vm.[2].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0
    RemoveManagerOnESX-1:
        TestHost: esx.[1]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    RemoveManagerOnESX-2:
        TestHost: esx.[2]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    SetManagerOnESX-1:
        TestHost: esx.[1]
        Type: Host
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    SetManagerOnESX-2:
        TestHost: esx.[2]
        Type: Host
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    UndiscoverHostNode-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletehostnode: nsxmanager.[1].hostnode.[1]
        skipmethod: 1
    UndiscoverHostNode-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletehostnode: nsxmanager.[1].hostnode.[2]
        skipmethod: 1
    UndiscoverLSP-1-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[1-2]
        skipmethod: 1
    VerifyAssociationQosProfile-1_LP-1:
        TestPort: nsxmanager.[1].logicalport.[1]
        Type: Port
        read:
            switching_profile_ids[?]contain_once:
            -   switching_profile_key: QosSwitchingProfile
                switching_profile_value: nsxmanager.[1].qos_profile.[1]->id
    VerifyAssociationQosProfile-1_LP-2:
        TestPort: nsxmanager.[1].logicalport.[2]
        Type: Port
        read:
            switching_profile_ids[?]contain_once:
            -   switching_profile_key: QosSwitchingProfile
                switching_profile_value: nsxmanager.[1].qos_profile.[1]->id
    VerifyAssociationQosProfile-1_LS-1:
        TestSwitch: nsxmanager.[1].logicalswitch.[1]
        Type: Switch
        read:
            switching_profile_ids[?]contain_once:
            -   switching_profile_key: QosSwitchingProfile
                switching_profile_value: nsxmanager.[1].qos_profile.[1]->id
    VerifyAssociationQosProfile-3_LP-1:
        TestPort: nsxmanager.[1].logicalport.[1]
        Type: Port
        read:
            switching_profile_ids[?]contain_once:
            -   switching_profile_key: QosSwitchingProfile
                switching_profile_value: nsxmanager.[1].qos_profile.[3]->id
    VerifyAssociationQosProfile-4_LP-1:
        TestPort: nsxmanager.[1].logicalport.[1]
        Type: Port
        read:
            switching_profile_ids[?]contain_once:
            -   switching_profile_key: QosSwitchingProfile
                switching_profile_value: nsxmanager.[1].qos_profile.[4]->id
    VerifyAssociationQosProfile-4_LP-2:
        TestPort: nsxmanager.[1].logicalport.[2]
        Type: Port
        read:
            switching_profile_ids[?]contain_once:
            -   switching_profile_key: QosSwitchingProfile
                switching_profile_value: nsxmanager.[1].qos_profile.[4]->id
    VerifyAssociationQosProfile-4_LS-1:
        TestSwitch: nsxmanager.[1].logicalswitch.[1]
        Type: Switch
        read:
            switching_profile_ids[?]contain_once:
            -   switching_profile_key: QosSwitchingProfile
                switching_profile_value: nsxmanager.[1].qos_profile.[4]->id
    VerifyHostPortConfigQosProfile-1_ESX-1_LP-1_DSCPPRIORITY-ff_DSCPPRIORITY-trusted_COS-0:
        TestNSX: esx.[1]
        Type: Host
        execution_type: cli
        get_port_qos_info[?]contain_once:
            table:
            -   class_of_service[?]equal_to: 0
                dscp[?]equal_to: trusted
                port: nsxmanager.[1].logicalport.[1]->id
    VerifyHostPortConfigQosProfile-1_ESX-2_LP-2_DSCPPRIORITY-ff_DSCPPRIORITY-trusted_COS-0:
        TestNSX: esx.[2]
        Type: Host
        execution_type: cli
        get_port_qos_info[?]contain_once:
            table:
            -   class_of_service[?]equal_to: 0
                dscp[?]equal_to: trusted
                port: nsxmanager.[1].logicalport.[2]->id
    ? VerifyHostPortConfigQosProfile-3_ESX-1_LP-1_DSCPPRIORITY-0_DSCPMODE-TRUSTED_COS-0_INGRESSAVERAGE-25000000_INGRESSPEAK-50000000_INGRESSBURST-2147483647
    :   TestNSX: esx.[1]
        Type: Host
        execution_type: cli
        get_port_qos_info[?]contain_once:
            table:
            -   class_of_service[?]equal_to: 0
                dscp[?]equal_to: 0
                mode: TRUSTED
                port: nsxmanager.[1].logicalport.[1]->id
    ? VerifyHostPortConfigQosProfile-4_ESX-2_LP-2_DSCPPRIORITY-0_DSCPMODE-TRUSTED_COS-0_INGRESSENABLED-true_INGRESSAVERAGE-25000000_INGRESSPEAK-50000000_INGRESSBURST-2147483647
    :   TestNSX: esx.[2]
        Type: Host
        execution_type: cli
        get_port_qos_info[?]contain_once:
            table:
            -   class_of_service[?]equal_to: 0
                dscp[?]equal_to: 0
                mode: TRUSTED
                port: nsxmanager.[1].logicalport.[2]->id
    ? VerifyManagerQosProfile-2_NAME-QosProfile2_DESCRIPTION-Qos profile with system
        default values._DSCPPRIORITY-0_DSCPMODE-TRUSTED
    :   TestNSX: nsxmanager.[1].qos_profile.[2]
        Type: NSX
        read:
            description[?]equal_to: Qos profile with system default values.
            dscp[?]contains:
                mode: TRUSTED
                priority: 0
            name[?]equal_to: QosProfile2
            resource_type[?]equal_to: QosSwitchingProfile
    ? VerifyManagerQosProfile-3_NAME-QosProfile3_DESCRIPTION-Qos profile with custom
        values._DSCPPRIORITY-0_DSCPMODE-TRUSTED_COS-0_INGRESSENABLED-true_INGRESSAVERAGE-200000_INGRESSPEAK-400000_INGRESSBURST-2147483647
    :   TestNSX: nsxmanager.[1].qos_profile.[3]
        Type: NSX
        read:
            class_of_service[?]equal_to: 0
            description[?]equal_to: Qos profile with custom values.
            dscp[?]contains:
                mode: TRUSTED
                priority: 0
            name[?]equal_to: QosProfile3
            resource_type[?]equal_to: QosSwitchingProfile
    ? VerifyManagerQosProfile-4_NAME-QosProfile4_DESCRIPTION-Qos profile with custom
        values._DSCPPRIORITY-0_DSCPMODE-TRUSTED_COS-0_INGRESSENABLED-true_INGRESSAVERAGE-200000_INGRESSPEAK-400000_INGRESSBURST-2147483647
    :   TestNSX: nsxmanager.[1].qos_profile.[4]
        Type: NSX
        read:
            class_of_service[?]equal_to: 0
            description[?]equal_to: Qos profile with custom values.
            dscp[?]contains:
                mode: TRUSTED
                priority: 0
            name[?]equal_to: QosProfile4
            resource_type[?]equal_to: QosSwitchingProfile
