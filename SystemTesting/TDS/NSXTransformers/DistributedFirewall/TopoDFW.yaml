!include ../Common/Topo_Clusters.yaml
!include AutoGeneratedWorkloads.yaml

CommonTopoWorkloads: &CommonTopoWorkloads
    CreateDFWSectionBlockTraffic--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            dfwsection:
                '[1]':
                    sectionname: autogenerate
                    stateful: 'true'
                    layer: 'LAYER3'
                    operation: 'insert_top'
                    dfw_rules:
                      - name: trafficblock
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vnic.[1]->adapter_ip'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vnic.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
    CreateDFWSectionBlockTraffic--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            dfwsection:
                '[1]':
                    sectionname: autogenerate
                    stateful: 'true'
                    layer: 'LAYER3'
                    operation: 'insert_top'
                    dfw_rules:
                      - name: trafficblock
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vif.[1]->adapter_ip'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vif.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
    CreateL2DFWSection2AllowTraffic:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            dfwsection:
                '[2]':
                    sectionname: autogenerate
                    stateful: 'true'
                    layer: 'LAYER2'
                    operation: 'insert_top'
                    dfw_rules:
                      - name: autogenerate
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    CreateL3DFWSection2AllowTraffic:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            dfwsection:
                '[2]':
                    sectionname: autogenerate
                    stateful: 'true'
                    layer: 'LAYER3'
                    operation: 'insert_top'
                    dfw_rules:
                      - name: autogenerate
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    CreateL2DFWSection_Empty_Position_Bottom:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            dfwsection:
                '[1]':
                    sectionname: autogenerate
                    stateful: 'false'
                    layer: 'LAYER2'

    CreateStateful_L3DFWSection_Empty_Position_Bottom:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            dfwsection:
                '[1]':
                    sectionname: autogenerate
                    layer: 'LAYER3'
                    stateful: 'true'

    CreateDFWRuleBlockL2Traffic_VM1_Mac_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vnic.[1]->adapter_mac'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
    CreateDFWRuleBlockL2Traffic_VM1_Mac_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vif.[1]->adapter_mac'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'

    CreateDFWRuleBlockL3Traffic_VM1_IP_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vnic.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
    CreateDFWRuleBlockL3Traffic_VM1_IP_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vif.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
    CreateDFWRuleBlockL2TrafficMacList_VM1_VM3_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vif.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[3].vif.[1]->adapter_mac'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'

    CreateDFWRuleBlockL2TrafficMacList_VM1_VM3_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vnic.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[3].vnic.[1]->adapter_mac'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL3TrafficIPList_VM1_VM3_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vif.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[3].vif.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    CreateDFWRuleBlockL3TrafficIPList_VM1_VM3_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vnic.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[3].vnic.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    CreateDFWRuleBlockL2TrafficMacSet_VM1_VM3:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MACSet'
                            node_id: 'nsxmanager.[1].macset.[1]->id'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL3TrafficIPSet_VM1_VM3:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPSet'
                            node_id: 'nsxmanager.[1].ipset.[1]->id'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL2Traffic_Negate_VM1_VM2_Mac_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vnic.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[2].vnic.[1]->adapter_mac'
                        sourcenegate: 'true'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL2Traffic_Negate_VM1_VM2_Mac_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vif.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[2].vif.[1]->adapter_mac'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL3Traffic_Negate_VM1_VM2_IP_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vnic.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vnic.[1]->adapter_ip'
                        sourcenegate: 'true'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL3Traffic_Negate_VM1_VM2_IP_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL2TrafficWildcardedMac--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'ANY'
                        destination_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[2].vnic.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[4].vnic.[1]->adapter_mac'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL2TrafficWildcardedMac--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'ANY'
                        destination_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[2].vif.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[4].vif.[1]->adapter_mac'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL3TrafficWildcardedIP--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'ANY'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vnic.[1]->adapter_ip'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[4].vnic.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockL3TrafficWildcardedIP--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'ANY'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vif.[1]->adapter_ip'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[4].vif.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleAllowTraffic--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vif.[1]->adapter_ip'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vif.[1]->adapter_ip'
    CreateDFWRuleAllowTraffic--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vnic.[1]->adapter_ip'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vnic.[1]->adapter_ip'
    CreateDFWRuleAllowL2TrafficMacSet_VM1_VM3:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MACSet'
                            node_id: 'nsxmanager.[1].macset.[1]->id'
    CreateDFWRuleAllowL2Traffic_VM1_Mac_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vnic.[1]->adapter_mac'
    CreateDFWRuleAllowL2Traffic_VM1_Mac_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vif.[1]->adapter_mac'
    CreateDFWRuleAllowL3Traffic_VM1_IP_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vnic.[1]->adapter_ip'
    CreateDFWRuleAllowL3Traffic_VM1_IP_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vif.[1]->adapter_ip'
    CreateDFWRuleAllowL2TrafficMacList_VM1_VM3_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vif.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[3].vif.[1]->adapter_mac'
    CreateDFWRuleAllowL2TrafficMacList_VM1_VM3_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vnic.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[3].vnic.[1]->adapter_mac'
    CreateDFWRuleAllowL3TrafficIPList_VM1_VM3_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vif.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[3].vif.[1]->adapter_ip'
    CreateDFWRuleAllowL3TrafficIPList_VM1_VM3_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vnic.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[3].vnic.[1]->adapter_ip'
    CreateDFWRuleAllowL2Traffic_Negate_VM1_VM2_Mac_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vnic.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[2].vnic.[1]->adapter_mac'
                        sourcenegate: 'true'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    CreateDFWRuleAllowL2Traffic_Negate_VM1_VM2_Mac_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vif.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[2].vif.[1]->adapter_mac'
    CreateDFWRuleAllowL3Traffic_Negate_VM1_VM2_IP_Insert_Top--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vnic.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vnic.[1]->adapter_ip'
                        sourcenegate: 'true'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    CreateDFWRuleAllowL3Traffic_Negate_VM1_VM2_IP_Insert_Top--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vif.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vif.[1]->adapter_ip'
    CreateDFWRuleBlockIPV4TrafficEtherType--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vnic.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[3].vnic.[1]->adapter_mac'
                        service_affected:
                           - logical_entity: 'NSService'
                             node_id: 'nsxmanager.[1].nsservice.[1]->id'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockIPV4TrafficEtherType--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vif.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[3].vif.[1]->adapter_mac'
                        service_affected:
                           - logical_entity: 'NSService'
                             node_id: 'nsxmanager.[1].nsservice.[1]->id'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleBlockIPV4TrafficEtherType--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vnic.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[3].vnic.[1]->adapter_mac'
                        service_affected:
                           - logical_entity: 'NSService'
                             node_id: 'nsxmanager.[1].nsservice.[1]->id'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleAllowIPV4TrafficEtherType--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vif.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[3].vif.[1]->adapter_mac'
    CreateDFWRuleAllowIPV4TrafficEtherType--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[1].vnic.[1]->adapter_mac'
                          - logical_entity: 'MacAddress'
                            node_id: 'vm.[3].vnic.[1]->adapter_mac'
    CreateDFWRuleBlockIPV4TrafficLS1--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'DROP'
                        direction: 'OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vnic.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[3].vnic.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
    CreateDFWRuleBlockIPV4TrafficLS1--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'DROP'
                        direction: 'OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[1].vif.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[3].vif.[1]->adapter_ip'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
    CreateDFWRuleAllowIPV4TrafficLS1:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
    CreateDFWRuleBlockIPV4TrafficLS1_Port1:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[3]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'DROP'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[1]->id'
    CreateDFWRuleBlockTraffic:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateDFWRuleAllowL2TrafficWildcardedMac:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'MacAddress'
                            node_id: 'ANY'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    CreateDFWRuleAllowL3TrafficWildcardedIP:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[2]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'ANY'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    DiscoverDFWRule1:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        discover: 'true'
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
    DiscoverDefaultL3DFWSection:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            dfwsection:
                '[1]':
                        name: 'Default Layer3 Section'
                        discover: 'true'
    DiscoverDefaultL2DFWSection:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            dfwsection:
                '[1]':
                        name: 'Default Layer2 Section'
                        discover: 'true'
    CreateMacSet_VM1_VM3--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            macset:
                '[1]':
                        name: autogenerate
                        macaddresses:
                            - vm.[1].vnic.[1]->adapter_mac
                            - vm.[3].vnic.[1]->adapter_mac
    CreateMacSet_VM1_VM3--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            macset:
                '[1]':
                        name: autogenerate
                        macaddresses:
                            - vm.[1].vif.[1]->adapter_mac
                            - vm.[3].vif.[1]->adapter_mac
    CreateIPSet_192.168.0.0_Subnet_VM1_VM3_IP--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ipset:
                '[1]':
                        name: autogenerate
                        ipaddresses:
                            - vm.[1].vnic.[1]->adapter_ip
                            - vm.[3].vnic.[1]->adapter_ip
                            - '192.168.0.0/16'
    CreateIPSet_192.168.0.0_Subnet_VM1_VM3_IP--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ipset:
                '[1]':
                        name: autogenerate
                        ipaddresses:
                            - vm.[1].vif.[1]->adapter_ip
                            - vm.[3].vif.[1]->adapter_ip
                            - '192.168.0.0/16'
    UpdateDFWRule1AllowTraffic:
            Type: "Service"
            TestService: "nsxmanager.[1].firewallrule.[1]"
            reconfigure: true
            name: singlerule
            section_id: "nsxmanager.[1].dfwsection.[1]->id"
            action: 'ALLOW'
            direction: 'IN_OUT'
            applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    UpdateDFWRule1BlockTraffic:
            Type: "Service"
            TestService: "nsxmanager.[1].firewallrule.[1]"
            reconfigure: true
            name: singlerule
            section_id: "nsxmanager.[1].dfwsection.[1]->id"
            action: 'REJECT'
            direction: 'IN_OUT'
            applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    ReviseDFWRule1:
            Type: "Service"
            TestService: "nsxmanager.[1].firewallrule.[1]"
            revise_rules:
             schema:
               section_id: "nsxmanager.[1].dfwsection.[1]->id"
               operation: 'insert_top'
    UpdateDFWSection1:
            Type: "Service"
            TestService: "nsxmanager.[1].dfwsection.[1]"
            reconfigure: true
            name: modifiedsection
    UpdateIPSetVM1_VM3_IP:
            Type: "GroupingObject"
            TestGroupingObject: "nsxmanager.[1].ipset.[1]"
            reconfigure: true
            name: autogenerate
            ipaddresses:
                  - vm.[1].vnic.[1]->adapter_ip
                  - vm.[3].vnic.[1]->adapter_ip
    UpdateIPSet_10.0.0.0_Subnet:
            Type: "GroupingObject"
            TestGroupingObject: "nsxmanager.[1].ipset.[1]"
            reconfigure: true
            name: autogenerate
            ipaddresses:
                  - '10.0.0.0/8'
    ReviseDFWSection1:
            Type: "Service"
            TestService: "nsxmanager.[1].dfwsection.[1]"
            revise_section:
                schema:
                  operation: 'insert_top'
    ReviseDFWSection2AfterSection1:
            Type: "Service"
            TestService: "nsxmanager.[1].dfwsection.[2]"
            revise_section:
                schema:
                  operation: 'insert_after'
                  section_id: "nsxmanager.[1].dfwsection.[1]->id"
    CreateEtherTypeNSServiceIPV4:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            nsservice:
                '[1]':
                     members:
                        name: autogenerate
                        ether_type: '0x0800'
                        resource_type: 'EtherTypeNSService'
    CreateExcludeListLport2-4:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            excludelist:
                '[1]':
                     members:
                        - logical_entity: 'LogicalPort'
                          node_id: 'nsxmanager.[1].logicalport.[2]->id'
                        - logical_entity: 'LogicalPort'
                          node_id: 'nsxmanager.[1].logicalport.[4]->id'
    CreateExcludeListLS1:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            excludelist:
                '[1]':
                     members:
                        - logical_entity: 'LogicalSwicth'
                          node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
    CreateNSGroupLP2LS2:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            nsgroup:
                '[1]':
                     members:
                        - name: autogenerate
                          target_property: 'id'
                          operation: 'EQUALS'
                          logical_entity: 'LogicalPort'
                          target_value: 'nsxmanager.[1].logicalport.[2]->id'
                        - name: autogenerate
                          target_property: 'id'
                          operation: 'EQUALS'
                          logical_entity: 'LogicalSwitch'
                          target_value: 'nsxmanager.[1].logicalswitch.[2]->id'

    CreateDFWRuleBlockIPV4TrafficNSGroupLP2LS2--ESX:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'DROP'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        applied_tos:
                           - logical_entity: 'NSGroup'
                             node_id: 'nsxmanager.[1].nsgroup.[1]->id'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vnic.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[3].vnic.[1]->adapter_ip'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[4].vnic.[1]->adapter_ip'

    CreateDFWRuleBlockIPV4TrafficNSGroupLP2LS2--KVM:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            firewallrule:
                '[1]':
                        name: autogenerate
                        section_id: "nsxmanager.[1].dfwsection.[1]->id"
                        action: 'DROP'
                        direction: 'IN_OUT'
                        operation: 'insert_top'
                        applied_tos:
                           - logical_entity: 'NSGroup'
                             node_id: 'nsxmanager.[1].nsgroup.[1]->id'
                        source_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vif.[1]->adapter_ip'
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[3].vif.[1]->adapter_ip'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[4].vif.[1]->adapter_ip'

    UpdateDFWSection1withRulesDropAll:
            Type: "Service"
            TestService: "nsxmanager.[1].dfwsection.[1]"
            reconfigure: true
            dfw_rules:
                      - name: rule1
                        action: 'REJECT'
                        direction: 'IN_OUT'
                        applied_tos:
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[2]->id'
                           - logical_entity: 'LogicalPort'
                             node_id: 'nsxmanager.[1].logicalport.[4]->id'
    UpdateDFWSection1withRulesAllowAll:
            Type: "Service"
            TestService: "nsxmanager.[1].dfwsection.[1]"
            reconfigure: true
            dfw_rules:
                      - name: rule1
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        applied_tos:
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[1]->id'
                           - logical_entity: 'LogicalSwitch'
                             node_id: 'nsxmanager.[1].logicalswitch.[2]->id'
    ReviseDFWSection1withRules--ESX: &ReviseDFWSection1withRules--ESX
            Type: "Service"
            TestService: "nsxmanager.[1].dfwsection.[1]"
            revise_section_with_rules:
                schema:
                    operation: 'insert_top'
                    dfw_rules:
                      - name: rule1
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        source_object:
                           - logical_entity: 'IPv4Address'
                             node_id: 'vm.[1].vnic.[1]->adapter_ip'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vnic.[1]->adapter_ip'
    ReviseDFWSection1withRules--KVM: &ReviseDFWSection1withRules--KVM
            Type: "Service"
            TestService: "nsxmanager.[1].dfwsection.[1]"
            revise_section_with_rules:
                schema:
                    operation: 'insert_top'
                    dfw_rules:
                      - name: rule1
                        action: 'ALLOW'
                        direction: 'IN_OUT'
                        source_object:
                           - logical_entity: 'IPv4Address'
                             node_id: 'vm.[1].vif.[1]->adapter_ip'
                        destination_object:
                          - logical_entity: 'IPv4Address'
                            node_id: 'vm.[2].vif.[1]->adapter_ip'
    DeleteDFWRule2:
            Type: "Service"
            TestService: "nsxmanager.[1].firewallrule.[2]"
            delete_rule:
               section_id: "nsxmanager.[1].dfwsection.[1]->id"

    DeleteDFWRule1:
            Type: "Service"
            TestService: "nsxmanager.[1].firewallrule.[1]"
            delete_rule:
               section_id: "nsxmanager.[1].dfwsection.[1]->id"
    DeleteAllDFWRuleSection1:
            Type: "Service"
            TestService: "nsxmanager.[1].firewallrule.[-1]"
            delete_rule:
               section_id: "nsxmanager.[1].dfwsection.[1]->id"

    DeleteAllNSGroups:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            deletensgroup: "nsxmanager.[1].nsgroup.[-1]"

    DeleteDFWSection1withRules:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            deletedfwsection: "nsxmanager.[1].dfwsection.[1]"

    DeleteDFWSection2withRules:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            deletedfwsection: "nsxmanager.[1].dfwsection.[2]"
    DeleteExcludeList:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            deleteexcludelist: "nsxmanager.[1].excludelist.[-1]"
    DeleteMacSet:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            deletemacset: "nsxmanager.[1].macset.[1]"
    DeleteIPSet:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            deleteipset: "nsxmanager.[1].ipset.[1]"
    DeleteEtherTypeNSServiceIPV4:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            deletemacset: "nsxmanager.[1].nsservice.[1]"

    GetSectionwithRules:
            Type: "Service"
            TestService: 'nsxmanager.[1].dfwsection.[1]'
            'get_section_with_rules[?]contain_once' :
                - action: 'REJECT'
                  direction: 'IN_OUT'

TopoDFW2VMs_2Hosts: &TopoDFW2VMs_2Hosts
    <<: *Topo_1MP_1CCP
    <<: *CommonTopoWorkloads
    <<: *AUTOGENERATED_WORKLOADS

    firewall_execution_type:
        ESX: &FIREWALL_EXECUTION_TYPE--ESX
            cli
        KVM: &FIREWALL_EXECUTION_TYPE--KVM
            cmd

    VMSetup--ESX:
        - - AddVM1Vnic1ToLS1
        - - AddVM2Vnic1ToLS1
        - - DiscoverLport1FromVM1Vnic1
          - DiscoverLport2FromVM2Vnic1
        - - ConfigureVM1-2Vnic1IP-Auto
    VMSetup--KVM:
        - - AddVM1Vif1ToKVM1Bridge1
        - - AddVM2Vif1ToKVM2Bridge1
        - - CreateLP1OnLS1ForVM1Vif1
          - CreateLP2OnLS1ForVM2Vif1
        - - ConfigureVM1-2Vif1IP-Auto

    VMCleanup--ESX:
        - - DeleteVnic-1_VM-1
          - DeleteVnic-1_VM-2
        - - UndiscoverLSP-1-2
    VMCleanup--KVM:
        - - DeleteVif-1_VM-1
          - DeleteVif-1_VM-2
        - - DeleteLSP-1-2

    TNCleanup--ESX:
        - - DeleteTN-1
          - DeleteTN-2
        - - RemoveManagerOnESX-1
          - RemoveManagerOnESX-2
        - - UndiscoverHostNode-1
          - UndiscoverHostNode-2
    TNCleanup--KVM:
        - - DeleteTN-1
          - DeleteTN-2
        - - RemoveManagerOnKVM-1
          - RemoveManagerOnKVM-2
        - - UndiscoverHostNode-1
          - UndiscoverHostNode-2

    LogicalCleanup:
        - - DeleteLS-1
        - - DeleteUPROF-1
        - - DeleteTZ-1

    SetManagerOnHosts--ESX:
        - - SetManagerOnESX-1
        - - SetManagerOnESX-2
    SetManagerOnHosts--KVM:
        - - SetManagerOnKVM-1
        - - SetManagerOnKVM-2

    DiscoverHostNodes--ESX:
        - - DiscoverHostNode1FromESX1
          - DiscoverHostNode2FromESX2
    DiscoverHostNodes--KVM:
        - - DiscoverHostNode1FromKVM1
          - DiscoverHostNode2FromKVM2

    CreateTransportNodes--ESX:
        - - CreateTN-1_HOSTNODE-1_TZ-1_VMNIC-1
          - CreateTN-2_HOSTNODE-2_TZ-1_VMNIC-1
    CreateTransportNodes--KVM:
        - - CreateTN-1_HOSTNODE-1_TZ-1_ETH-1
          - CreateTN-2_HOSTNODE-2_TZ-1_ETH-1

    DiscoverHostVteps--ESX:
        - - DiscoverESX1Vtep1FromDevice-vmk10
        - - DiscoverESX2Vtep1FromDevice-vmk10
    DiscoverHostVteps--KVM:
        - - DiscoverKVM1Vtep1FromDevice-nsx-vtep0.0
        - - DiscoverKVM2Vtep1FromDevice-nsx-vtep0.0

    CreateLogicalSwitches:
        - - CreateLS-1_RMODE-MTEP

    L2Setup--ESX:
        - - ClusterSetup
        - - ClusterVerification
        - - SetManagerOnHosts--ESX
        - - DiscoverHostNodes--ESX
        - - CreateTZ-1
        - - CreateUPROF-1_MTU-1600
        - - CreateTransportNodes--ESX
        - - DiscoverHostVteps--ESX
        - - CreateLogicalSwitches
        - - VMSetup--ESX
    L2Setup--KVM:
        - - ClusterSetup
        - - ClusterVerification
        - - SetManagerOnHosts--KVM
        - - DiscoverHostNodes--KVM
        - - CreateTZ-1
        - - CreateUPROF-1_MTU-1600
        - - CreateTransportNodes--KVM
        - - DiscoverHostVteps--KVM
        - - CreateLogicalSwitches
        - - VMSetup--KVM

    L2Traffic--ESX:
        - - PingFromVM1Vnic1ToVM2Vnic1
    L2Traffic--KVM:
        - - PingFromVM1Vif1ToVM2Vif1
    L2TrafficFail--ESX:
        - - PingFailFromVM1Vnic1ToVM2Vnic1
    L2TrafficFail--KVM:
        - - PingFailFromVM1Vif1ToVM2Vif1
    VerifyVtepEntriesOnHosts--ESX:
        - - VerifyLS1VtepEntryOnHost1--ESX
        - - VerifyLS1VtepEntryOnHost2--ESX
    VerifyVtepEntriesOnHosts--KVM:
        - - VerifyLS1VtepEntryOnHost1--KVM
        - - VerifyLS1VtepEntryOnHost2--KVM

    VerifyConnTableOnControllers--ESX:
        - - VerifyLS1ConnTableOnControllers--ESX
    VerifyConnTableOnControllers--KVM:
        - - VerifyLS1ConnTableOnControllers--KVM

    VerifyMacEntryOnControllers--ESX:
        - - VerifyLS1MacEntryOnControllers--ESX
    VerifyMacEntryOnControllers--KVM:
        - - VerifyLS1MacEntryOnControllers--KVM

    L2Verification--ESX:
        - - VerifyLSReplicationModeOnHost--ESX
        - - VerifyConnTableOnControllers--ESX
        - - VerifyMacEntryOnControllers--ESX
        - - VerifyVtepEntriesOnHosts--ESX
    L2Verification--KVM:
        - - VerifyLSReplicationModeOnHost--KVM
        - - VerifyConnTableOnControllers--KVM
        - - VerifyMacEntryOnControllers--KVM
        - - VerifyVtepEntriesOnHosts--KVM

    L2Cleanup--ESX:
        - - VMCleanup--ESX
        - - TNCleanup--ESX
        - - LogicalCleanup
        - - ClusterCleanup
    L2Cleanup--KVM:
        - - VMCleanup--KVM
        - - TNCleanup--KVM
        - - LogicalCleanup
        - - ClusterCleanup

TopoDFW4VMs_2Hosts: &TopoDFW4VMs_2Hosts
    <<: *Topo_1MP_1CCP
    <<: *CommonTopoWorkloads
    <<: *AUTOGENERATED_WORKLOADS

    VMSetup--ESX:
        - - AddVM1Vnic1ToLS1
        - - AddVM2Vnic1ToLS1
        - - AddVM3Vnic1ToLS2
        - - AddVM4Vnic1ToLS2
        - - DiscoverLport1FromVM1Vnic1
          - DiscoverLport2FromVM2Vnic1
          - DiscoverLport3FromVM3Vnic1
          - DiscoverLport4FromVM4Vnic1
        - - VMIPConfig--ESX
        - - AddStaticRoutesOnVMs--ESX
    VMSetup--KVM:
        - - AddVM1Vif1ToKVM1Bridge1
        - - AddVM2Vif1ToKVM1Bridge1
        - - AddVM3Vif1ToKVM2Bridge1
        - - AddVM4Vif1ToKVM2Bridge1
        - - CreateLP1OnLS1ForVM1Vif1
          - CreateLP2OnLS1ForVM2Vif1
          - CreateLP3OnLS1ForVM3Vif1
          - CreateLP4OnLS1ForVM4Vif1
        - - VMIPConfig--KVM
        - - AddStaticRoutesOnVMs--KVM

    VMIPConfig--ESX:
      - - ConfigureVM1Vnic1IP-192.168.4.3
        - ConfigureVM2Vnic1IP-192.168.4.4
        - ConfigureVM3Vnic1IP-192.168.5.3
        - ConfigureVM4Vnic1IP-192.168.5.4
    VMIPConfig--KVM:
      - - ConfigureVM1Vif1IP-192.168.4.3
        - ConfigureVM2Vif1IP-192.168.4.4
        - ConfigureVM3Vif1IP-192.168.5.3
        - ConfigureVM4Vif1IP-192.168.5.4

    VMCleanup--ESX:
        - - DeleteVnic-1_VM-1
          - DeleteVnic-1_VM-2
          - DeleteVnic-1_VM-3
          - DeleteVnic-1_VM-4
        - - UndiscoverLSP-1-4
    VMCleanup--KVM:
        - - DeleteVif-1_VM-1
          - DeleteVif-1_VM-2
          - DeleteVif-1_VM-3
          - DeleteVif-1_VM-4
        - - DeleteLSP-1-4

    TNCleanup--ESX:
        - - DeleteTN-1
          - DeleteTN-2
        - - RemoveManagerOnESX-1
          - RemoveManagerOnESX-2
        - - UndiscoverHostNode-1
          - UndiscoverHostNode-2
    TNCleanup--KVM:
        - - DeleteTN-1
          - DeleteTN-2
        - - RemoveManagerOnKVM-1
          - RemoveManagerOnKVM-2
        - - UndiscoverHostNode-1
          - UndiscoverHostNode-2

    LogicalCleanup:
        - - TlrDownlinkCleanup
        - - DeleteTlr
        - - DeleteLS-1
        - - DeleteLS-2
        - - DeleteUPROF-1
        - - DeleteTZ-1

    SetManagerOnHosts--ESX:
        - - SetManagerOnESX-1
        - - SetManagerOnESX-2
    SetManagerOnHosts--KVM:
        - - SetManagerOnKVM-1
        - - SetManagerOnKVM-2

    DiscoverHostNodes--ESX:
        - - DiscoverHostNode1FromESX1
          - DiscoverHostNode2FromESX2
    DiscoverHostNodes--KVM:
        - - DiscoverHostNode1FromKVM1
          - DiscoverHostNode2FromKVM2

    CreateTransportNodes--ESX:
        - - CreateTN-1_HOSTNODE-1_TZ-1_VMNIC-1
          - CreateTN-2_HOSTNODE-2_TZ-1_VMNIC-1
    CreateTransportNodes--KVM:
        - - CreateTN-1_HOSTNODE-1_TZ-1_ETH-1
          - CreateTN-2_HOSTNODE-2_TZ-1_ETH-1

    DiscoverHostVteps--ESX:
        - - DiscoverESX1Vtep1FromDevice-vmk10
        - - DiscoverESX2Vtep1FromDevice-vmk10
    DiscoverHostVteps--KVM:
        - - DiscoverKVM1Vtep1FromDevice-nsx-vtep0.0
        - - DiscoverKVM2Vtep1FromDevice-nsx-vtep0.0

    CreateLogicalSwitches:
        - - CreateLS-1_RMODE-MTEP
        - - CreateLS-2_RMODE-MTEP

    CreateLogicalSwitchTLRPorts:
        - - CreateLSP-5_LS-1
        - - CreateLSP-6_LS-2

    CreateTlr:
        - - CreateLR-1_TIER-1

    TlrDownlinkCleanup:
        - - DeleteLRP-1
        - - DeleteLRP-2
        - - DeleteLSP-5
        - - DeleteLSP-6

    DeleteTlr:
        - - DeleteLR-1 

    TlrDownlinkSetup:
        - - CreateLRP-1_LR-1_IP-192.168.4.1_LSP-5
        - - CreateLRP-2_LR-1_IP-192.168.5.1_LSP-6

    AddStaticRoutesOnVMs--ESX:
        - - Add192RouteOnVM1Vnic1viaLRP1
        - - Add192RouteOnVM2Vnic1viaLRP1
        - - Add192RouteOnVM3Vnic1viaLRP2
        - - Add192RouteOnVM4Vnic1viaLRP2
    AddStaticRoutesOnVMs--KVM:
        - - Add192RouteOnVM1Vif1viaLRP1
        - - Add192RouteOnVM2Vif1viaLRP1
        - - Add192RouteOnVM3Vif1viaLRP2
        - - Add192RouteOnVM4Vif1viaLRP2

    L2Setup--ESX:
        - - ClusterSetup
        - - ClusterVerification
        - - SetManagerOnHosts--ESX
        - - DiscoverHostNodes--ESX
        - - CreateTZ-1
        - - CreateUPROF-1_MTU-1600
        - - CreateTransportNodes--ESX
        - - DiscoverHostVteps--ESX
        - - VtepConnectivity--ESX
        - - CreateLogicalSwitches
        - - CreateLogicalSwitchTLRPorts
        - - CreateTlr
        - - TlrDownlinkSetup
        - - VMSetup--ESX
    L2Setup--KVM:
        - - ClusterSetup
        - - ClusterVerification
        - - SetManagerOnHosts--KVM
        - - DiscoverHostNodes--KVM
        - - CreateTZ-1
        - - CreateUPROF-1_MTU-1600
        - - CreateTransportNodes--KVM
        - - DiscoverHostVteps--KVM
        - - VtepConnectivity--KVM
        - - CreateLogicalSwitches
        - - CreateLogicalSwitchTLRPorts
        - - CreateTlr
        - - TlrDownlinkSetup
        - - VMSetup--KVM

    TrafficVM1_VM2_Pass--ESX:
        - - PingFromVM1Vnic1ToVM2Vnic1
    TrafficVM1_VM2_Pass--KVM:
        - - PingFromVM1Vif1ToVM2Vif1
    TrafficVM3_VM4_Pass--ESX:
        - - PingFromVM3Vnic1ToVM4Vnic1
    TrafficVM3_VM4_Pass--KVM:
        - - PingFromVM3Vif1ToVM4Vif1
    TrafficVM1_VM2_Fail--ESX:
        - - PingFailFromVM1Vnic1ToVM2Vnic1
    TrafficVM1_VM2_Fail--KVM:
        - - PingFailFromVM1Vif1ToVM2Vif1
    TrafficVM3_VM4_Fail--ESX:
        - - PingFailFromVM3Vnic1ToVM4Vnic1
    TrafficVM3_VM4_Fail--KVM:
        - - PingFailFromVM3Vif1ToVM4Vif1
    TrafficVM2_VM3_Fail--KVM:
        - - PingFailFromVM2Vif1ToVM4Vif1
    TrafficVM2_VM4_Fail--KVM:
        - - PingFailFromVM2Vif1ToVM4Vif1
    TrafficVM2_VM3_Fail--ESX:
        - - PingFailFromVM2Vnic1ToVM3Vnic1
    TrafficVM2_VM4_Fail--ESX:
        - - PingFailFromVM2Vnic1ToVM4Vnic1
    TrafficVM1_VM3_Fail--KVM:
        - - PingFailFromVM1Vif1ToVM4Vif1
    TrafficVM1_VM4_Fail--KVM:
        - - PingFailFromVM1Vif1ToVM4Vif1
    TrafficVM1_VM3_Fail--ESX:
        - - PingFailFromVM1Vnic1ToVM4Vnic1
    TrafficVM1_VM4_Fail--ESX:
        - - PingFailFromVM1Vnic1ToVM3Vnic1
    TrafficVM1_VM3_Pass--ESX:
        - - PingFromVM1Vnic1ToVM3Vnic1
    TrafficVM1_VM4_Pass--ESX:
        - - PingFromVM1Vnic1ToVM4Vnic1
    TrafficVM2_VM3_Pass--ESX:
        - - PingFromVM2Vnic1ToVM3Vnic1
    TrafficVM2_VM4_Pass--ESX:
        - - PingFromVM2Vnic1ToVM4Vnic1
    TrafficVM2_VM3_Pass--KVM:
        - - PingFromVM2Vif1ToVM3Vif1
    TrafficVM2_VM4_Pass--KVM:
        - - PingFromVM2Vif1ToVM4Vif1
    TrafficVM3_VM4_Fail_Drop--ESX:
        - - PingDropFromVM3Vnic1ToVM4Vnic1
    TrafficVM3_VM4_Fail_Drop--KVM:
        - - PingDropFromVM3Vif1ToVM4Vif1
    TrafficVM1_VM2_Fail_Drop--ESX:
        - - PingDropFromVM1Vnic1ToVM2Vnic1
    TrafficVM1_VM2_Fail_Drop--KVM:
        - - PingDropFromVM1Vif1ToVM2Vif1
    VerifyVtepEntriesOnHosts--ESX:
        - - VerifyLS1VtepEntryOnHost1--ESX
        - - VerifyLS2VtepEntryOnHost1--ESX
        - - VerifyLS1VtepEntryOnHost2--ESX
        - - VerifyLS2VtepEntryOnHost2--ESX
    VerifyVtepEntriesOnHosts--KVM:
        - - VerifyLS1VtepEntryOnHost1--KVM
        - - VerifyLS1VtepEntryOnHost2--KVM
        - - VerifyLS2VtepEntryOnHost1--KVM
        - - VerifyLS2VtepEntryOnHost2--KVM

    VerifyConnTableOnControllers--ESX:
        - - VerifyLS1ConnTableOnControllers--ESX
        - - VerifyLS2ConnTableOnControllers--ESX
    VerifyConnTableOnControllers--KVM:
        - - VerifyLS1ConnTableOnControllers--KVM
        - - VerifyLS2ConnTableOnControllers--KVM

    VerifyMacEntryOnControllers--ESX:
        - - VerifyLS1MacEntryOnControllers--ESX
        - - VerifyLS2MacEntryOnControllers--ESX
    VerifyMacEntryOnControllers--KVM:
        - - VerifyLS1MacEntryOnControllers--KVM
        - - VerifyLS2MacEntryOnControllers--KVM

    VtepConnectivity--ESX:
        - - PingFromESX1Vtep1ToESX2Vtep1
    VtepConnectivity--KVM:
        - - PingFromKVM1Vtep1ToKVM2Vtep1

    L2Verification--ESX:
        - - VerifyLSReplicationModeOnHost--ESX
        - - VerifyConnTableOnControllers--ESX
        - - VerifyMacEntryOnControllers--ESX
        - - VerifyVtepEntriesOnHosts--ESX
    L2Verification--KVM:
        - - VerifyLSReplicationModeOnHost--KVM
        - - VerifyConnTableOnControllers--KVM
        - - VerifyMacEntryOnControllers--KVM
        - - VerifyVtepEntriesOnHosts--KVM

    L2Cleanup--ESX:
        - - VMCleanup--ESX
        - - TNCleanup--ESX
        - - LogicalCleanup
        - - ClusterCleanup
    L2Cleanup--KVM:
        - - VMCleanup--KVM
        - - TNCleanup--KVM
        - - LogicalCleanup
        - - ClusterCleanup
