!include ../../../Common/Topo_Clusters.yaml

TopoIPFIX_4Hosts: &TopoIPFIX_4Hosts
    <<: *Topo_3MP_3CCP

    firewall_execution_type:
        ESX: &FIREWALL_EXECUTION_TYPE--ESX
            cli
        KVM: &FIREWALL_EXECUTION_TYPE--KVM
            cmd

    VMSetup--ESX:
        - - AddVM1Vnic1ToLS1
        - - AddVM3Vnic1ToLS1
        - - AddVM5Vnic1ToLS1
        - - AddVM7Vnic1ToLS1
        - - AddVM2Vnic1ToLS2
        - - AddVM4Vnic1ToLS2
        - - AddVM6Vnic1ToLS2
        - - AddVM8Vnic1ToLS2
        - - DiscoverLport1FromVM1Vnic1
          - DiscoverLport2FromVM2Vnic1
          - DiscoverLport3FromVM3Vnic1
          - DiscoverLport4FromVM4Vnic1
          - DiscoverLport5FromVM5Vnic1
          - DiscoverLport6FromVM6Vnic1
          - DiscoverLport7FromVM7Vnic1
          - DiscoverLport8FromVM8Vnic1
        - - ConfigureVM1-8Vnic1IP-Auto
    VMSetup--KVM:
        - - AddVM1Vif1ToKVM1Bridge1
        - - AddVM2Vif1ToKVM1Bridge1
        - - AddVM3Vif1ToKVM2Bridge1
        - - AddVM4Vif1ToKVM2Bridge1
        - - AddVM5Vif1ToKVM3Bridge1
        - - AddVM6Vif1ToKVM3Bridge1
        - - AddVM7Vif1ToKVM4Bridge1
        - - AddVM8Vif1ToKVM4Bridge1
        - - CreateLP1OnLS1ForVM1Vif1
          - CreateLP2OnLS2ForVM2Vif1
        - - CreateLP3OnLS1ForVM3Vif1
          - CreateLP4OnLS2ForVM4Vif1
        - - CreateLP5OnLS1ForVM5Vif1
          - CreateLP6OnLS2ForVM6Vif1
        - - CreateLP7OnLS1ForVM7Vif1
          - CreateLP8OnLS2ForVM8Vif1
        - - ConfigureVM1-8Vif1IP-Auto

    VMCleanup--ESX:
        - - DeleteVnic-1_VM-1
          - DeleteVnic-1_VM-2
          - DeleteVnic-1_VM-3
          - DeleteVnic-1_VM-4
          - DeleteVnic-1_VM-5
          - DeleteVnic-1_VM-6
          - DeleteVnic-1_VM-7
          - DeleteVnic-1_VM-8
        - - UndiscoverLSP-1-8
    VMCleanup--KVM:
        - - DeleteVif-1_VM-1
          - DeleteVif-1_VM-2
          - DeleteVif-1_VM-3
          - DeleteVif-1_VM-4
          - DeleteVif-1_VM-5
          - DeleteVif-1_VM-6
          - DeleteVif-1_VM-7
          - DeleteVif-1_VM-8
        - - DeleteLSP-1-8

    TNCleanup--ESX:
        - - DeleteTN-1
          - DeleteTN-2
          - DeleteTN-3
          - DeleteTN-4
        - - RemoveManagerOnESX-1
          - RemoveManagerOnESX-2
          - RemoveManagerOnESX-3
          - RemoveManagerOnESX-4
        - - UndiscoverHostNode-1
          - UndiscoverHostNode-2
          - UndiscoverHostNode-3
          - UndiscoverHostNode-4
    TNCleanup--KVM:
        - - DeleteTN-1
          - DeleteTN-2
          - DeleteTN-3
          - DeleteTN-4
        - - RemoveManagerOnKVM-1
          - RemoveManagerOnKVM-2
          - RemoveManagerOnKVM-3
          - RemoveManagerOnKVM-4
        - - UndiscoverHostNode-1
          - UndiscoverHostNode-2
          - UndiscoverHostNode-3
          - UndiscoverHostNode-4

    LogicalCleanup:
        - - DeleteLS-1
          - DeleteLS-2
        - - DeleteUPROF-1
        - - DeleteTZ-1

    SetManagerOnHosts--ESX:
        - - SetManagerOnESX-1
        - - SetManagerOnESX-2
        - - SetManagerOnESX-3
        - - SetManagerOnESX-4
    SetManagerOnHosts--KVM:
        - - SetManagerOnKVM-1
        - - SetManagerOnKVM-2
        - - SetManagerOnKVM-3
        - - SetManagerOnKVM-4

    DiscoverHostNodes--ESX:
        - - DiscoverHostNode1FromESX1
          - DiscoverHostNode2FromESX2
          - DiscoverHostNode3FromESX3
          - DiscoverHostNode4FromESX4
    DiscoverHostNodes--KVM:
        - - DiscoverHostNode1FromKVM1
          - DiscoverHostNode2FromKVM2
          - DiscoverHostNode3FromKVM3
          - DiscoverHostNode4FromKVM4

    CreateTransportNodes--ESX:
        - - CreateTN-1_HOSTNODE-1_TZ-1_VMNIC-1
          - CreateTN-2_HOSTNODE-2_TZ-1_VMNIC-1
          - CreateTN-3_HOSTNODE-3_TZ-1_VMNIC-1
          - CreateTN-4_HOSTNODE-4_TZ-1_VMNIC-1
    CreateTransportNodes--KVM:
        - - CreateTN-1_HOSTNODE-1_TZ-1_ETH-1
          - CreateTN-2_HOSTNODE-2_TZ-1_ETH-1
          - CreateTN-3_HOSTNODE-3_TZ-1_ETH-1
          - CreateTN-4_HOSTNODE-4_TZ-1_ETH-1

    DiscoverHostVteps--ESX:
        - - DiscoverESX1Vtep1FromDevice-vmk10
        - - DiscoverESX2Vtep1FromDevice-vmk10
        - - DiscoverESX3Vtep1FromDevice-vmk10
        - - DiscoverESX4Vtep1FromDevice-vmk10
    DiscoverHostVteps--KVM:
        - - DiscoverKVM1Vtep1FromDevice-nsx-vtep0.0
        - - DiscoverKVM2Vtep1FromDevice-nsx-vtep0.0
        - - DiscoverKVM3Vtep1FromDevice-nsx-vtep0.0
        - - DiscoverKVM4Vtep1FromDevice-nsx-vtep0.0

    CreateLogicalSwitches:
        - - CreateLS-1_RMODE-MTEP
          - CreateLS-2_RMODE-SOURCE

    CreateVlanTZLogicalSwitches:
        - - CreateLS-1_VLAN-21
        - - CreateLS-2_VLAN-22

    L2Setup--ESX:
        - - ClusterSetup
        - - ClusterVerification
        - - SetManagerOnHosts--ESX
        - - DiscoverHostNodes--ESX
        - - CreateTZ-1
        - - CreateUPROF-1_MTU-1600
        - - CreateTransportNodes--ESX
        - - DiscoverHostVteps--ESX
        - - CreateLogicalSwitches
        - - VMSetup--ESX
    L2Setup--KVM:
        - - ClusterSetup
        - - ClusterVerification
        - - SetManagerOnHosts--KVM
        - - DiscoverHostNodes--KVM
        - - CreateTZ-1
        - - CreateUPROF-1_MTU-1600
        - - CreateTransportNodes--KVM
        - - DiscoverHostVteps--KVM
        - - CreateLogicalSwitches
        - - VMSetup--KVM

    L2Setup-VlanTZ--ESX:
        - - ClusterSetup
        - - ClusterVerification
        - - SetManagerOnHosts--ESX
        - - DiscoverHostNodes--ESX
        - - CreateTZ-1_TZTYPE-VLAN
        - - CreateUPROF-1_MTU-1600
        - - CreateTransportNodes--ESX
        - - CreateVlanTZLogicalSwitches
        - - VMSetup--ESX
    L2Setup-VlanTZ--KVM:
        - - ClusterSetup
        - - ClusterVerification
        - - SetManagerOnHosts--KVM
        - - DiscoverHostNodes--KVM
        - - CreateTZ-1_TZTYPE-VLAN
        - - CreateUPROF-1_MTU-1600
        - - CreateTransportNodes--KVM
        - - CreateVlanTZLogicalSwitches
        - - VMSetup--KVM

    VerifyVtepEntriesOnHosts--ESX:
        - - VerifyLS1VtepEntryOnHost1--ESX
        - - VerifyLS1VtepEntryOnHost2--ESX
        - - VerifyLS1VtepEntryOnHost3--ESX
        - - VerifyLS1VtepEntryOnHost4--ESX
        - - VerifyLS2VtepEntryOnHost1--ESX
        - - VerifyLS2VtepEntryOnHost2--ESX
        - - VerifyLS2VtepEntryOnHost3--ESX
        - - VerifyLS2VtepEntryOnHost4--ESX
    VerifyVtepEntriesOnHosts--KVM:
        - - VerifyLS1VtepEntryOnHost1--KVM
        - - VerifyLS1VtepEntryOnHost2--KVM
        - - VerifyLS1VtepEntryOnHost3--KVM
        - - VerifyLS1VtepEntryOnHost4--KVM
        - - VerifyLS2VtepEntryOnHost1--KVM
        - - VerifyLS2VtepEntryOnHost2--KVM
        - - VerifyLS2VtepEntryOnHost3--KVM
        - - VerifyLS2VtepEntryOnHost4--KVM

    VerifyConnTableOnControllers--ESX:
        - - VerifyLS1ConnTableOnControllers--ESX
        - - VerifyLS2ConnTableOnControllers--ESX
    VerifyConnTableOnControllers--KVM:
        - - VerifyLS1ConnTableOnControllers--KVM
        - - VerifyLS2ConnTableOnControllers--KVM

    VerifyMacEntryOnControllers--ESX:
        - - VerifyLS1MacEntryOnControllers--ESX
        - - VerifyLS2MacEntryOnControllers--ESX
    VerifyMacEntryOnControllers--KVM:
        - - VerifyLS1MacEntryOnControllers--KVM
        - - VerifyLS2MacEntryOnControllers--KVM

    L2Verification--ESX:
        - - VerifyLSReplicationModeOnHost--ESX
        - - VerifyConnTableOnControllers--ESX
        - - VerifyMacEntryOnControllers--ESX
        - - VerifyVtepEntriesOnHosts--ESX
    L2Verification--KVM:
        - - VerifyLSReplicationModeOnHost--KVM
        - - VerifyConnTableOnControllers--KVM
        - - VerifyMacEntryOnControllers--KVM
        - - VerifyVtepEntriesOnHosts--KVM

    L2Cleanup--ESX:
        - - VMCleanup--ESX
        - - TNCleanup--ESX
        - - LogicalCleanup
        - - ClusterCleanup
    L2Cleanup--KVM:
        - - VMCleanup--KVM
        - - TNCleanup--KVM
        - - LogicalCleanup
        - - ClusterCleanup

    VerifyLSReplicationModeOnHost--ESX: &VERIFY_REPLICATION_MODE_ON_HOST--ESX
        Type: "Host"
        testHost: "esx.[1-4]"
        execution_type: 'cli'
        'get_logical_switch[?]contain_once':
            table:
                - switch_vni: "nsxmanager.[1].logicalswitch.[1]"
                  replication_mode: 'mtep'
                - switch_vni: "nsxmanager.[1].logicalswitch.[2]"
                  replication_mode: 'source'
    VerifyLSReplicationModeOnHost--KVM:
        <<: *VERIFY_REPLICATION_MODE_ON_HOST--ESX
        testHost: "kvm.[1-4]"

    VerifyLS1ConnTableOnControllers--ESX: &VERIFY_LS1_CONN_TABLE_ON_CONTROLLER_1--ESX
        Type: "Switch"
        TestSwitch: "nsxmanager.[1].logicalswitch.[1]"
        endpoints: 'nsxcontroller.[-1]'
        execution_type: cli
        switch_vni: "nsxmanager.[1].logicalswitch.[1]"
        noofretries: "3"
        get_connection_table[?]contain_once:
          table:
            - adapter_ip: "esx.[1]->mgmt_ip"
            - adapter_ip: "esx.[2]->mgmt_ip"
            - adapter_ip: "esx.[3]->mgmt_ip"
            - adapter_ip: "esx.[4]->mgmt_ip"
    VerifyLS1ConnTableOnControllers--KVM: &VERIFY_LS1_CONN_TABLE_ON_CONTROLLER_1--KVM
        <<: *VERIFY_LS1_CONN_TABLE_ON_CONTROLLER_1--ESX
        get_connection_table[?]contain_once:
          table:
            - adapter_ip: "kvm.[1]->mgmt_ip"
            - adapter_ip: "kvm.[2]->mgmt_ip"
            - adapter_ip: "kvm.[3]->mgmt_ip"
            - adapter_ip: "kvm.[4]->mgmt_ip"

    VerifyLS2ConnTableOnControllers--ESX:
        <<: *VERIFY_LS1_CONN_TABLE_ON_CONTROLLER_1--ESX
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: "nsxmanager.[1].logicalswitch.[2]"
    VerifyLS2ConnTableOnControllers--KVM:
        <<: *VERIFY_LS1_CONN_TABLE_ON_CONTROLLER_1--KVM
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: "nsxmanager.[1].logicalswitch.[2]"

    VerifyLS1MacEntryOnControllers--ESX: &VERIFY_LS1_MAC_ENTRY_ON_CONTROLLERS--ESX
        Type: "Switch"
        TestSwitch: "nsxmanager.[1].logicalswitch.[1]"
        execution_type: cli
        switch_vni: 'nsxmanager.[1].logicalswitch.[1]'
        endpoints: 'nsxcontroller.[-1]'
        noofretries: "3"
        'get_mac_table[?]contain_once' :
            table:
                - adapter_mac: "vm.[1].vnic.[1]"
                  adapter_ip: "esx.[1].vtep.[1]"
                - adapter_mac: "vm.[3].vnic.[1]"
                  adapter_ip: "esx.[2].vtep.[1]"
                - adapter_mac: "vm.[5].vnic.[1]"
                  adapter_ip: "esx.[3].vtep.[1]"
                - adapter_mac: "vm.[7].vnic.[1]"
                  adapter_ip: "esx.[4].vtep.[1]"
    VerifyLS1MacEntryOnControllers--KVM:
        <<: *VERIFY_LS1_MAC_ENTRY_ON_CONTROLLERS--ESX
        'get_mac_table[?]contain_once' :
            table:
                - adapter_mac: "vm.[1].vif.[1]"
                  adapter_ip: "kvm.[1].vtep.[1]"
                - adapter_mac: "vm.[3].vif.[1]"
                  adapter_ip: "kvm.[2].vtep.[1]"
                - adapter_mac: "vm.[5].vif.[1]"
                  adapter_ip: "kvm.[3].vtep.[1]"
                - adapter_mac: "vm.[7].vif.[1]"
                  adapter_ip: "kvm.[4].vtep.[1]"

    VerifyLS2MacEntryOnControllers--ESX: &VERIFY_LS2_MAC_ENTRY_ON_CONTROLLERS--ESX
        Type: "Switch"
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        execution_type: cli
        switch_vni: 'nsxmanager.[1].logicalswitch.[2]'
        endpoints: 'nsxcontroller.[-1]'
        noofretries: "3"
        'get_mac_table[?]contain_once' :
            table:
                - adapter_mac: "vm.[2].vnic.[1]"
                  adapter_ip: "esx.[1].vtep.[1]"
                - adapter_mac: "vm.[4].vnic.[1]"
                  adapter_ip: "esx.[2].vtep.[1]"
                - adapter_mac: "vm.[6].vnic.[1]"
                  adapter_ip: "esx.[3].vtep.[1]"
                - adapter_mac: "vm.[8].vnic.[1]"
                  adapter_ip: "esx.[4].vtep.[1]"
    VerifyLS2MacEntryOnControllers--KVM:
        <<: *VERIFY_LS2_MAC_ENTRY_ON_CONTROLLERS--ESX
        'get_mac_table[?]contain_once' :
            table:
                - adapter_mac: "vm.[2].vif.[1]"
                  adapter_ip: "kvm.[1].vtep.[1]"
                - adapter_mac: "vm.[4].vif.[1]"
                  adapter_ip: "kvm.[2].vtep.[1]"
                - adapter_mac: "vm.[6].vif.[1]"
                  adapter_ip: "kvm.[3].vtep.[1]"
                - adapter_mac: "vm.[8].vif.[1]"
                  adapter_ip: "kvm.[4].vtep.[1]"

    VerifyLS1VtepEntryOnHost1--ESX: &VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--ESX
        Type: "Switch"
        TestSwitch: "nsxmanager.[1].logicalswitch.[1]"
        execution_type: 'cli'
        switch_vni: 'nsxmanager.[1].logicalswitch.[1]'
        endpoints: 'esx.[1]'
        noofretries: 1
        'get_vtep_table[?]contain_once':
            table:
                - adapter_ip: "esx.[2].vtep.[1]"
                - adapter_ip: "esx.[3].vtep.[1]"
                - adapter_ip: "esx.[4].vtep.[1]"
    VerifyLS1VtepEntryOnHost1--KVM: &VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--KVM
        Type: "Switch"
        TestSwitch: "nsxmanager.[1].logicalswitch.[1]"
        execution_type: 'cli'
        switch_vni: 'nsxmanager.[1].logicalswitch.[1]'
        endpoints: 'kvm.[1]'
        noofretries: 1
        'get_vtep_table[?]contain_once':
            table:
                - adapter_ip: "kvm.[2].vtep.[1]"
                - adapter_ip: "kvm.[3].vtep.[1]"
                - adapter_ip: "kvm.[4].vtep.[1]"

    VerifyLS1VtepEntryOnHost2--ESX: &VERIFY_LS1_VTEP_ENTRY_ON_HOST_2--ESX
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--ESX
        endpoints: 'esx.[2]'
        'get_vtep_table[?]contain_once':
            table:
                - adapter_ip: "esx.[1].vtep.[1]"
                - adapter_ip: "esx.[3].vtep.[1]"
                - adapter_ip: "esx.[4].vtep.[1]"
    VerifyLS1VtepEntryOnHost2--KVM: &VERIFY_LS1_VTEP_ENTRY_ON_HOST_2--KVM
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--KVM
        endpoints: 'kvm.[2]'
        'get_vtep_table[?]contain_once':
            table:
                - adapter_ip: "kvm.[1].vtep.[1]"
                - adapter_ip: "kvm.[3].vtep.[1]"
                - adapter_ip: "kvm.[4].vtep.[1]"

    VerifyLS1VtepEntryOnHost3--ESX: &VERIFY_LS1_VTEP_ENTRY_ON_HOST_3--ESX
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--ESX
        endpoints: 'esx.[3]'
        'get_vtep_table[?]contain_once':
            table:
                - adapter_ip: "esx.[1].vtep.[1]"
                - adapter_ip: "esx.[2].vtep.[1]"
                - adapter_ip: "esx.[4].vtep.[1]"
    VerifyLS1VtepEntryOnHost3--KVM: &VERIFY_LS1_VTEP_ENTRY_ON_HOST_3--KVM
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--KVM
        endpoints: 'kvm.[3]'
        'get_vtep_table[?]contain_once':
            table:
                - adapter_ip: "kvm.[1].vtep.[1]"
                - adapter_ip: "kvm.[2].vtep.[1]"
                - adapter_ip: "kvm.[4].vtep.[1]"

    VerifyLS1VtepEntryOnHost4--ESX: &VERIFY_LS1_VTEP_ENTRY_ON_HOST_4--ESX
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--ESX
        endpoints: 'esx.[4]'
        'get_vtep_table[?]contain_once':
            table:
                - adapter_ip: "esx.[1].vtep.[1]"
                - adapter_ip: "esx.[2].vtep.[1]"
                - adapter_ip: "esx.[3].vtep.[1]"
    VerifyLS1VtepEntryOnHost4--KVM: &VERIFY_LS1_VTEP_ENTRY_ON_HOST_4--KVM
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--KVM
        endpoints: 'kvm.[4]'
        'get_vtep_table[?]contain_once':
            table:
                - adapter_ip: "kvm.[1].vtep.[1]"
                - adapter_ip: "kvm.[2].vtep.[1]"
                - adapter_ip: "kvm.[3].vtep.[1]"

    VerifyLS2VtepEntryOnHost1--ESX: &VERIFY_LS2_VTEP_ENTRY_ON_HOST_1--ESX
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--ESX
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: 'nsxmanager.[1].logicalswitch.[2]'
    VerifyLS2VtepEntryOnHost1--KVM: &VERIFY_LS2_VTEP_ENTRY_ON_HOST_1--KVM
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_1--KVM
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: 'nsxmanager.[1].logicalswitch.[2]'

    VerifyLS2VtepEntryOnHost2--ESX: &VERIFY_LS2_VTEP_ENTRY_ON_HOST_2--ESX
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_2--ESX
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: 'nsxmanager.[1].logicalswitch.[2]'
    VerifyLS2VtepEntryOnHost2--KVM: &VERIFY_LS2_VTEP_ENTRY_ON_HOST_2--KVM
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_2--KVM
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: 'nsxmanager.[1].logicalswitch.[2]'

    VerifyLS2VtepEntryOnHost3--ESX: &VERIFY_LS2_VTEP_ENTRY_ON_HOST_3--ESX
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_3--ESX
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: 'nsxmanager.[1].logicalswitch.[2]'
    VerifyLS2VtepEntryOnHost3--KVM: &VERIFY_LS2_VTEP_ENTRY_ON_HOST_3--KVM
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_3--KVM
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: 'nsxmanager.[1].logicalswitch.[2]'

    VerifyLS2VtepEntryOnHost4--ESX: &VERIFY_LS2_VTEP_ENTRY_ON_HOST_4--ESX
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_4--ESX
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: 'nsxmanager.[1].logicalswitch.[2]'
    VerifyLS2VtepEntryOnHost4--KVM: &VERIFY_LS2_VTEP_ENTRY_ON_HOST_4--KVM
        <<: *VERIFY_LS1_VTEP_ENTRY_ON_HOST_4--KVM
        TestSwitch: "nsxmanager.[1].logicalswitch.[2]"
        switch_vni: 'nsxmanager.[1].logicalswitch.[2]'

##########################################################
#
#       IPFIX Workloads
#
##########################################################

    EnableIPFIX: &ENABLE_IPFIX
        Type: "NSX"
        TestNSX: "nsxmanager.[1]"
        ipfixconfig:
            "[1]":
                enabled: "true"
                ip_address: 'vm.[8]->ip'
                port: 9999

    ToggleIPFIX: &TOGGLE_IPFIX
        - ['DisableIPFIX']
        - ['EnableIPFIX']
        # Since it is not possible to just disable and re-enable IPFIX and have
        # the configuration persisted, we also need to re-update it.
        - ['UpdateIPFIXConfig']

    VerifyIPFIXConfigOnHosts1to4--ESX:
        Type: Host
        TestHost: 'esx.[1-4]'
        execution_type: 'cli'
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '9'  # 1/(1+X) = 0.1; X = 9
            ip_address: 'vm.[8]->ip'
            port: 9999
            flow_timeout: '200'
            idle_timeout: '100'
    VerifyIPFIXConfigOnHosts1to4--KVM:
        Type: Host
        TestHost: 'kvm.[1-4]'
        execution_type: 'cli'
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '10' # 1/0.1 = 10
            ip_address: 'vm.[8]->ip'
            port: 9999
            flow_timeout: '200'
            max_flows: '1000'
            domain_id: '10'

    VerifyNewIPFIXConfigOnHost1to4--ESX:
        Type: Host
        TestHost: 'esx.[1-4]'
        execution_type: 'cli'
        sleepbetweenworkloads: 60
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '4'  # 1/(1+X) = 0.2; X = 4
            ip_address: 'vm.[8]->ip'
            port: 7777
            flow_timeout: '222'
            idle_timeout: '111'
    VerifyNewIPFIXConfigOnHost1to4--KVM:
        Type: Host
        TestHost: 'kvm.[1-4]'
        execution_type: 'cli'
        sleepbetweenworkloads: 60
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '5'  # 1/0.2 = 5
            ip_address: 'vm.[8]->ip'
            port: 7777
            flow_timeout: '222'
            max_flows: '100'
            domain_id: '123'

    Verify100PercentSampleProbabilityOnHosts--ESX:
        Type: Host
        TestHost: 'esx.[1-4]'
        execution_type: 'cli'
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '0'  # 1/(1+X) = 1; X = 0
    Verify100PercentSampleProbabilityOnHosts--KVM:
        Type: Host
        TestHost: 'kvm.[1-4]'
        execution_type: 'cli'
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '1' # X = 1/1 = 1

    Verify50PercentSampleProbabilityOnHosts--ESX:
        Type: Host
        TestHost: 'esx.[1-4]'
        execution_type: 'cli'
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '1'  # 1/(1+X) = 0.5; X = 1
    Verify50PercentSampleProbabilityOnHosts--KVM:
        Type: Host
        TestHost: 'kvm.[1-4]'
        execution_type: 'cli'
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '2' # X = 1/0.5 = 2

    Verify10PercentSampleProbabilityOnHosts--ESX:
        Type: Host
        TestHost: 'esx.[1-4]'
        execution_type: 'cli'
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '9'  # 1/(1+X) = 0.1; X = 9
    Verify10PercentSampleProbabilityOnHosts--KVM:
        Type: Host
        TestHost: 'kvm.[1-4]'
        execution_type: 'cli'
        'get_ipfix_config[?]contain_once':
            packet_sample_probability: '10' # X = 1/0.1 = 10

    DisableIPFIX: &DisableIPFIX
        Type: "Service"
        Testservice: "nsxmanager.[1].ipfixconfig.[1]"
        reconfigure: true
        enabled: "false"

    BlockMPtoMPAConnectionOnHosts1to4--ESX:
        - - BlockRabbitMQProxy--ESX
        - - BlockvSFW-UW--ESX
    BlockMPtoMPAConnectionOnHosts1to4--KVM:
        - - BlockRabbitMQProxy--KVM

    BlockRabbitMQProxy--ESX:
        Type: Host
        TestHost: esx.[1-4]
        firewall_rule:
                rule_operation: disable
                ruleset: rabbitmqproxy
                execution_type: "cli"
        ExpectedResult: "ignore"
    BlockRabbitMQProxy--KVM:
        Type: Host
        TestHost: kvm.[1-4]
        firewall_rule: &DISABLE_RABBITMQ_RULE--KVM
            execution_type: "cmd"
            rule_operation: 'add'
            chain: 'OUTPUT'
            protocol: 'tcp'
            action: 'DROP'
            protocol_options:
                'destination_port': '5671'
            match_extensions:
                'comment_match_ext':
                    'comment': 'Block MPA to MP communication'
        ExpectedResult: "ignore"

    BlockvSFW-UW--ESX:
        Type: Host
        TestHost: esx.[1-4]
        firewall_rule:
                rule_operation: disable
                ruleset: vSFW-UW
                execution_type: "cli"
        ExpectedResult: "ignore"

    RestoreMPtoMPAConnectionOnHosts1to4--ESX:
        - - UnblockRabbitMQProxy--ESX
        - - UnblockvSFW-UW--ESX
    RestoreMPtoMPAConnectionOnHosts1to4--KVM:
        - - UnblockRabbitMQProxy--KVM

    UnblockRabbitMQProxy--ESX:
        Type: Host
        TestHost: esx.[1-4]
        firewall_rule:
                rule_operation: enable
                ruleset: rabbitmqproxy
                execution_type: "cli"
    UnblockRabbitMQProxy--KVM:
        Type: Host
        TestHost: kvm.[1-4]
        firewall_rule:
            <<: *DISABLE_RABBITMQ_RULE--KVM
            rule_operation: 'remove'

    UnblockvSFW-UW--ESX:
        Type: Host
        TestHost: esx.[1-4]
        firewall_rule:
                rule_operation: enable
                ruleset: vSFW-UW
                execution_type: "cli"

    Verify_MP_MPA_Connection_Up--ESX: &Verify_MP_MPA_Connection_Up--ESX
        Type: Host
        TestHost: 'esx.[1-4]'
        execution_type: 'cli'
        port: 5671
        sleepbetweenworkloads: 30
        connection_states:
            - 'ESTABLISHED'
        keywords:
            - 'nsx-mpa'
            - 'tcp'
        get_tcp_connection_count[?]equal_to:
            # XXX(Mihir): Verify if this value is still valid after enabling
            # 3MP-clustering. Might be either 2 or 6.
            result_count: 2
    Verify_MP_MPA_Connection_Up--KVM:
        <<: *Verify_MP_MPA_Connection_Up--ESX
        TestHost: 'kvm.[1-4]'
        execution_type: 'cmd'

    Verify_MP_MPA_Connection_Down--ESX: &Verify_MP_MPA_Connection_Down--ESX
        Type: Host
        TestHost: 'esx.[1-4]'
        execution_type: 'cli'
        port: 5671
        sleepbetweenworkloads: 300
        connection_states:
            - 'ESTABLISHED'
        keywords:
            - 'nsx-mpa'
            - 'tcp'
        get_tcp_connection_count[?]equal_to:
            result_count: 0
    Verify_MP_MPA_Connection_Down--KVM:
        <<: *Verify_MP_MPA_Connection_Down--ESX
        TestHost: 'kvm.[1-4]'
        execution_type: 'cmd'

    Verify100PercentSampleProbabilityOnMP:
        Type: "Service"
        Testservice: "nsxmanager.[1].ipfixconfig.[1]"
        read:
          'packet_sample_probability[?]equal_to': '1.0'

    Verify50PercentSampleProbabilityOnMP:
        Type: "Service"
        Testservice: "nsxmanager.[1].ipfixconfig.[1]"
        read:
          'packet_sample_probability[?]equal_to': '0.5'

    Verify10PercentSampleProbabilityOnMP:
        Type: "Service"
        Testservice: "nsxmanager.[1].ipfixconfig.[1]"
        read:
          'packet_sample_probability[?]equal_to': '0.1'

    StartTSharkOnVM-8:
        Type: VM
        TestVM: 'vm.[8]'
        capture:
            tool: 'tshark'
            file_name: '/tmp/tshark123.cap'
            capture_filter: '-f "dst port 9999"'
            adapter_name: 'eth0'
            execution_type: 'cmd'

    NetcatListenOnVM8:
        Type: VM
        TestVM: vm.[8]
        start_netcat_server:
            ip: vm.[8]->ip
            port: 9999
            udp: True
            wait: False
            execution_type: cmd
