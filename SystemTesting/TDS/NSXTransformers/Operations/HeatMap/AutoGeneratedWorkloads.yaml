AutoGeneratedWorkloads: &AutoGeneratedWorkloads
    AddVM1Vif1ToKVM1Bridge1:
        TestVM: vm.[1]
        Type: VM
        vif:
            '[1]':
                backing: kvm.[1].bridge.[1]
    AddVM2Vif1ToKVM2Bridge1:
        TestVM: vm.[2]
        Type: VM
        vif:
            '[1]':
                backing: kvm.[2].bridge.[1]
    AddVM3Vif1ToKVM2Bridge1:
        TestVM: vm.[3]
        Type: VM
        vif:
            '[1]':
                backing: kvm.[2].bridge.[1]
    ConfigureVM1Vif1IP-Auto:
        IPv4: auto
        TestAdapter: vm.[1].vif.[1]
        Type: NetAdapter
    ConfigureVM2Vif1IP-Auto:
        IPv4: auto
        TestAdapter: vm.[2].vif.[1]
        Type: NetAdapter
    ConfigureVM3Vif1IP-Auto:
        IPv4: auto
        TestAdapter: vm.[3].vif.[1]
        Type: NetAdapter
    CreateLP1OnLS1ForVM1Vif1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[1]':
                admin_state: UP
                attachment:
                    attachment_type: VIF
                    id_: vm.[1].vif.[1]->uuid
                switch_id: nsxmanager.[1].logicalswitch.[1]->id
    CreateLP2OnLS1ForVM2Vif1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[2]':
                admin_state: UP
                attachment:
                    attachment_type: VIF
                    id_: vm.[2].vif.[1]->uuid
                switch_id: nsxmanager.[1].logicalswitch.[1]->id
    CreateLP3OnLS1ForVM3Vif1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[3]':
                admin_state: UP
                attachment:
                    attachment_type: VIF
                    id_: vm.[3].vif.[1]->uuid
                switch_id: nsxmanager.[1].logicalswitch.[1]->id
    CreateLS-1_RMODE-MTEP:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalswitch:
            '[1]':
                admin_state: UP
                name: lswitch1
                replication_mode: MTEP
                summary: lswitch1 (created through automation)
                transport_zone_id: nsxmanager.[1].transportzone.[1]
    CreateTN-1-2_ETH-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportnode:
            '[1-2]':
                host_switches:
                -   host_switch_profile_ids:
                    -   key: UplinkHostSwitchProfile
                        value: nsxmanager.[1].uplinkprofile.[1]->id
                    switch_name: nsxvswitch
                    uplinks:
                    -   adapter_name: uplink1
                        device_name: eth1
                node_id: nsxmanager.[1].hostnode.[x=transportnode_index]->id
                transport_zone_endpoint:
                -   transport_zone_id: nsxmanager.[1].transportzone.[1]
    CreateTN-1-3_ETH-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportnode:
            '[1-3]':
                host_switches:
                -   host_switch_profile_ids:
                    -   key: UplinkHostSwitchProfile
                        value: nsxmanager.[1].uplinkprofile.[1]->id
                    switch_name: nsxvswitch
                    uplinks:
                    -   adapter_name: uplink1
                        device_name: eth1
                node_id: nsxmanager.[1].hostnode.[x=transportnode_index]->id
                transport_zone_endpoint:
                -   transport_zone_id: nsxmanager.[1].transportzone.[1]
    CreateTZ-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportzone:
            '[1]':
                name: transportzone1
                summary: transportzone1 (created through automation)
                switch_name: nsxvswitch
                transport_zone_type: OVERLAY
    CreateUPROF-1_MTU-1600_ACTIVE-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        uplinkprofile:
            '[1]':
                mtu: 1600
                resource_type: UplinkHostSwitchProfile
                teaming:
                    active:
                    -   adapter_name: uplink1
                        adapter_type: PNIC
                    policy: FAILOVER_ORDER
                vlan: 0
    DeleteLS-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalswitch: nsxmanager.[1].logicalswitch.[1]
    DeleteLSP-1-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[1-3]
        query_params:
            detach: 'true'
    DeleteTN-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportnode: nsxmanager.[1].transportnode.[1]
    DeleteTN-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportnode: nsxmanager.[1].transportnode.[2]
    DeleteTN-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportnode: nsxmanager.[1].transportnode.[3]
    DeleteTZ-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportzone: nsxmanager.[1].transportzone.[1]
    DeleteUPROF-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deleteuplinkprofile: nsxmanager.[1].uplinkprofile.[1]
    DeleteVif-1_VM-1:
        TestVM: vm.[1]
        Type: VM
        deletevif: vm.[x=vm_index].vif.[1]
    DeleteVif-1_VM-2:
        TestVM: vm.[2]
        Type: VM
        deletevif: vm.[x=vm_index].vif.[1]
    DeleteVif-1_VM-3:
        TestVM: vm.[3]
        Type: VM
        deletevif: vm.[x=vm_index].vif.[1]
    DiscoverHostNode1FromKVM1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        hostnode:
            '[1]':
                discover: 'true'
                ip_addresses: kvm.[1]
    DiscoverHostNode2FromKVM2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        hostnode:
            '[2]':
                discover: 'true'
                ip_addresses: kvm.[2]
    DiscoverHostNode3FromKVM3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        hostnode:
            '[3]':
                discover: 'true'
                ip_addresses: kvm.[3]
    DiscoverKVM1Vtep1FromDevice-nsx-vtep0.0:
        Testhost: kvm.[1]
        Type: Host
        vtep:
            '[1]':
                discover: 'true'
                execution_type: cli
                name: nsx-vtep0.0
    DiscoverKVM2Vtep1FromDevice-nsx-vtep0.0:
        Testhost: kvm.[2]
        Type: Host
        vtep:
            '[1]':
                discover: 'true'
                execution_type: cli
                name: nsx-vtep0.0
    DiscoverKVM3Vtep1FromDevice-nsx-vtep0.0:
        Testhost: kvm.[3]
        Type: Host
        vtep:
            '[1]':
                discover: 'true'
                execution_type: cli
                name: nsx-vtep0.0
    JoinMPClusterNode-1_NSXM-1_ToNSXM-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        clusternode:
            '[1]':
                mgr_role_config:
                    manager_ip: nsxmanager.[1]
                    manager_thumbprint: nsxmanager.[1]
                    node_type: AddManagementNodeSpec
                    password: default
                    username: admin
    JoinMPClusterNode-2_NSXM-2_ToNSXM-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        clusternode:
            '[2]':
                mgr_role_config:
                    manager_ip: nsxmanager.[2]
                    manager_thumbprint: nsxmanager.[2]
                    node_type: AddManagementNodeSpec
                    password: default
                    username: admin
    JoinMPClusterNode-3_NSXM-3_ToNSXM-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        clusternode:
            '[3]':
                mgr_role_config:
                    manager_ip: nsxmanager.[3]
                    manager_thumbprint: nsxmanager.[3]
                    node_type: AddManagementNodeSpec
                    password: default
                    username: admin
    MapNSXManager-1_CLUSTER-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        cluster:
            '[1]':
                id_: 1
                map_object: true
    MapNSXManager-2_CLUSTER-1:
        TestNSX: nsxmanager.[2]
        Type: NSX
        cluster:
            '[1]':
                id_: 1
                map_object: true
    MapNSXManager-3_CLUSTER-1:
        TestNSX: nsxmanager.[3]
        Type: NSX
        cluster:
            '[1]':
                id_: 1
                map_object: true
    PingFromVM1Vif1ToVM2Vif1:
        SupportAdapter: vm.[2].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0
    PingFromVM1Vif1ToVM3Vif1:
        SupportAdapter: vm.[3].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0
    PingFromVM2Vif1ToVM3Vif1:
        SupportAdapter: vm.[3].vif.[1]
        TestAdapter: vm.[2].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0
    RemoveManagerOnKVM-1:
        TestHost: kvm.[1]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    RemoveManagerOnKVM-2:
        TestHost: kvm.[2]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    RemoveManagerOnKVM-3:
        TestHost: kvm.[3]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    SetDeviceStatus-Down_KVM-1_PIF-2:
        TestAdapter: kvm.[1].pif.[2]
        Type: NetAdapter
        devicestatus: Down
    SetDeviceStatus-Down_KVM-1_VTEP-1:
        TestAdapter: kvm.[1].vtep.[1]
        Type: NetAdapter
        devicestatus: Down
    SetDeviceStatus-Down_KVM-2_VTEP-1:
        TestAdapter: None
        Type: Adapter
        devicestatus: <yamlobjects.StrParam object at 0xb6b1214c>
    SetDeviceStatus-Down_KVM-3_VTEP-1:
        TestAdapter: None
        Type: Adapter
        devicestatus: <yamlobjects.StrParam object at 0xb6b12e6c>
    SetDeviceStatus-Up_KVM-1_PIF-2:
        TestAdapter: kvm.[1].pif.[2]
        Type: NetAdapter
        devicestatus: Up
    SetDeviceStatus-Up_KVM-1_VTEP-1:
        TestAdapter: kvm.[1].vtep.[1]
        Type: NetAdapter
        devicestatus: Up
    SetDeviceStatus-Up_KVM-2_VTEP-1:
        TestAdapter: None
        Type: Adapter
        devicestatus: <yamlobjects.StrParam object at 0xb6b1210c>
    SetDeviceStatus-Up_KVM-3_VTEP-1:
        TestAdapter: None
        Type: Adapter
        devicestatus: <yamlobjects.StrParam object at 0xb6b1250c>
    SetManagerOnKVM-1-2:
        TestHost: kvm.[1-2]
        Type: Host
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    SetManagerOnKVM-1-3:
        TestHost: kvm.[1-3]
        Type: Host
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    SetManagerOnNSXC-1:
        TestController: nsxcontroller.[1]
        Type: Controller
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    SetManagerOnNSXC-2:
        TestController: nsxcontroller.[2]
        Type: Controller
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    SetManagerOnNSXC-3:
        TestController: nsxcontroller.[3]
        Type: Controller
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]
    UndiscoverHostNode-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletehostnode: nsxmanager.[1].hostnode.[1]
        skipmethod: 1
    UndiscoverHostNode-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletehostnode: nsxmanager.[1].hostnode.[2]
        skipmethod: 1
    UndiscoverHostNode-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletehostnode: nsxmanager.[1].hostnode.[3]
        skipmethod: 1
    VerifyMPClusterStatus-1_NSXM-1:
        TestCluster: nsxmanager.[1].cluster.[1]
        Type: Cluster
        cluster_status:
            control_cluster_status:
                status[?]equal_to: STABLE
            mgmt_cluster_status:
                status[?]equal_to: STABLE
    VerifyMPClusterStatus-1_NSXM-2:
        TestCluster: nsxmanager.[2].cluster.[1]
        Type: Cluster
        cluster_status:
            control_cluster_status:
                status[?]equal_to: STABLE
            mgmt_cluster_status:
                status[?]equal_to: STABLE
    VerifyMPClusterStatus-1_NSXM-3:
        TestCluster: nsxmanager.[3].cluster.[1]
        Type: Cluster
        cluster_status:
            control_cluster_status:
                status[?]equal_to: STABLE
            mgmt_cluster_status:
                status[?]equal_to: STABLE
    __AUTOGENERATED__: true
