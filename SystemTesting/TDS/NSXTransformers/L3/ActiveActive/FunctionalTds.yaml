{% include 'TDS/NSXTransformers/L3/ActiveActive/TestbedSpec.yaml' %}
{% include 'TDS/NSXTransformers/L3/ActiveActive/NewCommonWorkloads.yaml' %}
{% include 'TDS/NSXTransformers/L3/ActiveActive/TopoL3-3Hosts-4Edges-1RouterVM.yaml' %}
{% include 'TDS/NSXTransformers/L3/ActiveActive/TopoL3-3Hosts-4Edges-1RouterVMwith4Ifaces.yaml' %}
{% include 'TDS/NSXTransformers/Common/Topo_Clusters.yaml' %}

L3ECMPDRRIB:
    Product: 'NSXTransformers'
    Category: 'L3'
    Component: 'ActiveActive'
    TestName: 'L3ECMPDRRIB'
    Version: 2
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'functional'
    QCPath:  ''
    TestbedSpec: *L3_ESX_TESTBEDSPEC_03
    Summary: 'Verify that a static default route pointing to each SRs is added in
    the RIB of the DR for PLR when the PLR uplinks are in active-active mode'
    Procedure:
    ExpectedResult: 'PASS'
    #Duration: ''
    Tags: ''
    AutomationLevel: 'Automated'
    Developer: 'dbadiani'
    FullyAutomatable: 'Y'
    Status: 'Draft'
    PartnerFacing: 'N'

    WORKLOADS:
        <<: *TopoL3-3Hosts-4Edges-1RouterVM4Ifaces
        <<: *Topo_1MP_3CCP
        <<: *NEWCOMMONWORKLOADS
        Sequence:
            - - 'ClusterSetup'
            - - 'ClusterVerification'
            - - 'L2Setup--ESX'
            - - 'VerifyL2Setup--ESX'
            - - 'L3Setup'
            - - 'VerifyPLRDRRIB'
        ExitSequence:
            - - 'L3Cleanup'
            - - 'L2Cleanup--ESX'
            - - 'ClusterCleanup'

EgressECMPPlrOnly:
    Product: 'NSXTransformers'
    Category: 'L3'
    Component: 'ActiveActive'
    TestName: 'EgressECMPPlrOnly'
    Version: 2
    Priority: 'P0'
    Testcaselevel: 'Functional'
    Testcasetype: 'functional'
    QCPath:  'ESX'
    TestbedSpec: *L3_ESX_TESTBEDSPEC_03
    Summary: 'Test Egress ECMP for north-south traffic when a PLR has 4 uplinks
              in active-active mode. (Single Tier topology)'
    Procedure: 'TBD'
    ExpectedResult: 'PASS'
    Tags: ''
    AutomationLevel: 'Automated'
    Developer: 'dbadiani'
    FullyAutomatable: 'Y'
    Status: 'Draft'
    PartnerFacing: 'N'

    WORKLOADS:
        <<: *TopoL3-3Hosts-4Edges-1RouterVM4Ifaces
        <<: *Topo_1MP_3CCP
        <<: *NEWCOMMONWORKLOADS
        Sequence:
            - - 'ClusterSetup'
            - - 'ClusterVerification'
            - - 'L2Setup--ESX'
            - - 'VerifyL2Setup--ESX'
            - - 'L3Setup'
            - - 'VMSetup--ESX'
            - - 'RouterVMPrepare'
            # TODO(dbadiani): Add Datapath verifications like checking
            # route table, arp table etc.
            - - 'VerifyECMPPlrOnly'
        ExitSequence:
            - - 'VMCleanup--ESX'
            - - 'L3Cleanup'
            - - 'L2Cleanup--ESX'
            - - 'ClusterCleanup'

EgressECMPPlrTlr:
    Product: 'NSXTransformers'
    Category: 'L3'
    Component: 'ActiveActive'
    TestName: 'EgressECMPPlrTlr'
    Version: 2
    Priority: 'P0'
    Testcaselevel: 'Functional'
    Testcasetype: 'functional'
    QCPath:  'ESX'
    TestbedSpec: *L3_ESX_TESTBEDSPEC_03
    Summary: 'Test Egress ECMP for north-south traffic when a PLR has 4 uplinks
              in active-active mode in a 2-Tier topology.'
    Procedure: 'TBD'
    ExpectedResult: 'PASS'
    Tags: ''
    AutomationLevel: 'Automated'
    Developer: 'dbadiani'
    FullyAutomatable: 'Y'
    Status: 'Draft'
    PartnerFacing: 'N'

    WORKLOADS:
        <<: *TopoL3-3Hosts-4Edges-1RouterVM4Ifaces
        <<: *Topo_1MP_3CCP
        <<: *NEWCOMMONWORKLOADS
        Sequence:
            - - 'ClusterSetup'
            - - 'ClusterVerification'
            - - 'L2Setup--ESX'
            - - 'VerifyL2Setup--ESX'
            - - 'L3Setup'
            - - 'VMSetup--ESX'
            - - 'RouterVMPrepare'
            # TODO(dbadiani): Add Datapath verifications like checking
            # route table, arp table etc.
            - - 'VerifyECMPPlrTlr'
        ExitSequence:
            - - 'VMCleanup--ESX'
            - - 'L3Cleanup'
            - - 'L2Cleanup--ESX'
            - - 'ClusterCleanup'

IngressECMP:
    Product: 'NSXTransformers'
    Category: 'L3'
    Component: 'ActiveActive'
    TestName: 'IngressECMP'
    Version: 2
    TCMSId: ''
    Priority: 'P2'
    Testcaselevel: 'Functional'
    Testcasetype: 'functional'
    QCPath:  ''
    TestbedSpec: *L3_ESX_TESTBEDSPEC_03
    Summary: 'Test Ingress ECMP for north-south traffic when a PLR has 4 uplinks
              in active-active mode'
    Procedure:
    ExpectedResult: 'PASS'
    #Duration: ''
    Tags: 'nsx,avalanche'
    AutomationLevel: 'Automated'
    Developer: 'dbadiani'
    FullyAutomatable: 'Y'
    Status: 'Draft'
    PartnerFacing: 'N'

    WORKLOADS:
        <<: *TopoL3-3Hosts-4Edges-1RouterVM4Ifaces
        <<: *Topo_1MP_3CCP
        <<: *NEWCOMMONWORKLOADS
        Sequence:
            - - 'ClusterSetup'
            - - 'ClusterVerification'
            - - 'L2Setup--ESX'
            - - 'VerifyL2Setup--ESX'
            - - 'L3Setup'
            - - 'VMSetup--ESX'
            - - 'RouterVMPrepare'
            # TODO(dbadiani): Add Datapath verifications like checking
            # route table, arp table etc.
            #- - 'VerifyIngressECMP'
        ExitSequence:
            - - 'VMCleanup--ESX'
            - - 'L3Cleanup'
            - - 'L2Cleanup--ESX'
            - - 'ClusterCleanup'

ECMPEdgeVMCrash:
    Product: 'NSXTransformers'
    Component: 'ActiveActive'
    Category: 'L3'
    TestName: 'ECMPEdgeVMCrash'
    Version: 2
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'functional'
    QCPath:  ''
    TestbedSpec: *L3_ESX_TESTBEDSPEC_03
    Summary: 'Verify ECMP behavior when one of the edge node crashes.'
    Procedure: '- simluate edge vm crash using power off / suspend call using
    vim cmd.
    - check that the a GARP is sent by one of the active SRs to take over the
    failed uplink SR.
    - check that no failure is signalled to physical network.'
    ExpectedResult: 'PASS'
    #Duration: ''
    Tags: 'nsx,l3,ecmp,completetunnelfailure'
    AutomationLevel: 'Automated'
    Developer: 'dbadiani'
    FullyAutomatable: 'Y'
    Status: 'Draft'
    PartnerFacing: 'N'

    WORKLOADS:
        <<: *TopoL3-3Hosts-4Edges-1RouterVM4Ifaces
        <<: *Topo_1MP_3CCP
        <<: *NEWCOMMONWORKLOADS
        Sequence:
            - - 'ClusterSetup'
            - - 'ClusterVerification'
            - - 'L2Setup--ESX'
            - - 'VerifyL2Setup--ESX'
            - - 'L3Setup'
            - - 'VMSetup--ESX'
            - - 'RouterVMPrepare'
            # TODO(dbadiani): Add Datapath verifications like checking
            # route table, arp table etc.
            # TODO(dbadiani): Add GARP verification in this test case.
            - - 'GetNextHopVM3VM2--ESX'
            - - 'ReadNextHopEdgeVM'
            - - 'ReadStaticRouteForVM2OnEdge'
            - - 'StartTSharkVM1'
              - 'SendBackgroundTraffic'
              - 'CrashEdgeVM'
        ExitSequence:
            - - 'RestoreEdgeVM'
            - - 'VMCleanup--ESX'
            - - 'L3Cleanup'
            - - 'L2Cleanup--ESX'
            - - 'ClusterCleanup'

ECMPTunnelFailure:
    Product: 'NSXTransformers'
    Category: 'L3'
    Component: 'ActiveActive'
    TestName: 'ECMPTunnelFailure'
    Version: 2
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'functional'
    QCPath:  ''
    TestbedSpec: *L3_ESX_TESTBEDSPEC_03_ROUTER_VM
    Summary: |
        - Start traffic between two VMs one north of LR and another south of DR.
          Now figure out which SR the VDR is using to forward the traffic by running
          'net-vdr --route -o resolve -E <src VMs ip> -i <dest VMs ip> <dr uuid>'.
          Let's say this IP corresponds to SR-1.
        - Now kill SR-1. If the failover has happened correctly, DR will have the
          beighbor entry for SR-1 pointing to another SR's mac.
          Pings will continue to work.
    Procedure:
    ExpectedResult: 'PASS'
    #Duration: ''
    Tags: 'nsx,l3,ecmp,partialtunnelfailure'
    AutomationLevel: 'Automated'
    Developer: 'sqian'
    FullyAutomatable: 'Y'
    Status: 'Draft'
    PartnerFacing: 'N'

    WORKLOADS:
        <<: *TopoL3-3Hosts-4Edges-1RouterVM
        <<: *Topo_1MP_3CCP
        <<: *NEWCOMMONWORKLOADS
        Sequence:
            - - ClusterSetup
            - - ClusterVerification
            - - L2Setup--ESX
            - - L3Setup
            - - VMSetup--ESX
            - - RouterVMPrepare
            - - TrafficForInternalVmAndExternalVm--ESX
            - - GetNextHopVM3VM2--ESX
            - - ReadNextHopEdgeVM
            - - ReadNextHopEdgeVMSouthIpBfdIp
            - - PowerOffNextHopEdgeVMWithDelay
              - PingForGarpCapture
            - - ReadNextHopEdgeVM
            - - CheckIPMigrationOnSR2
            - - TrafficForInternalVmAndExternalVm--ESX
            - - PowerOnAllEdgeVMs
        ExitSequence:
            - - VMCleanup--ESX
            - - L3Cleanup
            - - L2Cleanup--ESX

ECMPNoHeartbeat:
   Product: 'NSXTransformers'
   Component: 'ActiveActive'
   Category: 'L3'
   TestName: 'ECMPNoHeartbeat'
   Version: 2
   TCMSId: ''
   Priority: 'P1'
   PMT: ''
   Testcaselevel: 'Functional'
   Testcasetype: 'functional'
   QCPath:  ''
   TestbedSpec: *L3_ESX_TESTBEDSPEC_03_ROUTER_VM
   Summary: |
       Verify ECMP behavior when the heartbeat among edge VMs goes down.
   Procedure: |
       - check that failover is triggered amongst SRs and ranking mechanism
         is used to takeover IP address only when all links between SRs are
         down. This includes management as well.'
   ExpectedResult: 'PASS'
   #Duration: ''
   Tags: 'nsx,l3,ecmp,partialtunnelfailure'
   AutomationLevel: 'Automated'
   Developer: 'sqian'
   FullyAutomatable: 'Y'
   Status: 'Draft'
   PartnerFacing: 'N'

   WORKLOADS:
       <<: *TopoL3-3Hosts-4Edges-1RouterVM
       <<: *Topo_1MP_3CCP
       <<: *NEWCOMMONWORKLOADS
       Sequence:
           - - ClusterSetup
           - - ClusterVerification
           - - L2Setup--ESX
           - - L3Setup
           - - VMSetup--ESX
           - - RouterVMPrepare
           - - TrafficForInternalVmAndExternalVm--ESX
           - - GetNextHopVM3VM2--ESX
           - - ReadNextHopEdgeVM
           # only disconnect vnic3, verify it's not
           # enough to trigger failover
           - - DiscoverNextHopEdgeVnics
           - - DisconnectNextHopEdgeVnic3
           - - SleepWorkload_180s--ESX
           - - FailTrafficVm3toVm2--ESX
           # disconnect vnic1(mgmt) also, failover
           # should happend
           - - DisconnectNextHopEdgeVnic1
           - - SleepWorkload_180s--ESX
           - - TrafficForInternalVmAndExternalVm--ESX
           # reconnect vnic1 & vnic3, traffic should
           # still work after failover back.
           - - ConnectNextHopEdgeVnic3
           - - ConnectNextHopEdgeVnic1
           - - SleepWorkload_180s--ESX
           - - TrafficForInternalVmAndExternalVm--ESX
       ExitSequence:
           - - VMCleanup--ESX
           - - L3Cleanup
           - - L2Cleanup--ESX

ECMPMaxUplinks:
   Product: 'NSXTransformers'
   Component: 'ActiveActive'
   Category: 'L3'
   TestName: 'ECMPMaxUplinks'
   Version: 2
   TCMSId: ''
   Priority: 'P1'
   PMT: ''
   Testcaselevel: 'Functional'
   Testcasetype: 'limits'
   QCPath:  ''
   TestbedSpec: *L3_ESX_TESTBEDSPEC_03
   Summary: 'Verify ECMP behavior when the PLR is configured with 8 uplinks in
             an edge cluster with 8 edge nodes.'
   Procedure: '- Send continuous south-north traffic from multiple VMs and
                 ensure that the traffic is load balanced across all the 8 uplinks.
               - Ensure that the north-south traffic is load balanced as well
                 across 8 uplinks by the physical routers with BGP enabled.'
   ExpectedResult: 'PASS'
   #Duration: ''
   Tags: 'nsx,l3,ecmp,dpdk,'
   AutomationLevel: 'Automated'
   Developer: 'dbadiani'
   FullyAutomatable: 'Y'
   Status: 'Draft'
   PartnerFacing: 'N'

   WORKLOADS:
       <<: *TopoL3-3Hosts-4Edges-1RouterVM4Ifaces
       <<: *Topo_1MP_3CCP
       <<: *NEWCOMMONWORKLOADS
       Sequence:
           - - 'ClusterSetup'
           - - 'ClusterVerification'
           - - 'L2SetupMaxUplinks--ESX'
           - - 'VerifyL2Setup--ESX'
           - - 'L3SetupMaxUplinks'
           - - 'VMSetupMaxUplinks--ESX'
           - - 'RouterVMPrepare'
           - - 'VerifyECMPMaxUplinks'
       ExitSequence:
           - - 'VMCleanupMaxUplinks--ESX'
           - - 'L3CleanupMaxUplinks'
           - - 'L2CleanupMaxUplinks--ESX'

L3ECMPStress:
   Product: 'NSXTransformers'
   Component: 'ActiveActive'
   Category: 'L3'
   TestName: 'L3ECMPStress'
   Version: 2
   TCMSId: ''
   Priority: 'P2'
   PMT: ''
   Testcaselevel: 'Functional'
   Testcasetype: 'stress'
   QCPath:  ''
   TestbedSpec: 'Topology 3 (with 4 additional edge nodes)'
   Summary: 'Verify ECMP behavior when the PLR is configured with 8 uplinks in
             an edge cluster with 8 edge nodes and one of the BGP session dies
             and resurrects.'
   Procedure: '- Send continuous south-north traffic from multiple VMs and
                 ensure that the traffic is load balanced across all uplinks.
               - Ensure that the north-south traffic is load balanced as well
                 across all uplinks by the physical routers with BGP enabled.
               - Check that failover is triggered when the session dies and the
                 traffic is load balanced across the remaining 7 edge nodes.
               - Post resurrection, the traffic should be load balanced again
                 across 8 uplinks.'
   ExpectedResult: 'PASS'
   #Duration: ''
   Tags: 'nsx,l3,ecmp,'
   AutomationLevel: 'Automated'
   Developer: 'dbadiani'
   FullyAutomatable: 'Y'
   Status: 'Draft'
   PartnerFacing: 'N'

ECMPPhysicalConnectivityLoss:
   Product: 'NSXTransformers'
   Component: 'ActiveActive'
   Category: 'L3'
   TestName: 'ECMPPhysicalConnectivityLoss'
   Version: 2
   TCMSId: ''
   Priority: 'P2'
   PMT: ''
   Testcaselevel: 'Functional'
   Testcasetype: 'functional'
   QCPath:  ''
   TestbedSpec: Topology3
   Summary: 'Verify ECMP behavior when the edge VM loses connectivity to a
             physical router'
   Procedure: '- check how this failover will be triggered (using BGP or just
   link down)'
   ExpectedResult: 'PASS'
   #Duration: ''
   Tags: 'nsx,l3'
   AutomationLevel: 'Automated'
   Developer: 'dbadiani'
   FullyAutomatable: 'Y'
   Status: 'Draft'
   PartnerFacing: 'N'

ECMPLAGFailurePhysical:
   Product: 'NSXTransformers'
   Component: 'ActiveActive'
   Category: 'L3'
   TestName: 'ECMPLAGFailurePhysical'
   Version: 2
   TCMSId: ''
   Priority: 'P2'
   PMT: ''
   Testcaselevel: 'Functional'
   Testcasetype: 'functional'
   QCPath:  ''
   TestbedSpec: Topology3
   Summary: 'Verify ECMP behavior when the edge node loses the whole LAG used to
             reach the physical routers.'
   Procedure: ''
   ExpectedResult: 'PASS'
   #Duration: ''
   Tags: 'nsx,l3,ecmp,dpdk,lagdown'
   AutomationLevel: 'Automated'
   Developer: 'dbadiani'
   FullyAutomatable: 'Y'
   Status: 'Draft'
   PartnerFacing: 'N'

ECMPLAGFailureTunnel:
   Product: 'NSXTransformers'
   Component: 'ActiveActive'
   Category: 'L3'
   TestName: 'ECMPLAGFailureTunnel'
   Version: 2
   TCMSId: ''
   Priority: 'P2'
   PMT: ''
   Testcaselevel: 'Functional'
   Testcasetype: 'functional'
   QCPath:  ''
   TestbedSpec: Topology3
   Summary: 'Verify ECMP behavior when the edge node loses the LAG used to
             reach tunnel traffic.'
   Procedure: '- check for traffic blackholing in this case.'
   ExpectedResult: 'PASS'
   #Duration: ''
   Tags: 'nsx,l3,ecmp,dpdk,lagdown'
   AutomationLevel: 'Automated'
   Developer: 'dbadiani'
   FullyAutomatable: 'Y'
   Status: 'Draft'
   PartnerFacing: 'N'
