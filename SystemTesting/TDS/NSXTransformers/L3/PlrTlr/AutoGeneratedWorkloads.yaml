Auto_Generated_Workloads: &AutoGeneratedWorkloads
    autogenerated: true

    Add100RouteOnVM1Vif1viaLRP1:
        TestAdapter: vm.[1].vif.[1]
        Type: NetAdapter
        destination: 100.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[1]->ip
        netmask: 255.0.0.0
        route: add

    Add192RouteOnVM100Vnic1viaULRP1:
        TestAdapter: vm.[100].vnic.[1]
        Type: NetAdapter
        destination: 192.0.0.0
        gateway: nsxmanager.[1].logicalrouteruplinkport.[1]->ip
        netmask: 255.0.0.0
        route: add

    Add192RouteOnVM1Vif1viaLRP1:
        TestAdapter: vm.[1].vif.[1]
        Type: NetAdapter
        destination: 192.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[1]->ip
        netmask: 255.0.0.0
        route: add

    Add192RouteOnVM1Vnic1viaLRP1:
        TestAdapter: vm.[1].vnic.[1]
        Type: NetAdapter
        destination: 192.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[1]->ip
        netmask: 255.0.0.0
        route: add

    Add192RouteOnVM2Vif1viaLRP2:
        TestAdapter: vm.[2].vif.[1]
        Type: NetAdapter
        destination: 192.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[2]->ip
        netmask: 255.0.0.0
        route: add

    Add192RouteOnVM2Vnic1viaLRP2:
        TestAdapter: vm.[2].vnic.[1]
        Type: NetAdapter
        destination: 192.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[2]->ip
        netmask: 255.0.0.0
        route: add

    Add192RouteOnVM3Vif1viaLRP3:
        TestAdapter: vm.[3].vif.[1]
        Type: NetAdapter
        destination: 192.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[3]->ip
        netmask: 255.0.0.0
        route: add

    Add192RouteOnVM3Vnic1viaLRP3:
        TestAdapter: vm.[3].vnic.[1]
        Type: NetAdapter
        destination: 192.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[3]->ip
        netmask: 255.0.0.0
        route: add

    Add192RouteOnVM4Vif1viaLRP4:
        TestAdapter: vm.[4].vif.[1]
        Type: NetAdapter
        destination: 192.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[4]->ip
        netmask: 255.0.0.0
        route: add

    Add192RouteOnVM4Vnic1viaLRP4:
        TestAdapter: vm.[4].vnic.[1]
        Type: NetAdapter
        destination: 192.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[4]->ip
        netmask: 255.0.0.0
        route: add

    AddVM100Vnic1ToLS100:
        TestVM: vm.[100]
        Type: VM
        vnic:
            '[1]':
                connected: 1
                driver: e1000
                portgroup: nsxmanager.[1].logicalswitch.[100]
                startconnected: 1

    AddVM1Vif1ToKVM2Bridge1:
        TestVM: vm.[1]
        Type: VM
        vif:
            '[1]':
                backing: kvm.[2].bridge.[1]

    AddVM2Vif1ToKVM2Bridge1:
        TestVM: vm.[2]
        Type: VM
        vif:
            '[1]':
                backing: kvm.[2].bridge.[1]

    AddVM3Vif1ToKVM2Bridge1:
        TestVM: vm.[3]
        Type: VM
        vif:
            '[1]':
                backing: kvm.[2].bridge.[1]

    AddVM4Vif1ToKVM3Bridge1:
        TestVM: vm.[4]
        Type: VM
        vif:
            '[1]':
                backing: kvm.[3].bridge.[1]

    AddVM5Vif1ToKVM3Bridge1:
        TestVM: vm.[5]
        Type: VM
        vif:
            '[1]':
                backing: kvm.[3].bridge.[1]

    ConfigureVM100Vnic1IP-192.200.1.10:
        TestAdapter: vm.[100].vnic.[1]
        Type: NetAdapter
        ipv4: 192.200.1.10
        netmask: 255.255.255.0

    ConfigureVM1Vif1IP-192.1.1.10:
        TestAdapter: vm.[1].vif.[1]
        Type: NetAdapter
        ipv4: 192.1.1.10
        netmask: 255.255.255.0

    ConfigureVM1Vnic1IP-192.1.1.10:
        TestAdapter: vm.[1].vnic.[1]
        Type: NetAdapter
        ipv4: 192.1.1.10
        netmask: 255.255.255.0

    ConfigureVM2Vif1IP-192.1.2.10:
        TestAdapter: vm.[2].vif.[1]
        Type: NetAdapter
        ipv4: 192.1.2.10
        netmask: 255.255.255.0

    ConfigureVM2Vnic1IP-192.1.2.10:
        TestAdapter: vm.[2].vnic.[1]
        Type: NetAdapter
        ipv4: 192.1.2.10
        netmask: 255.255.255.0

    ConfigureVM3Vif1IP-192.2.1.10:
        TestAdapter: vm.[3].vif.[1]
        Type: NetAdapter
        ipv4: 192.2.1.10
        netmask: 255.255.255.0

    ConfigureVM3Vnic1IP-192.2.1.10:
        TestAdapter: vm.[3].vnic.[1]
        Type: NetAdapter
        ipv4: 192.2.1.10
        netmask: 255.255.255.0

    ConfigureVM4Vif1IP-192.2.2.10:
        TestAdapter: vm.[4].vif.[1]
        Type: NetAdapter
        ipv4: 192.2.2.10
        netmask: 255.255.255.0

    ConfigureVM4Vnic1IP-192.2.2.10:
        TestAdapter: vm.[4].vnic.[1]
        Type: NetAdapter
        ipv4: 192.2.2.10
        netmask: 255.255.255.0

    ConfigureVM5Vif1IP-30.1.1.10:
        TestAdapter: vm.[5].vif.[1]
        Type: NetAdapter
        ipv4: 30.1.1.10
        netmask: 255.255.255.0

    CreateFPROF-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        fabricprofile:
            '[1]':
                declare_dead_timer: 60000
                hello_interval: 20000
                name: Fabric Profile - 1
                resource_type: FabricProfileClusterKeepAlive
                summary: Fabric Profile - 1 for PLR uplink edge cluster

    CreateLP11OnLS1ForVM1Vif1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[11]':
                admin_state: UP
                attachment:
                    attachment_type: VIF
                    id_: vm.[1].vif.[1]->uuid
                switch_id: nsxmanager.[1].logicalswitch.[1]->id

    CreateLP12OnLS2ForVM2Vif1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[12]':
                admin_state: UP
                attachment:
                    attachment_type: VIF
                    id_: vm.[2].vif.[1]->uuid
                switch_id: nsxmanager.[1].logicalswitch.[2]->id

    CreateLP13OnLS3ForVM3Vif1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[13]':
                admin_state: UP
                attachment:
                    attachment_type: VIF
                    id_: vm.[3].vif.[1]->uuid
                switch_id: nsxmanager.[1].logicalswitch.[3]->id

    CreateLP14OnLS4ForVM4Vif1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[14]':
                admin_state: UP
                attachment:
                    attachment_type: VIF
                    id_: vm.[4].vif.[1]->uuid
                switch_id: nsxmanager.[1].logicalswitch.[4]->id

    CreateLP15OnLS5ForVM5Vif1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[15]':
                admin_state: UP
                attachment:
                    attachment_type: VIF
                    id_: vm.[5].vif.[1]->uuid
                switch_id: nsxmanager.[1].logicalswitch.[5]->id

    CreateLR-2_TIER-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouter:
            '[2]':
                name: lrouter-2
                router_type: TIER1
                summary: LRouter2 created through automation

    CreateLR-3_TIER-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouter:
            '[3]':
                name: lrouter-3
                router_type: TIER1
                summary: LRouter3 created through automation

    CreateLR-4_TIER-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouter:
            '[4]':
                name: lrouter-4
                router_type: TIER1
                summary: LRouter4 created through automation

    CreateLRP-1_LR-2_IP-192.1.1.1_LSP-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterport:
            '[1]':
                linked_switch_port_id: nsxmanager.[1].logicalport.[1]->id
                logical_router_id: nsxmanager.[1].logicalrouter.[2]
                name: lrouterport-1
                resource_type: LogicalRouterDownLinkPort
                subnets:
                -   ip_addresses:
                    - 192.1.1.1
                    prefixlen: 24
                summary: LRPort1 created through automation

    CreateLRP-2_LR-2_IP-192.1.2.1_LSP-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterport:
            '[2]':
                linked_switch_port_id: nsxmanager.[1].logicalport.[2]->id
                logical_router_id: nsxmanager.[1].logicalrouter.[2]
                name: lrouterport-2
                resource_type: LogicalRouterDownLinkPort
                subnets:
                -   ip_addresses:
                    - 192.1.2.1
                    prefixlen: 24
                summary: LRPort2 created through automation

    CreateLRP-3_LR-3_IP-192.2.1.1_LSP-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterport:
            '[3]':
                linked_switch_port_id: nsxmanager.[1].logicalport.[3]->id
                logical_router_id: nsxmanager.[1].logicalrouter.[3]
                name: lrouterport-3
                resource_type: LogicalRouterDownLinkPort
                subnets:
                -   ip_addresses:
                    - 192.2.1.1
                    prefixlen: 24
                summary: LRPort3 created through automation

    CreateLRP-4_LR-3_IP-192.2.2.1_LSP-4:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterport:
            '[4]':
                linked_switch_port_id: nsxmanager.[1].logicalport.[4]->id
                logical_router_id: nsxmanager.[1].logicalrouter.[3]
                name: lrouterport-4
                resource_type: LogicalRouterDownLinkPort
                subnets:
                -   ip_addresses:
                    - 192.2.2.1
                    prefixlen: 24
                summary: LRPort4 created through automation

    CreateLRP-5_LR-4_IP-192.3.1.1_LSP-5:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterport:
            '[5]':
                linked_switch_port_id: nsxmanager.[1].logicalport.[5]->id
                logical_router_id: nsxmanager.[1].logicalrouter.[4]
                name: lrouterport-5
                resource_type: LogicalRouterDownLinkPort
                subnets:
                -   ip_addresses:
                    - 192.3.1.1
                    prefixlen: 24
                summary: LRPort5 created through automation

    CreateLS-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalswitch:
            '[1]':
                admin_state: UP
                name: lswitch1
                replication_mode: MTEP
                summary: lswitch1 (created through automation)
                transport_zone_id: nsxmanager.[1].transportzone.[1]

    CreateLS-100:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalswitch:
            '[100]':
                admin_state: UP
                name: lswitch100
                replication_mode: MTEP
                summary: lswitch100 (created through automation)
                transport_zone_id: nsxmanager.[1].transportzone.[1]

    CreateLS-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalswitch:
            '[2]':
                admin_state: UP
                name: lswitch2
                replication_mode: MTEP
                summary: lswitch2 (created through automation)
                transport_zone_id: nsxmanager.[1].transportzone.[1]

    CreateLS-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalswitch:
            '[3]':
                admin_state: UP
                name: lswitch3
                replication_mode: MTEP
                summary: lswitch3 (created through automation)
                transport_zone_id: nsxmanager.[1].transportzone.[1]

    CreateLS-4:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalswitch:
            '[4]':
                admin_state: UP
                name: lswitch4
                replication_mode: MTEP
                summary: lswitch4 (created through automation)
                transport_zone_id: nsxmanager.[1].transportzone.[1]

    CreateLS-5:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalswitch:
            '[5]':
                admin_state: UP
                name: lswitch5
                replication_mode: MTEP
                summary: lswitch5 (created through automation)
                transport_zone_id: nsxmanager.[1].transportzone.[1]

    CreateLSP-100_LS-100:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[100]':
                admin_state: UP
                switch_id: nsxmanager.[1].logicalswitch.[100]->id

    CreateLSP-16_LS-5:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[16]':
                admin_state: UP
                switch_id: nsxmanager.[1].logicalswitch.[5]->id

    CreateLSP-1_LS-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[1]':
                admin_state: UP
                switch_id: nsxmanager.[1].logicalswitch.[1]->id

    CreateLSP-2_LS-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[2]':
                admin_state: UP
                switch_id: nsxmanager.[1].logicalswitch.[2]->id

    CreateLSP-3_LS-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[3]':
                admin_state: UP
                switch_id: nsxmanager.[1].logicalswitch.[3]->id

    CreateLSP-4_LS-4:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[4]':
                admin_state: UP
                switch_id: nsxmanager.[1].logicalswitch.[4]->id

    CreatePLR-1_EDGECLUSTER-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouter:
            '[1]':
                cluster_id: nsxmanager.[1].edgecluster.[1]
                name: PLR-1
                router_type: TIER0
                summary: Provider Logical Router(Tier0) - 1

    CreatePlrLLRP-1_PLR-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterlinkport:
            '[1]':
                logical_router_id: nsxmanager.[1].logicalrouter.[1]
                name: PLR1 Linkport
                resource_type: LogicalRouterLinkPort
                summary: Link port on PLR1

    CreatePlrLLRP-3_PLR-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterlinkport:
            '[3]':
                logical_router_id: nsxmanager.[1].logicalrouter.[1]
                name: PLR1 Linkport
                resource_type: LogicalRouterLinkPort
                summary: Link port on PLR1

    CreatePlrLLRP-5_PLR-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterlinkport:
            '[5]':
                logical_router_id: nsxmanager.[1].logicalrouter.[1]
                name: PLR1 Linkport
                resource_type: LogicalRouterLinkPort
                summary: Link port on PLR1

    CreateTN-1_HOSTNODE-1_TZ-1_VMNIC-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportnode:
            '[1]':
                host_switches:
                -   host_switch_profile_ids:
                    -   key: UplinkHostSwitchProfile
                        value: nsxmanager.[1].uplinkprofile.[1]->id
                    switch_name: nsxvswitch
                    uplinks:
                    -   adapter_name: uplink1
                        device_name: vmnic1
                node_id: nsxmanager.[1].hostnode.[1]->id
                transport_zone_endpoint:
                -   transport_zone_id: nsxmanager.[1].transportzone.[1]

    CreateTN-2_HOSTNODE-2_TZ-1_ETH-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportnode:
            '[2]':
                host_switches:
                -   host_switch_profile_ids:
                    -   key: UplinkHostSwitchProfile
                        value: nsxmanager.[1].uplinkprofile.[1]->id
                    switch_name: nsxvswitch
                    uplinks:
                    -   adapter_name: uplink1
                        device_name: eth1
                node_id: nsxmanager.[1].hostnode.[2]->id
                transport_zone_endpoint:
                -   transport_zone_id: nsxmanager.[1].transportzone.[1]

    CreateTN-3_HOSTNODE-3_TZ-1_ETH-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportnode:
            '[3]':
                host_switches:
                -   host_switch_profile_ids:
                    -   key: UplinkHostSwitchProfile
                        value: nsxmanager.[1].uplinkprofile.[1]->id
                    switch_name: nsxvswitch
                    uplinks:
                    -   adapter_name: uplink1
                        device_name: eth1
                node_id: nsxmanager.[1].hostnode.[3]->id
                transport_zone_endpoint:
                -   transport_zone_id: nsxmanager.[1].transportzone.[1]

    CreateTZ-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        transportzone:
            '[1]':
                name: transportzone1
                summary: transportzone1 (created through automation)
                switch_name: nsxvswitch
                transport_zone_type: OVERLAY

    CreateTlrLLRP-2_TLR-2_PLRP-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterlinkport:
            '[2]':
                linked_router_port_id: nsxmanager.[1].logicalrouterlinkport.[1]->id
                logical_router_id: nsxmanager.[1].logicalrouter.[2]
                name: TLR2 Linkport
                resource_type: LogicalRouterLinkPort
                summary: Link port on TLR2 to PLR1

    CreateTlrLLRP-4_TLR-3_PLRP-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterlinkport:
            '[4]':
                linked_router_port_id: nsxmanager.[1].logicalrouterlinkport.[3]->id
                logical_router_id: nsxmanager.[1].logicalrouter.[3]
                name: TLR3 Linkport
                resource_type: LogicalRouterLinkPort
                summary: Link port on TLR3 to PLR1

    CreateTlrLLRP-6_TLR-4_PLRP-5:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouterlinkport:
            '[6]':
                linked_router_port_id: nsxmanager.[1].logicalrouterlinkport.[5]->id
                logical_router_id: nsxmanager.[1].logicalrouter.[4]
                name: TLR4 Linkport
                resource_type: LogicalRouterLinkPort
                summary: Link port on TLR4 to PLR1

    CreateULRP-1_LSP-100_GWMC-0_IP-192.200.1.1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalrouteruplinkport:
            '[1]':
                gateway_cluster_member_index:
                - 0
                linked_switch_port_id: nsxmanager.[1].logicalport.[100]->id
                logical_router_id: nsxmanager.[1].logicalrouter.[1]
                name: PLR1 Uplink1
                resource_type: LogicalRouterUpLinkPort
                subnets:
                -   ip_addresses:
                    - 192.200.1.1
                    prefixlen: 24
                summary: Uplink port 1 for PLR 1

    CreateUPROF-1_MTU-1600:
        TestNSX: nsxmanager.[1]
        Type: NSX
        uplinkprofile:
            '[1]':
                mtu: 1600
                resource_type: UplinkHostSwitchProfile
                teaming:
                    active:
                    -   adapter_name: uplink1
                        adapter_type: PNIC
                    policy: FAILOVER_ORDER
                vlan: 0

    DeleteEdgeCluster-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deleteedgecluster: nsxmanager.[1].edgecluster.[1]

    DeleteEdgeNode-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deleteedgenode: nsxmanager.[1].edgenode.[1]

    DeleteFPROF-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletefabricprofile: nsxmanager.[1].fabricprofile.[1]

    DeleteLLRP-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterlinkport: nsxmanager.[1].logicalrouterlinkport.[1]

    DeleteLLRP-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterlinkport: nsxmanager.[1].logicalrouterlinkport.[2]

    DeleteLLRP-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterlinkport: nsxmanager.[1].logicalrouterlinkport.[3]

    DeleteLLRP-4:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterlinkport: nsxmanager.[1].logicalrouterlinkport.[4]

    DeleteLLRP-5:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterlinkport: nsxmanager.[1].logicalrouterlinkport.[5]

    DeleteLLRP-6:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterlinkport: nsxmanager.[1].logicalrouterlinkport.[6]

    DeleteLR-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouter: nsxmanager.[1].logicalrouter.[1]

    DeleteLR-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouter: nsxmanager.[1].logicalrouter.[2]

    DeleteLR-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouter: nsxmanager.[1].logicalrouter.[3]

    DeleteLRP-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterport: nsxmanager.[1].logicalrouterport.[1]

    DeleteLRP-1-4:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterport: nsxmanager.[1].logicalrouterport.[1-4]

    DeleteLRP-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterport: nsxmanager.[1].logicalrouterport.[2]

    DeleteLRP-5:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouterport: nsxmanager.[1].logicalrouterport.[5]

    DeleteLS-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalswitch: nsxmanager.[1].logicalswitch.[1]

    DeleteLS-100:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalswitch: nsxmanager.[1].logicalswitch.[100]

    DeleteLS-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalswitch: nsxmanager.[1].logicalswitch.[2]

    DeleteLS-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalswitch: nsxmanager.[1].logicalswitch.[3]

    DeleteLS-4:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalswitch: nsxmanager.[1].logicalswitch.[4]

    DeleteLS-5:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalswitch: nsxmanager.[1].logicalswitch.[5]

    DeleteLSP-1-4:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[1-4]
        query_params:
            detach: 'true'

    DeleteLSP-100:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[100]
        query_params:
            detach: 'true'

    DeleteLSP-11:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[11]
        query_params:
            detach: 'true'

    DeleteLSP-12:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[12]
        query_params:
            detach: 'true'

    DeleteLSP-13:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[13]
        query_params:
            detach: 'true'

    DeleteLSP-14:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[14]
        query_params:
            detach: 'true'

    DeleteLSP-16:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[16]
        query_params:
            detach: 'true'

    DeleteTN-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportnode: nsxmanager.[1].transportnode.[1]

    DeleteTN-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportnode: nsxmanager.[1].transportnode.[2]

    DeleteTN-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportnode: nsxmanager.[1].transportnode.[3]

    DeleteTZ-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletetransportzone: nsxmanager.[1].transportzone.[1]

    DeleteULRP-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalrouteruplinkport: nsxmanager.[1].logicalrouteruplinkport.[1]

    DeleteUPROF-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deleteuplinkprofile: nsxmanager.[1].uplinkprofile.[1]

    DeleteVif-1_VM-1:
        TestVM: vm.[1]
        Type: VM
        deletevif: vm.[x=vm_index].vif.[1]

    DeleteVif-1_VM-2:
        TestVM: vm.[2]
        Type: VM
        deletevif: vm.[x=vm_index].vif.[1]

    DeleteVif-1_VM-3:
        TestVM: vm.[3]
        Type: VM
        deletevif: vm.[x=vm_index].vif.[1]

    DeleteVif-1_VM-4:
        TestVM: vm.[4]
        Type: VM
        deletevif: vm.[x=vm_index].vif.[1]

    DeleteVnic-1_VM-100:
        TestVM: vm.[100]
        Type: VM
        deletevnic: vm.[x=vm_index].vnic.[1]

    DiscoverESX1Vtep1FromDevice-vmk10:
        Testhost: esx.[1]
        Type: Host
        vtep:
            '[1]':
                discover: 'true'
                execution_type: cli
                name: vmk10

    DiscoverESX2Vtep1FromDevice-vmk10:
        Testhost: esx.[2]
        Type: Host
        vtep:
            '[1]':
                discover: 'true'
                execution_type: cli
                name: vmk10

    DiscoverESX3Vtep1FromDevice-vmk10:
        Testhost: esx.[3]
        Type: Host
        vtep:
            '[1]':
                discover: 'true'
                execution_type: cli
                name: vmk10

    DiscoverEdgeNode-1_EDGE-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        edgenode:
            '[1]':
                discover: 'true'
                ipaddresses:
                - nsxedge.[1]->management_ip
                resource_type: EdgeNode

    DiscoverHostNode1FromESX1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        hostnode:
            '[1]':
                discover: 'true'
                ip_addresses: esx.[1]

    DiscoverHostNode2FromKVM2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        hostnode:
            '[2]':
                discover: 'true'
                ip_addresses: kvm.[2]

    DiscoverHostNode3FromKVM3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        hostnode:
            '[3]':
                discover: 'true'
                ip_addresses: kvm.[3]

    DiscoverKVM2Vtep1FromDevice-nsx-vtep0.0:
        Testhost: kvm.[2]
        Type: Host
        vtep:
            '[1]':
                discover: 'true'
                execution_type: cli
                name: nsx-vtep0.0

    DiscoverKVM3Vtep1FromDevice-nsx-vtep0.0:
        Testhost: kvm.[3]
        Type: Host
        vtep:
            '[1]':
                discover: 'true'
                execution_type: cli
                name: nsx-vtep0.0

    DiscoverLport110FromVM100Vnic1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[110]':
                attachment:
                    attachment_type: VIF
                    id_: vm.[100].vnic.[1]->uuid
                discover: 'true'

    JoinCCPClusterNode-1_NSXC-1_ToNSXC-1:
        TestController: nsxcontroller.[1]
        Type: Controller
        clusternode:
            '[1]':
                controller_ip: nsxcontroller.[1]
                execution_type: cli

    JoinCCPClusterNode-2_NSXC-2_ToNSXC-1:
        TestController: nsxcontroller.[2]
        Type: Controller
        clusternode:
            '[2]':
                controller_ip: nsxcontroller.[1]
                execution_type: cli

    JoinCCPClusterNode-3_NSXC-3_ToNSXC-1:
        TestController: nsxcontroller.[3]
        Type: Controller
        clusternode:
            '[3]':
                controller_ip: nsxcontroller.[1]
                execution_type: cli

    NetPerfTCPFromVM100Vnic1ToVM1Vif1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[1].vif.[1]
        TestAdapter: vm.[100].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM3Vif1ToVM1Vif1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[1].vif.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM100Vnic1ToVM1Vif1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[1].vif.[1]
        TestAdapter: vm.[100].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM3Vif1ToVM1Vif1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[1].vif.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    PingFromESX1Vtep1ToESX2Vtep1:
        SupportAdapter: esx.[2].vtep.[1]
        TestAdapter: esx.[1].vtep.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromESX1Vtep1ToESX3Vtep1:
        SupportAdapter: esx.[3].vtep.[1]
        TestAdapter: esx.[1].vtep.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromESX1Vtep1ToKVM2Vtep1:
        SupportAdapter: kvm.[2].vtep.[1]
        TestAdapter: esx.[1].vtep.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromESX1Vtep1ToKVM3Vtep1:
        SupportAdapter: kvm.[3].vtep.[1]
        TestAdapter: esx.[1].vtep.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromESX2Vtep1ToESX3Vtep1:
        SupportAdapter: esx.[3].vtep.[1]
        TestAdapter: esx.[2].vtep.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromKVM2Vtep1ToKVM3Vtep1:
        SupportAdapter: kvm.[3].vtep.[1]
        TestAdapter: kvm.[2].vtep.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM1Vif1ToVM2Vif1:
        SupportAdapter: vm.[2].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM1Vnic1ToVM2Vnic1:
        SupportAdapter: vm.[2].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM1Vnic1ToVM3Vnic1:
        SupportAdapter: vm.[3].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM1Vnic1ToVM100Vnic1:
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM3Vif1ToVM4Vif1:
        SupportAdapter: vm.[4].vif.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM3Vnic1ToVM4Vnic1:
        SupportAdapter: vm.[4].vnic.[1]
        TestAdapter: vm.[3].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM3Vnic1ToVM100Vnic1:
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[3].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    NetPerfTCPFromVM1Vnic1ToVM2Vnic1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[2].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM1Vnic1ToVM3Vnic1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[3].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM1Vnic1ToVM100Vnic1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM3Vnic1ToVM4Vnic1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[4].vnic.[1]
        TestAdapter: vm.[3].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM3Vnic1ToVM100Vnic1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[3].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    PowerOffVM-1:
        TestVM: vm.[1]
        Type: VM
        vmstate: poweroff

    PowerOnVM-1:
        TestVM: vm.[1]
        Type: VM
        vmstate: poweron

    PowerOnVM-4:
        TestVM: vm.[4]
        Type: VM
        vmstate: poweron

    RebootESX-3:
        TestHost: esx.[3]
        Type: Host
        reboot: 'yes'

    RebootKVM-3:
        TestHost: kvm.[3]
        Type: Host
        reboot: 'yes'

    RegisterEdge-1:
        TestGateway: nsxedge.[1]
        Type: Gateway
        register_nsx_edge_node:
            execution_type: cli
            manager_ip: nsxmanager.[1]->manager_ip
            manager_password: default
            manager_thumbprint: nsxmanager.[1]->manager_thumbprint
            manager_username: admin

    RemoveManagerOnESX-1:
        TestHost: esx.[1]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    RemoveManagerOnESX-2:
        TestHost: esx.[2]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    RemoveManagerOnESX-3:
        TestHost: esx.[3]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    RemoveManagerOnKVM-2:
        TestHost: kvm.[2]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    RemoveManagerOnKVM-3:
        TestHost: kvm.[3]
        Type: Host
        remove_nsx_manager:
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    SetManagerOnESX-1:
        TestHost: esx.[1]
        Type: Host
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    SetManagerOnKVM-2:
        TestHost: kvm.[2]
        Type: Host
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    SetManagerOnKVM-3:
        TestHost: kvm.[3]
        Type: Host
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    SetManagerOnNSXC-1:
        TestController: nsxcontroller.[1]
        Type: Controller
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    SetManagerOnNSXC-2:
        TestController: nsxcontroller.[2]
        Type: Controller
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    SetManagerOnNSXC-3:
        TestController: nsxcontroller.[3]
        Type: Controller
        set_nsx_manager:
            execution_type: cli
            manager_ip: nsxmanager.[1]
            manager_thumbprint: nsxmanager.[1]

    UndiscoverHostNode-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletehostnode: nsxmanager.[1].hostnode.[1]
        skipmethod: 1

    UndiscoverHostNode-2:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletehostnode: nsxmanager.[1].hostnode.[2]
        skipmethod: 1

    UndiscoverHostNode-3:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletehostnode: nsxmanager.[1].hostnode.[3]
        skipmethod: 1

    UndiscoverLSP-11:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[11]
        skipmethod: 1

    UndiscoverLSP-110:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[110]
        skipmethod: 1

    UndiscoverLSP-12:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[12]
        skipmethod: 1

    UndiscoverLSP-13:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[13]
        skipmethod: 1

    UndiscoverLSP-14:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[14]
        skipmethod: 1

    CreateLSP-5_LS-5:
        TestNSX: nsxmanager.[1]
        Type: NSX
        logicalport:
            '[5]':
                admin_state: UP
                switch_id: nsxmanager.[1].logicalswitch.[5]->id

    DeleteLSP-5:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[5]
        query_params:
            detach: 'true'

    DeleteLSP-15:
        TestNSX: nsxmanager.[1]
        Type: NSX
        deletelogicalport: nsxmanager.[1].logicalport.[15]
        query_params:
            detach: 'true'

    DeleteVif-1_VM-5:
        TestVM: vm.[5]
        Type: VM
        deletevif: vm.[x=vm_index].vif.[1]

    DisableRouteAdvertisementOnLR-2:
        TestRouter: nsxmanager.[1].logicalrouter.[2]
        Type: Router
        routeadvertisements:
            '[1]':
                advertise_routes: {}
                enableadvertisement: 'false'

    DisableRouteAdvertisementOnLR-3:
        TestRouter: nsxmanager.[1].logicalrouter.[3]
        Type: Router
        routeadvertisements:
            '[1]':
                advertise_routes: {}
                enableadvertisement: 'false'

    NetPerfUDPFromVM1Vnic1ToVM2Vnic1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[2].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM1Vnic1ToVM3Vnic1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[3].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM1Vnic1ToVM100Vnic1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM3Vnic1ToVM4Vnic1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[4].vnic.[1]
        TestAdapter: vm.[3].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM3Vnic1ToVM100Vnic1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[3].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM1Vif1ToVM2Vif1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[2].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM1Vif1ToVM3Vif1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[3].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM1Vif1ToVM100Vif1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[100].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM3Vnic1ToVM4Vnic1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[4].vnic.[1]
        TestAdapter: vm.[3].vnic.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM3Vif1ToVM100Vif1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[100].vif.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM1Vif1ToVM2Vif1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[2].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM1Vif1ToVM3Vif1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[3].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM1Vif1ToVM100Vif1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[100].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM3Vif1ToVM4Vif1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[4].vif.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfUDPFromVM3Vif1ToVM100Vif1:
        L3Protocol: ipv4
        L4Protocol: udp
        SupportAdapter: vm.[100].vif.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    NetPerfTCPFromVM3Vif1ToVM4Vif1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[4].vif.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    PingFromVM1Vif1ToVM100Vnic1:
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM3Vif1ToVM100Vnic1:
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    NetPerfTCPFromVM3Vif1ToVM4Vif1:
        L3Protocol: ipv4
        L4Protocol: tcp
        SupportAdapter: vm.[4].vif.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: netperf
        Type: Traffic

    PingFromVM1Vif1ToVM3Vif1:
        SupportAdapter: vm.[3].vif.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM1Vif1ToVM100Vnic1:
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[1].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFromVM3Vif1ToVM100Vnic1:
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[3].vif.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    JoinMPClusterNode-1_NSXM-1_ToNSXM-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        clusternode:
            '[1]':
                mgr_role_config:
                    manager_ip: nsxmanager.[1]
                    manager_thumbprint: nsxmanager.[1]
                    node_type: AddManagementNodeSpec
                    password: default
                    username: admin

    MapNSXManager-1_CLUSTER-1:
        TestNSX: nsxmanager.[1]
        Type: NSX
        cluster:
            '[1]':
                id_: 1
                map_object: true

    VerifyMPClusterStatus-1_NSXM-1:
        TestCluster: nsxmanager.[1].cluster.[1]
        Type: Cluster
        cluster_status:
            control_cluster_status:
                status[?]equal_to: STABLE
            mgmt_cluster_status:
                status[?]equal_to: STABLE

    Add100RouteOnVM1Vnic1viaLRP1:
        TestAdapter: vm.[1].vnic.[1]
        Type: NetAdapter
        destination: 100.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[1]->ip
        netmask: 255.0.0.0
        route: add

    Add100RouteOnVM2Vnic1viaLRP2:
        TestAdapter: vm.[2].vnic.[1]
        Type: NetAdapter
        destination: 100.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[2]->ip
        netmask: 255.0.0.0
        route: add

    Add100RouteOnVM3Vnic1viaLRP3:
        TestAdapter: vm.[3].vnic.[1]
        Type: NetAdapter
        destination: 100.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[3]->ip
        netmask: 255.0.0.0
        route: add

    Add100RouteOnVM4Vnic1viaLRP4:
        TestAdapter: vm.[4].vnic.[1]
        Type: NetAdapter
        destination: 100.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[4]->ip
        netmask: 255.0.0.0
        route: add

    Add100RouteOnVM2Vif1viaLRP2:
        TestAdapter: vm.[2].vif.[1]
        Type: NetAdapter
        destination: 100.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[2]->ip
        netmask: 255.0.0.0
        route: add

    Add100RouteOnVM3Vif1viaLRP3:
        TestAdapter: vm.[3].vif.[1]
        Type: NetAdapter
        destination: 100.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[3]->ip
        netmask: 255.0.0.0
        route: add

    Add100RouteOnVM4Vif1viaLRP4:
        TestAdapter: vm.[4].vif.[1]
        Type: NetAdapter
        destination: 100.0.0.0
        gateway: nsxmanager.[1].logicalrouterport.[4]->ip
        netmask: 255.0.0.0
        route: add

    DiscoverVnicsOnEdge-1_VNIC-1-3:
        TestVM: nsxedge.[1]
        Type: VM
        vnic:
            '[1-3]':
                discover: 'true'

    DisconnectEdge1Vnic2:
        TestAdapter: nsxedge.[1].vnic.[2]
        Type: NetAdapter
        connected: 0
        reconfigure: 'true'
        startconnected: 0

    ReconnectEdge1Vnic2:
        TestAdapter: nsxedge.[1].vnic.[2]
        Type: NetAdapter
        connected: 1
        reconfigure: 'true'
        startconnected: 1

    UndiscoverVnicsOnEdge-1_VNIC-1-3:
        TestVM: nsxedge.[1]
        Type: VM
        deletevnic: nsxedge.[1].vnic.[1-3]
        skipmethod: 1

    PingFailFromVM100Vnic1ToVM2Vnic1:
        ExpectedResult: Fail
        SupportAdapter: vm.[2].vnic.[1]
        TestAdapter: vm.[100].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFailFromVM100Vnic1ToVM4Vnic1:
        ExpectedResult: Fail
        SupportAdapter: vm.[4].vnic.[1]
        TestAdapter: vm.[100].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFailFromVM1Vnic1ToVM100Vnic1:
        ExpectedResult: Fail
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[1].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0

    PingFailFromVM3Vnic1ToVM100Vnic1:
        ExpectedResult: Fail
        SupportAdapter: vm.[100].vnic.[1]
        TestAdapter: vm.[3].vnic.[1]
        TestDuration: 10
        ToolName: ping
        Type: Traffic
        connectivitytest: 0
