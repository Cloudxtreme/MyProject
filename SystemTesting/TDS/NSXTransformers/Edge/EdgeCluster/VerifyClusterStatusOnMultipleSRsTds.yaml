TestEdgeClusterOperations:
    Product: "NSXTransformers"
    Category: "Edge"
    Component: "ClusterCreation"
    Developer: "sucheta"
    Version: "2"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    Duration: '5'
    Tags: 'cat-02'
    Partnerfacing: "N"
    Priority: "P0"
    QCPath: "/NSXTransformers/EDGE/Clustering"
    TestName: "Verify CLI commands work well on edge nodes"
    Summary: "Verify CLI commands work well on edge nodes; configured as SRs for a logical router"
    Procedure: "1. Create Cluster.
                2. Create and Add 2 Nodes in cluster.
                3. Create a LR.
                4. Configure 2 uplinks and 1 downlink on LR.
                5. Verify show edge-cluster status on SR.
                5. Verify show show edge-cluster history resource on SR.
                6. Verify show show edge-cluster history state on SR."
    ExpectedResult: "Verify CLI commands work well on edge nodes; configured as SRs for a logical router"

    TestbedSpec: *L3_ESX_TOPOLOGY_01

    WORKLOADS:
        Sequence:
            - ['DiscoverHostnodes']
            - ['CreateTransportZone']
            - ['CreateUplinkProfile']
            - ['CreateTransportNodes']
            - ['CreateFabricProfile']
            - ['DiscoverEdgeNode01Id']
            - ['DiscoverEdgeNode02Id']
            - ['CreateEdgeClusterWithEdgeNode']
            - ['CreateLogicalSwitch1ForTIER0']
            - ['CreateLogicalSwitch2ForTIER0']
            - ['CreateLogicalPortsForUplinkForTIER0']
            - ['CreateLogicalPortForDownlinkForTIER0']
            - ['CreateTIER0LogicalRouterForEdge']         # for Tier0 router
            - ['CreateDownlinkLogicalRouterPortForEdge']  # for Tier0 router
            - ['CreateUplinkLogicalRouterPortsForEdge']    # for Tier0 router
            - ['UpdateStaticRoutes']
            - ['VerifyEdgeNodesClusterStatus', 'VerifyEdgeNode1ClusterHistoryState', 'VerifyEdgeNode2ClusterHistoryState','VerifyEdgeNode1ClusterHistoryResource','VerifyEdgeNode2ClusterHistoryResource']
        ExitSequence:
            - ['DeleteLogicalRouterPort']
            - ['DeleteLogicalRouterUplinkPort']
            - ['DeleteLogicalRouter']
            - ['DeleteEdgeCluster']
            - ['DeleteFabricProfile']
            - ['DeleteLogicalPorts']
            - ['DeleteLogicalSwitches']
            - ['DeleteTransportNodes']
            - ['DeleteUplinkProfile']
            - ['DeleteTransportZone']

        CreateFabricProfile: *CREATE_FABRIC_PROFILE

        DiscoverEdgeNode01Id: *DISCOVER_EDGE_NODE_ID

        DiscoverEdgeNode02Id: *DISCOVER_EDGE_NODE_ID_02

        DiscoverHostnodes: *DISCOVER_HOST_NODES

        CreateTransportZone: *CREATE_TRANSPORT_ZONE_01--ESX

        CreateUplinkProfile: *CREATE_UPLINK_PROFILE_01--ESX

        CreateTransportNodes: *CREATE_TRANSPORT_NODE_01--ESX

        DeleteTransportZone: *DELETE_TRANSPORT_ZONE_01--ESX

        DeleteUplinkProfile: *DELETE_UPLINK_PROFILE_01--ESX

        DeleteTransportNodes: *DELETE_TRANSPORT_NODE_01--ESX

        VerifyEdgeNodesClusterStatus:
            Type: Gateway
            TestGateway: 'nsxedge.[1]'
            execution_type: 'cli'
            sleepbetweenworkloads: 60
            get_cluster_status:
                ha_status[?]equal_to: 'Active'
                ha_admin_state[?]equal_to: 'Up'
                routing_status[?]equal_to: 'Up'
                routing_status_channel[?]equal_to: 'Up'
                healthcheck_status_channel[?]equal_to: 'Up'

        VerifyEdgeNode1ClusterHistoryState:
            Type: Gateway
            TestGateway: 'nsxedge.[1]'
            execution_type: 'cli'
            sleepbetweenworkloads: 60
            'get_cluster_history_state[?]contain_once':
                table:
                    - state: 'Standby'
                      event: 'Config Updated'
                      reason: 'Config'
                    - state: 'Offline'
                      event: 'Config Updated'
                      reason: 'Config'
                    - state: 'Disabled'
                      event: 'Init'
                      reason: 'Init'
                    - state: 'Active'
                      event: 'Node State Changed'
                      reason: 'Up'

        VerifyEdgeNode2ClusterHistoryState:
            Type: Gateway
            TestGateway: 'nsxedge.[2]'
            execution_type: 'cli'
            sleepbetweenworkloads: 60
            'get_cluster_history_state[?]contain_once':
                table:
                    - state: 'Standby'
                      event: 'Config Updated'
                      reason: 'Config'
                    - state: 'Offline'
                      event: 'Config Updated'
                      reason: 'Config'
                    - state: 'Disabled'
                      event: 'Init'
                      reason: 'Init'
                    - state: 'Active'
                      event: 'Node State Changed'
                      reason: 'Up'

        VerifyEdgeNode1ClusterHistoryResource:
            Type: Gateway
            TestGateway: 'nsxedge.[1]'
            execution_type: 'cli'
            sleepbetweenworkloads: 60
            'get_cluster_history_resource[?]contain_once':
                table:
                    - running resources: '1'
                      active nodes: '0, 1'
                    - running resources: '0, 1'
                      active nodes: '1'

        VerifyEdgeNode2ClusterHistoryResource:
            Type: Gateway
            TestGateway: 'nsxedge.[2]'
            execution_type: 'cli'
            sleepbetweenworkloads: 60
            'get_cluster_history_resource[?]contain_once':
                table:
                    - running resources: '0'
                      active nodes: '0, 1'

        CreateEdgeClusterWithEdgeNode:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            edgecluster:
                '[1]':
                    name: 'Edge_Cluster_1'
                    summary: "Edge Cluster created through automation"
                    members:
                      - edge_node_id: 'nsxmanager.[1].edgenode.[1]'
                      - edge_node_id: 'nsxmanager.[1].edgenode.[2]'
                    fabric_profile_bindings:
                      - resource_type: "FabricProfileClusterKeepAlive"
                        # enter the fabric_profile_id: uuid1
                        fabric_profile_id: 'nsxmanager.[1].fabricprofile.[1]'

        # create logical switches for Tier0
        CreateLogicalSwitch1ForTIER0: *CREATE_LOGICAL_SWITCH_01_TIER0
        CreateLogicalSwitch2ForTIER0: *CREATE_LOGICAL_SWITCH_02_TIER0

        # create 2 logical port on switch 1 for uplink for tier0
        CreateLogicalPortsForUplinkForTIER0:
            Type: NSX
            TestNSX: nsxmanager.[1]
            logicalport:
                '[1]':
                    switch_id: nsxmanager.[1].logicalswitch.[1]
                    name: 'TIER0-LogicalPort-1-For-uplink'
                    admin_state: UP
                '[2]':
                    switch_id: nsxmanager.[1].logicalswitch.[1]
                    name: 'TIER0-LogicalPort-2-For-uplink'
                    admin_state: UP

        CreateLogicalPortForDownlinkForTIER0:
            Type: NSX
            TestNSX: nsxmanager.[1]
            logicalport:
                '[3]':
                    switch_id: nsxmanager.[1].logicalswitch.[2]
                    name: 'TIER0-LogicalPort-10-For-downlink'
                    admin_state: UP

        CreateTIER0LogicalRouterForEdge: *CREATE_LOGICAL_ROUTER_TIER0

        CreateDownlinkLogicalRouterPortForEdge:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            logicalrouterport:
                '[3]':
                    logical_router_id: "nsxmanager.[1].logicalrouter.[1]"
                    name: 'TIER0-LRPort-2-Downlinkport'
                    summary: "LRPort Downlink Port1 created through automation"
                    linked_switch_port_id: nsxmanager.[1].logicalport.[3]->id
                    resource_type: "LogicalRouterDownLinkPort"
                    subnets:
                       - prefixlen: 24
                         ip_addresses:
                             - '192.168.60.1'

        CreateUplinkLogicalRouterPortsForEdge:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            logicalrouteruplinkport:
                '[1]':
                    logical_router_id: "nsxmanager.[1].logicalrouter.[1]"
                    name: 'TIER0-LRPort-1-UPLINKPORT'
                    summary: "TIER0 LRPort Uplink Port1 created through automation"
                    linked_switch_port_id: nsxmanager.[1].logicalport.[1]->id
                    resource_type: "LogicalRouterUpLinkPort"
                    gateway_cluster_member_index: 'nsxmanager.[1].edgenode.[1]->member_index'
                    subnets:
                       - prefixlen: 24
                         ip_addresses:
                             - '192.168.50.1'
                '[2]':
                    logical_router_id: "nsxmanager.[1].logicalrouter.[1]"
                    name: 'TIER0-LRPort-1-UPLINKPORT'
                    summary: "TIER0 LRPort Uplink Port2 created through automation"
                    linked_switch_port_id: nsxmanager.[1].logicalport.[2]->id
                    resource_type: "LogicalRouterUpLinkPort"
                    gateway_cluster_member_index: 'nsxmanager.[1].edgenode.[2]->member_index'
                    subnets:
                       - prefixlen: 24
                         ip_addresses:
                             - '192.168.50.2'

        UpdateStaticRoutes:
            Type: "Router"
            TestRouter: "nsxmanager.[1].logicalrouter.[1]"
            lrstaticroutes:
                '[1]':
                    staticroutes:
                        - name: 'static-route-1'
                          summary: 'Static route for 192.168.200.0/24'
                          next_hops:
                              - '192.168.50.253'
                          network: '192.168.200.0/24'
                          lr_port_id: "nsxmanager.[1].logicalrouteruplinkport.[1]->id_"
                        - name: 'static-route-2'
                          summary: 'Static route for 192.168.40.0/24'
                          next_hops:
                              - '192.168.50.253'
                          network: '192.168.200.0/24'
                          lr_port_id: "nsxmanager.[1].logicalrouteruplinkport.[2]->id_"


        DeleteEdgeCluster: *DELETE_EDGE_CLUSTER

        DeleteFabricProfile: *DELETE_FABRIC_PROFILE

        DeleteLogicalRouter: *DELETE_LOGICAL_ROUTER

        DeleteLogicalRouterPort: *DELETE_LOGICAL_ROUTER_PORT

        DeleteLogicalRouterUplinkPort: *DELETE_LOGICAL_ROUTER_UPLINK_PORT

        DeleteLogicalPorts: *DELETE_LOGICAL_PORT

        DeleteLogicalSwitches: *DELETE_LOGICAL_SWITCH