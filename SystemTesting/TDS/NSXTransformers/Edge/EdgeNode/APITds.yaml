TestEdgeNode:
    Product: "NSXTransformers"
    Category: "Edge"
    Component: "API"
    TestName: "Test CRD operation for Edge Node"
    Version: "2"
    Summary: "Verify CRD operations for Edge Node"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: TBD
    Priority: "P0"
    Developer: "agujar"
    Procedure: '1. Create one Edge Node
                2. Perform the Read operation
                3. Delete the Edge Node'
    ExpectedResult: 'CRD operation should be successful for Edge Node'
    Duration: '5'
    Tags: 'cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
           '[1]':
               ip: none

    WORKLOADS:
        Sequence:
            - ["CreateEdgeNode"]
            - ["ReadEdgeNode"]
            - ["GetAllEdgeNodes"]
        ExitSequence:
            - ["DeleteEdgeNode"]

        CreateEdgeNode:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            edgenode:
                '[1]':
                    name: 'edge_node_1'
                    summary: "Edge Node created through automation"
                    external_id: "biosUuid:42161467-3b79-42f0-5ef9-f76d188dd2a2;macAddress:00:50:56:96:cd:b8"
                    ipaddresses:
                       - 192.168.1.2
                       - 192.168.1.3
                    resource_type: "EdgeNode"

        ReadEdgeNode:
            Type: "Gateway"
            TestGateway: "nsxmanager.[1].edgenode.[1]"
            read:
              'name[?]defined': 'edge_node_1'
              'summary[?]equal_to': "Edge Node created through automation"
              'id_[?]equal_to': 'nsxmanager.[1].edgenode.[1]'
              'resource_type[?]equal_to': "EdgeNode"
              'ipaddresses[?]contain_once':
                - 192.168.1.2
                - 192.168.1.3

        GetAllEdgeNodes:
            Type: "Gateway"
            TestGateway: "nsxmanager.[1].edgenode.[1]"
            node_type: "EdgeNode"
            get_edge_node_list:
              'result_count[?]equal_to': 1
              'results[?]contain_once':
                   - name: edge_node_1
                     'ipaddresses[?]contain_once':
                        - 192.168.1.2
                        - 192.168.1.3
                     resource_type: "EdgeNode"
                     'id_[?]equal_to': 'nsxmanager.[1].edgenode.[1]'

        DeleteEdgeNode:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            deleteedgenode: "nsxmanager.[1].edgenode.[1]"

TestInvalidResourceTypeValueField:
    Product: "NSXTransformers"
    Category: "Edge"
    Component: "API"
    TestName: "Wrong resource_type field"
    Version: "2"
    Summary: "Test if REST API fails when user passes wrong resource_type field"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: TBD
    Priority: "P0"
    Developer: "agujar"
    Procedure: '1. Create one Edge Node with invalid resource_type'
    ExpectedResult: 'Edge Node should not be created'
    Duration: '5'
    Tags: 'cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
           '[1]':
               ip: none

    WORKLOADS:
        Sequence:
            - ["InvalidResourceTypeValueField"]

        InvalidResourceTypeValueField:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            edgenode:
                '[1]':
                    name: 'edge_node_1'
                    summary: "Edge Node created through automation"
                    external_id: "biosUuid:42161467-3b79-42f0-5ef9-f76d188dd2a2;macAddress:00:50:56:96:cd:b8"
                    ipaddresses:
                       - 192.168.1.2
                       - 192.168.1.3
                    resource_type: "EDGE_Test"


TestPassingResourceTypeAsNodeType:
    Product: "NSXTransformers"
    Category: "Edge"
    Component: "API"
    TestName: "Wrong resource_type field"
    Version: "2"
    Summary: "Test if REST API fails when user passes wrong resource_type field"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: TBD
    Priority: "P0"
    Developer: "agujar"
    Procedure: '1. Create one Edge Node by passing node_type instead of resource_type'
    ExpectedResult: 'Edge Node should not be created'
    Duration: '5'
    Tags: 'cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
           '[1]':
               ip: none

    WORKLOADS:
        Sequence:
            - ["PassingResourceTypeAsNodeType"]

        PassingResourceTypeAsNodeType:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            edgenode:
                '[1]':
                    name: 'edge_node_1'
                    summary: "Edge Node created through automation"
                    external_id: "biosUuid:42161467-3b79-42f0-5ef9-f76d188dd2a2;macAddress:00:50:56:96:cd:b8"
                    ipaddresses:
                       - 192.168.1.2
                       - 192.168.1.3
                    node_type: "EdgeNode"
