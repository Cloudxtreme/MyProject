!include ../../esx/CommonWorkloads.yaml
!include ../../esx/TestbedSpec.yaml

COMMON_STRESS_TAGS:
    P0_STRESS_TAGS: &P0_STRESS_TAGS
        <<: *P0_TAGS
        QCPath: *QCPATH--KVM
        Tags: "L2, Stress"
        Developer: salmanm
        # XXX(salmanm): Define a testbedspec with 20 HVs.
        TestbedSpec: *FUNCTIONAL_TOPOLOGY_3--KVM

RegisterUnregisterFabricNode:
    <<: *P0_STRESS_TAGS
    Testname: RegisterUnregisterFabricNode
    Component: *MPA--KVM
    Summary: "Register/Unregister a fabric node 100 times."

CreateDeleteTransportZone:
    <<: *P0_STRESS_TAGS
    Testname: CreateDeleteTransportZone
    Component: *MPA--KVM
    Summary: "Create/Delete a transport zone 100 times."

CreateDeleteLogicalSwitch:
    <<: *P0_STRESS_TAGS
    Testname: CreateDeleteLogicalSwitch
    Component: *MPA--KVM
    Summary: "Create/Delete a logical switch 100 times."

CreateDeleteLogicalPort:
    <<: *P0_STRESS_TAGS
    Testname: CreateDeleteLogicalPort
    Component: *MPA--KVM
    Summary: "Create/Delete a logical port 100 times."

CreateParallelTransportZones:
    <<: *P0_STRESS_TAGS
    Testname: CreateParallelTransportZones
    Component: *MPA--KVM
    Summary: "Create 500 transport zones in parallel and get all transport
              nodes (sorted/unsorted)"

CreateParallelTransportNodes:
    <<: *P0_STRESS_TAGS
    Testname: CreateParallelTransportNodes
    Component: *MPA--KVM
    Summary: "Create 20 transport nodes in parallel and get all transport
              nodes (sorted/unsorted)"

CreateParallelLogicalSwitches:
    <<: *P0_STRESS_TAGS
    Testname: CreateParallelLogicalSwitches
    Component: *MPA--KVM
    Summary: "Create 500 logical switches in parallel and get all logical
              switches (sorted/unsorted)"

CreateParallelLogicalPorts:
    <<: *P0_STRESS_TAGS
    Testname: CreateParallelLogicalPorts
    Component: *MPA--KVM
    Summary: "Create 500 logical ports in parallel and get all logical ports
              (sorted/unsorted). Plug in VIFs to the lports and do up/down
              on the vifs."

UknownIPScanStress:
    <<: *P0_STRESS_TAGS
    Testname: UknownIPScanStress
    Component: *DATAPATH--KVM
    Summary: "Scan unknown IPs in the logical network from multiple sources."

MultipleVMMulticastTraffic:
    <<: *P0_STRESS_TAGS
    Testname: MultipleVMMulticastTraffic
    Component: *DATAPATH--KVM
    Summary: "Generate multicast traffic in overlay network from multiple
              sources."

MultipleTransactionsPerSecond:
    <<: *P0_STRESS_TAGS
    Testname: MultipleTransactionsPerSecond
    Component: *DATAPATH--KVM
    Summary: "Initiate transactions in the overlay network from multiple
              sources."

JumboPacketsWithSmallerMTU:
    <<: *P0_STRESS_TAGS
    Testname: JumboPacketsWithSmallerMTU
    Component: *DATAPATH--KVM
    Summary: "Send jumbo packets between VMs where the MTU in datapath is
              smaller than the packet size."

JumboPacketsWithTSO:
    <<: *P0_STRESS_TAGS
    Testname: JumboPacketsWithTSO
    Component: *DATAPATH--KVM
    Summary: "Send jumbo packets between VMs with TSO enabled on the underlying
              HV."

ArpUpdateStress:
    <<: *P0_STRESS_TAGS
    Testname: ArpUpdateStress
    Component: *DATAPATH--KVM
    Summary: "Make the CCP learn the ARP entries of the VMs and then change the
              VM IPs and see that the new binding is learned as well."

NsxaKillTest:
    <<: *P0_STRESS_TAGS
    Testname: NsxaKillTest
    Component: *MPA--KVM
    Summary: "Kill nsxa and verify that watchdog process brings it back up."

NsxaRestartTest:
    <<: *P0_STRESS_TAGS
    Testname: NsxaRestartTest
    Component: *MPA--KVM
    Summary: "Restart nsxa for 100 times and then push a new logical
              switch/port to verify that it realizes state on the host."

NetcpaKillTest:
    <<: *P0_STRESS_TAGS
    Testname: NetcpaKillTest
    Component: *LCP--KVM
    Summary: "Kill netcpa and verify that watchdog process brings it back up."

NetcpaRestartTest:
    <<: *P0_STRESS_TAGS
    Testname: NetcpaRestartTest
    Component: *LCP--KVM
    Summary: "Restart netcpa for 100 times and then do a vif/up down and verify
              that the tunnel is cleaned and then recreated on the host."

MpaKillTest:
    <<: *P0_STRESS_TAGS
    Testname: MpaKillTest
    Component: *MPA--KVM
    Summary: "Kill MPA and verify that the watchdog process brings it back up."

MpaRestartTest:
    <<: *P0_STRESS_TAGS
    Testname: MpaRestartTest
    Component: *MPA--KVM
    Summary: "Restart MPA for 100 times and then create a logical switch and
              check that it gets realized on the host."
