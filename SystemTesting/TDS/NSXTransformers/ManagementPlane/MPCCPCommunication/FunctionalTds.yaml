!include ../Clustering/DeploymentWorkloads.yaml
!include ../Clustering/L2Workloads.yaml
!include ../Clustering/L3Workloads.yaml
!include ../Clustering/MPCommonWorkloads.yaml
!include ../Clustering/MPVerticalWorkloads.yaml
!include ../Clustering/TestbedSpec.yaml

MPCCPCommSingleMPNodeToSingleCCPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'MPCCPCommSingleMPNodeToSingleCCPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_1CCP_2ESX
    Summary: 'Verify logical switch, port and attachment operations are getting realized on ESX'
    Procedure: '1. Create a test-bed with one MP, one CCP, two ESX and two VMs
        2. Create one logical switch
        3. Create two logical switch ports and attach them to VM NICs
        4. Configure IPs on the VM NICs
        5. Ping VM-1 from VM-2 and vice-a-versa
        6. Verify ping operation succeeds'
    ExpectedResult: 'Ping operation should succeed as VM NICs are connected to logical switch ports'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads

        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_For_Cluster_Status_Stable_On_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["VifAttachment01"]
            - ["VerifyLSReplicationModeOnHostForLS1"]
            - ["DiscoverLogicalPortsFrom_Node1"]
            - ['ConfigureVnicIP']
            - ['Traffic']
        ExitSequence:
            - ["VifDetachment01"]
            - ["DeleteVnic1FromVM1"]
            - ["DeleteVnic1FromVM2"]
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX

        ConfigureVnicIP:
            Type: NetAdapter
            TestAdapter: vm.[1-2].vnic.[1]
            IPv4: auto

        Traffic:
            Type          : "Traffic"
            ToolName      : "ping"
            TestAdapter   : "vm.[2].vnic.[1]"
            SupportAdapter: "vm.[1].vnic.[1]"
            TestDuration  : "10"

MPCCPCommMPNodeServicesRestart_1:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'MPCCPCommMPNodeServicesRestart_1'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_1CCP_2ESX
    Summary: 'Verify logical switch is getting created after restarting proton and rabbitmq services on MP'
    Procedure: '  - Register 1 CCP node to 1 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch from MP node and verify the corresponding realised state
                - Restart proton and rabbitmq services
                - Create logical switch-2 after proton and rabbitmq services are up'
    ExpectedResult: 'Logical switch-2 should get created'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads

        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_For_Cluster_Status_Stable_On_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["VifAttachment01"]
            - ["VerifyLSReplicationModeOnHostForLS1"]
            - ["SetServiceId"]
            - ["RestartRabbitmqService"]
            - ["RestartProtonService"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["CreateLogicalSwitch02From_Node1"]
            - ["VifAttachment02"]
            - ["VerifyLSReplicationModeOnHostForLS2"]
            - ["DiscoverLogicalPortsFrom_Node1"]
            - ["DiscoverLogicalPortsOfLS02From_Node1"]
        ExitSequence:
            - ["VifDetachment01"]
            - ["VifDetachment02"]
            - ["DeleteVnic1FromVM1"]
            - ["DeleteVnic1FromVM2"]
            - ["DeleteVnic1FromVM3"]
            - ["DeleteVnic1FromVM4"]
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 120

        CreateLogicalSwitch02From_Node1:
            <<: *CREATE_LOGICAL_SWITCH_02
            sleepbetweenworkloads: 60

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifAttachment02: *VIF_ATTACHMENT_02--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX
        VifDetachment02: *VIF_DETACHMENT_02--ESX

MPCCPCommMPNodeServicesRestart_2:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'MPCCPCommMPNodeServicesRestart_2'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_1CCP_2ESX
    Summary: 'Verify logical switch is getting created after restarting proton service on MP'
    Procedure: '  - Register 1 CCP node to 1 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch from MP node and verify the corresponding realised state
                - Restart proton services
                - Create logical switch-2 after proton service is up'
    ExpectedResult: 'Logical switch-2 should get created'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads

        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_For_Cluster_Status_Stable_On_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["VifAttachment01"]
            - ["VerifyLSReplicationModeOnHostForLS1"]
            - ["SetServiceId"]
            - ["RestartProtonService"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["CreateLogicalSwitch02From_Node1"]
            - ["VifAttachment02"]
            - ["VerifyLSReplicationModeOnHostForLS2"]
            - ["DiscoverLogicalPortsFrom_Node1"]
            - ["DiscoverLogicalPortsOfLS02From_Node1"]
        ExitSequence:
            - ["VifDetachment01"]
            - ["VifDetachment02"]
            - ["DeleteVnic1FromVM1"]
            - ["DeleteVnic1FromVM2"]
            - ["DeleteVnic1FromVM3"]
            - ["DeleteVnic1FromVM4"]
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 120

        CreateLogicalSwitch02From_Node1:
            <<: *CREATE_LOGICAL_SWITCH_02
            sleepbetweenworkloads: 60

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifAttachment02: *VIF_ATTACHMENT_02--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX
        VifDetachment02: *VIF_DETACHMENT_02--ESX

MPCCPCommMPNodeServicesRestart_3:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'MPCCPCommMPNodeServicesRestart_3'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_1CCP_2ESX
    Summary: 'Verify logical switch is getting created after restarting rabbitmq service on MP'
    Procedure: '  - Register 1 CCP node to 1 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch from MP node and verify the corresponding realised state
                - Restart rabbitmq services
                - Create logical switch-2 after rabbitmq service is up'
    ExpectedResult: 'Logical switch-2 should get created'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads

        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_For_Cluster_Status_Stable_On_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["VifAttachment01"]
            - ["VerifyLSReplicationModeOnHostForLS1"]
            - ["SetServiceId"]
            - ["RestartRabbitmqService"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["CreateLogicalSwitch02From_Node1"]
            - ["VifAttachment02"]
            - ["VerifyLSReplicationModeOnHostForLS2"]
            - ["DiscoverLogicalPortsFrom_Node1"]
            - ["DiscoverLogicalPortsOfLS02From_Node1"]
        ExitSequence:
            - ["VifDetachment01"]
            - ["VifDetachment02"]
            - ["DeleteVnic1FromVM1"]
            - ["DeleteVnic1FromVM2"]
            - ["DeleteVnic1FromVM3"]
            - ["DeleteVnic1FromVM4"]
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 120

        CreateLogicalSwitch02From_Node1:
            <<: *CREATE_LOGICAL_SWITCH_02
            sleepbetweenworkloads: 60

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifAttachment02: *VIF_ATTACHMENT_02--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX
        VifDetachment02: *VIF_DETACHMENT_02--ESX

SingleMPNodeToSingleCCPNodeStateSynchAfterRestartingMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'SingleMPNodeToSingleCCPNodeStateSynchAfterRestartingMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_1CCP_2ESX
    Summary: 'Verify logical switch is getting created after restarting MP node'
    Procedure: '  - Register 1 CCP node to 1 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch from MP node and verify the corresponding realised state
                - Reboot MP node
                - Create logical switch-2 after MP node is up'
    ExpectedResult: 'Logical switch-2 should get created'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads

        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_For_Cluster_Status_Stable_On_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["VifAttachment01"]
            - ["VerifyLSReplicationModeOnHostForLS1"]
            - ["RestartMPNode1"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["CreateLogicalSwitch02From_Node1"]
            - ["VifAttachment02"]
            - ["VerifyLSReplicationModeOnHostForLS2"]
            - ["DiscoverLogicalPortsFrom_Node1"]
            - ["DiscoverLogicalPortsOfLS02From_Node1"]
        ExitSequence:
            - ["VifDetachment01"]
            - ["VifDetachment02"]
            - ["DeleteVnic1FromVM1"]
            - ["DeleteVnic1FromVM2"]
            - ["DeleteVnic1FromVM3"]
            - ["DeleteVnic1FromVM4"]
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 180

        CreateLogicalSwitch02From_Node1:
            <<: *CREATE_LOGICAL_SWITCH_02
            sleepbetweenworkloads: 60

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifAttachment02: *VIF_ATTACHMENT_02--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX
        VifDetachment02: *VIF_DETACHMENT_02--ESX
        RestartMPNode1: *RESTART_NODE_1

SingleMPNodeToSingleCCPNodeStateSynchAfterRestartingCCPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'MPCCPCommSingleMPNodeToSingleCCPNodeWithMPNodeDown'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_1CCP_2ESX
    Summary: 'Verify logical switch is getting created after restarting MP node'
    Procedure: '  - Register 1 CCP node to 1 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch from MP node and verify the corresponding realised state
                - Reboot CCP node
                - Create logical switch-2 after CCP node is up'
    ExpectedResult: 'Logical switch-2 should get created'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads

        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_For_Cluster_Status_Stable_On_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["VifAttachment01"]
            - ["VerifyLSReplicationModeOnHostForLS1"]
            - ["RestartCCPNode1"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["CreateLogicalSwitch02From_Node1"]
            - ["VifAttachment02"]
            - ["VerifyLSReplicationModeOnHostForLS2"]
            - ["DiscoverLogicalPortsFrom_Node1"]
            - ["DiscoverLogicalPortsOfLS02From_Node1"]
        ExitSequence:
            - ["VifDetachment01"]
            - ["VifDetachment02"]
            - ["DeleteVnic1FromVM1"]
            - ["DeleteVnic1FromVM2"]
            - ["DeleteVnic1FromVM3"]
            - ["DeleteVnic1FromVM4"]
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 180

        CreateLogicalSwitch02From_Node1:
            <<: *CREATE_LOGICAL_SWITCH_02
            sleepbetweenworkloads: 60

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifAttachment02: *VIF_ATTACHMENT_02--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX
        VifDetachment02: *VIF_DETACHMENT_02--ESX
        RestartCCPNode1: *RESTART_CCP_NODE_1

MPNodeAdditionToSingleMPNodeCluster:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'MPNodeAdditionToSingleMPNodeCluster'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly after adding node to one node MP cluster'
    Procedure: '  - Register 1 CCP node to 1 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port from MP node and verify the corresponding realised state on CCP
                - Add one MP node to MP cluster
                - Create logical port-2 from newly added MP node and verify it is getting realized'
    ExpectedResult: 'Logical port-2 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *DeploymentWorkloads

        Sequence:
            - ["DeployNSXManager2"]
            - ["MapNSXManager1ToCluster"]
            - ["Wait_For_Cluster_Status_Stable_On_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["CreateLP01OnLS01FromNode1"]
            - ["VerifyLogicalSwitchPort01InfoOnCCP"]
            - ["AddMPNode2ToCluster"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["MapNSXManager2ToCluster"]
            - ["CreateLogicalPort02FromNode2"]
            - ["VerifyLogicalSwitchPort01And02InfoOnCCP"]
        ExitSequence:
            - ["SetServiceId"]
            - ["StopProtonServiceOn_Node2"]
            - ["RemoveMP_Node2"]
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]
            - ["PowerOffMP_Node2"]
            - ["DeleteNSXManager2"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 20

MPNodeAdditionToTwoMPNodeCluster:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'MPNodeAdditionToTwoMPNodeCluster'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly after adding node to two node MP cluster'
    Procedure: '  - Register 1 CCP node to 2 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port from MP node and verify the corresponding realised state on CCP
                - Add one MP node to MP cluster
                - Create logical port-2 from newly added MP node and verify it is getting realized'
    ExpectedResult: 'Logical port-2 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,2mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *DeploymentWorkloads

        Sequence:
            - ["DeployNSXManager2"]
            - ["DeployNSXManager3"]
            - ["MapNSXManager1ToCluster"]
            - ["Wait_For_Cluster_Status_Stable_On_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["AddMPNode2ToCluster"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["CreateLP01OnLS01FromNode1"]
            - ["VerifyLogicalSwitchPort01InfoOnCCP"]
            - ["AddMPNode3ToCluster"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["CreateLogicalPort02FromNode3"]
            - ["VerifyLogicalSwitchPort01And02InfoOnCCP"]
        ExitSequence:
            - ["SetServiceId"]
            - ["StopProtonServiceOn_Node2"]
            - ["RemoveMP_Node2"]
            - ["StopProtonServiceOn_Node3"]
            - ["VerifyStopProtonServiceStatusFor_Node3"]
            - ["RemoveMP_Node3"]
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]
            - ["PowerOffMP_Node2"]
            - ["DeleteNSXManager2"]
            - ["PowerOffMP_Node3"]
            - ["DeleteNSXManager3"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode3:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]
            sleepbetweenworkloads: 20

MultipleNodeMPToSingleNodeCCP:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'MultipleNodeMPToSingleNodeCCP'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify configuration getting realized on CCP from all MP nodes'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Create logical port-2 from NSXManager-2 node and verify it is getting realized
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["CreateLP01OnLS01FromNode1"]
            - ["VerifyLogicalSwitchPort01InfoOnCCP"]
            - ["CreateLogicalPort02FromNode2"]
            - ["VerifyLogicalSwitchPort01And02InfoOnCCP"]
            - ["CreateLogicalPort03FromNode3"]
            - ["VerifyLogicalSwitchPort0102And03InfoOnCCP"]
        ExitSequence:
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

RMQServiceRestartFromAllMPNodes:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'RMQServiceRestartFromAllMPNodes'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly after restarting RMQ service from all MP nodes'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Restart RMQ service from all MP nodes
                - Create logical port-2 from NSXManager-2 node and verify it is getting realized
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized'
    ExpectedResult: 'Logical port-2 and logical port-3 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["CreateLP01OnLS01FromNode1"]
            - ["VerifyLogicalSwitchPort01InfoOnCCP"]
            - ["SetServiceId"]
            - ["RestartRMQServiceOnNode1"]
            - ["RestartRMQServiceOnNode2"]
            - ["RestartRMQServiceOnNode3"]
            - ["CreateLogicalPort02FromNode2"]
            - ["VerifyLogicalSwitchPort01And02InfoOnCCP"]
            - ["CreateLogicalPort03FromNode3"]
            - ["VerifyLogicalSwitchPort0102And03InfoOnCCP"]
        ExitSequence:
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        RestartRMQServiceOnNode1:
            <<: *RESTART_RABBITMQ_SERVICE
            sleepbetweenworkloads: 20

        RestartRMQServiceOnNode2:
            <<: *RESTART_RABBITMQ_SERVICE
            TestService: "nsxmanager.[2].nsxservice.[1]"

        RestartRMQServiceOnNode3:
            <<: *RESTART_RABBITMQ_SERVICE
            TestService: "nsxmanager.[3].nsxservice.[1]"

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 120

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

ProtonServiceRestartFromAllMPNodes:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'ProtonServiceRestartFromAllMPNodes'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly after restarting Proton service from all MP nodes'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Restart Proton service from all MP nodes
                - Create logical port-2 from NSXManager-2 node and verify it is getting realized
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized'
    ExpectedResult: 'Logical port-2 and logical port-3 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["CreateLP01OnLS01FromNode1"]
            - ["VerifyLogicalSwitchPort01InfoOnCCP"]
            - ["SetServiceId"]
            - ["StopProtonServiceOn_Node3"]
            - ["StopProtonServiceOn_Node2"]
            - ["StopProtonServiceOn_Node1"]
            - ["StartProtonServiceOn_Node1"]
            - ["StartProtonServiceOn_Node2"]
            - ["StartProtonServiceOn_Node3"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["CreateLogicalPort02FromNode2"]
            - ["VerifyLogicalSwitchPort01And02InfoOnCCP"]
            - ["CreateLogicalPort03FromNode3"]
            - ["VerifyLogicalSwitchPort0102And03InfoOnCCP"]
        ExitSequence:
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 120

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

StateSynchAfterContinuousCCPNodeReboot:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterContinuousCCPNodeReboot'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly after continuous CCP node reboot'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Reboot CCP Node
                - Create logical port-2 from NSXManager-2 node and verify it is getting realized
                - Reboot CCP Node
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized
                - Reboot CCP Node
                - Verify all three logical ports exist on CCP'
    ExpectedResult: 'Logical port-2 and logical port-3 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["CreateLP01OnLS01FromNode1"]
            - ["VerifyLogicalSwitchPort01InfoOnCCP"]
            - ["Restart_CCP_Node1"]
            - ["VerifyCCPClusterStatusAfterReboot"]
            - ["CreateLogicalPort02FromNode2"]
            - ["VerifyLogicalSwitchPort01And02InfoOnCCP"]
            - ["Restart_CCP_Node1"]
            - ["VerifyCCPClusterStatusAfterReboot"]
            - ["CreateLogicalPort03FromNode3"]
            - ["VerifyLogicalSwitchPort0102And03InfoOnCCP"]
            - ["Restart_CCP_Node1"]
            - ["VerifyCCPClusterStatusAfterReboot"]
            - ["VerifyLogicalSwitchPort0102And03InfoOnCCP"]
        ExitSequence:
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 20

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]
            sleepbetweenworkloads: 20

        VerifyCCPClusterStatusAfterReboot:
            <<: *VERIFY_ONE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 180

StateSynchAfterCCPNodeCrash:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterCCPNodeCrash'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly after continuous CCP node crash'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Crash CCP Node
                - Once CCP node is up, create logical port-2 from NSXManager-2 node and verify it is getting realized
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized'
    ExpectedResult: 'Logical port-2 and logical port-3 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["CreateLP01OnLS01FromNode1"]
            - ["VerifyLogicalSwitchPort01InfoOnCCP"]
            - ["Crash_CCP_Node1"]
            - ["Poweron_CCP_Node1"]
            - ["VerifyCCPClusterStatusAfterCrash"]
            - ["CreateLogicalPort02FromNode2"]
            - ["VerifyLogicalSwitchPort01And02InfoOnCCP"]
            - ["CreateLogicalPort03FromNode3"]
            - ["VerifyLogicalSwitchPort0102And03InfoOnCCP"]
        ExitSequence:
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 20

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]
            sleepbetweenworkloads: 20

        VerifyCCPClusterStatusAfterCrash:
            <<: *VERIFY_ONE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 180

StateSynchAfterCCPNodeDown:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterCCPNodeDown'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly after continuous CCP node was down'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Poweroff CCP Node
                - Create logical port-2 from NSXManager-2 node
                - Poweron CCP Node
                - Verify logical port-1 and logical port-2 are present on CCP
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized'
    ExpectedResult: 'Logical port-2 and logical port-3 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - ["MapNSXManager1ToCluster"]
            - ["Wait_for_cluster_status_STABLE_on_Node1"]
            - ["JoinController1ToCCPCluster"]
            - ["VerifyOneNodeCCPClusterStatus"]
            - ["CreateLogicalSwitch01From_Node1"]
            - ["CreateLP01OnLS01FromNode1"]
            - ["VerifyLogicalSwitchPort01InfoOnCCP"]
            - ["Poweroff_CCP_Node1"]
            - ["CreateLogicalPort02FromNode2"]
            - ["Poweron_CCP_Node1"]
            - ["VerifyCCPClusterStatusAfterCrash"]
            - ["VerifyLogicalSwitchPort01And02InfoOnCCP"]
            - ["CreateLogicalPort03FromNode3"]
            - ["VerifyLogicalSwitchPort0102And03InfoOnCCP"]
        ExitSequence:
            - ["DeleteLogicalPortFrom_Node1"]
            - ["DeleteLogicalSwitchFrom_Node1"]

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 20

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]
            sleepbetweenworkloads: 20

        VerifyCCPClusterStatusAfterCrash:
            <<: *VERIFY_ONE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 180

StateSynchAfterMPClusterDown:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterMPClusterDown'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly after bringing MP cluster down and then bringing up'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Restart MP cluster
                - Create logical port-2 from NSXManager-2 node and verify it is getting realized
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized'
    ExpectedResult: 'Logical port-2 and logical port-3 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - JoinController1ToCCPCluster
            - - VerifyOneNodeCCPClusterStatus
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCP
            - - PowerOffMP_Node3
            - - PowerOffMP_Node2
            - - PowerOffMP_Node1
            - - PowerOnMP_Node1
            - - PowerOnMP_Node2
            - - PowerOnMP_Node3
            - - SetServiceId
            - - VerifyProtonServiceStartAfterReboot_Node1_CLI
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - CreateLogicalPort02FromNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCP
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCP
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 60

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 20

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

StateSynchAfterNetworkPartitioningBetweenMPAndCCP:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterNetworkPartitioningBetweenMPAndCCP'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly after network partitioning between MP and CCP'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Block traffic from all NSXManagers to NSXController
                - Create logical port-2 from NSXManager-2 node
                - Create logical port-3 from NSXManager-3 node
                - Unblock traffic from all NSXManagers to NSXController
                - Verify logical port-2 and logical port-3 are getting realized on CCP'
    ExpectedResult: 'Logical port-2 and logical port-3 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - JoinController1ToCCPCluster
            - - VerifyOneNodeCCPClusterStatus
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCP
            - - BlockNSXController1TrafficFromNSXManager1
            - - BlockNSXController1TrafficFromNSXManager2
            - - BlockNSXController1TrafficFromNSXManager3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - UnblockNSXController1TrafficFromNSXManager1
            - - UnblockNSXController1TrafficFromNSXManager2
            - - UnblockNSXController1TrafficFromNSXManager3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCP
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        BlockNSXController1TrafficFromNSXManager2:
           <<: *BlockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        BlockNSXController1TrafficFromNSXManager3:
           <<: *BlockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        UnblockNSXController1TrafficFromNSXManager2:
           <<: *UnblockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        UnblockNSXController1TrafficFromNSXManager3:
           <<: *UnblockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort0102And03InfoOnCCP:
            <<: *VERIFY_LP0102AND03_ON_CCP
            sleepbetweenworkloads: 60

StateSynchDuringIntermittentNetworkConnectivityBetweenMPAndCCP:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchDuringIntermittentNetworkConnectivityBetweenMPAndCCP'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working correctly during intermittent network connectivity between MP and CCP'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Block traffic from all NSXManagers to NSXController
                - Create logical port-2 from NSXManager-2 node
                - Unblock traffic from all NSXManagers to NSXController
                - Verify logical port-2 is realized on CCP
                - Block traffic from all NSXManagers to NSXController
                - Create logical port-3 from NSXManager-3 node
                - Unblock traffic from all NSXManagers to NSXController
                - Verify logical port-3 is realized on CCP'
    ExpectedResult: 'Logical port-2 and logical port-3 should get created and get realized on CCP'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - JoinController1ToCCPCluster
            - - VerifyOneNodeCCPClusterStatus
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCP
            - - BlockNSXController1TrafficFromNSXManager1
            - - BlockNSXController1TrafficFromNSXManager2
            - - BlockNSXController1TrafficFromNSXManager3
            - - CreateLogicalPort02FromNode2
            - - UnblockNSXController1TrafficFromNSXManager1
            - - UnblockNSXController1TrafficFromNSXManager2
            - - UnblockNSXController1TrafficFromNSXManager3
            - - VerifyLogicalSwitchPort01And02InfoOnCCP
            - - BlockNSXController1TrafficFromNSXManager1
            - - BlockNSXController1TrafficFromNSXManager2
            - - BlockNSXController1TrafficFromNSXManager3
            - - CreateLogicalPort03FromNode3
            - - UnblockNSXController1TrafficFromNSXManager1
            - - UnblockNSXController1TrafficFromNSXManager2
            - - UnblockNSXController1TrafficFromNSXManager3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCP
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        BlockNSXController1TrafficFromNSXManager2:
           <<: *BlockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        BlockNSXController1TrafficFromNSXManager3:
           <<: *BlockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        UnblockNSXController1TrafficFromNSXManager2:
           <<: *UnblockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        UnblockNSXController1TrafficFromNSXManager3:
           <<: *UnblockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01And02InfoOnCCP:
            <<: *VERIFY_LP01AND02_ON_CCP
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort0102And03InfoOnCCP:
            <<: *VERIFY_LP0102AND03_ON_CCP
            sleepbetweenworkloads: 60

CheckTrafficOnESXWhenMPClusterDown:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'CheckTrafficOnESXWhenMPClusterDown'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify traffic on ESX hosts is working even though MP cluster is down'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch
                - Create two logical switch ports and attach them to VM NICs
                - Configure IPs on the VM NICs
                - Ping VM-1 from VM-2 and vice-a-versa
                - Verify ping operation succeeds
                - Bring MP cluster down
                - Ping VM-1 from VM-2 and vice-a-versa
                - Verify ping operation succeeds'
    ExpectedResult: 'Ping operation should succeed even though MP cluster is down'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - JoinController1ToCCPCluster
            - - VerifyOneNodeCCPClusterStatus
            - - CreateLogicalSwitch01From_Node1
            - - VifAttachment01
            - - VerifyLSReplicationModeOnHostForLS1
            - - DiscoverLogicalPortsFrom_Node1
            - - ConfigureVnicIP
            - - Traffic
            - - PowerOffMP_Node3
            - - PowerOffMP_Node2
            - - PowerOffMP_Node1
            - - TrafficAfterMPClusterDown
        ExitSequence:
            - - PowerOnMP_Node1
            - - PowerOnMP_Node2
            - - PowerOnMP_Node3
            - - SetServiceId
            - - VerifyProtonServiceStartAfterReboot_Node1_CLI
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - VifDetachment01
            - - DeleteVnic1FromVM1
            - - DeleteVnic1FromVM2
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX

        ConfigureVnicIP:
            Type: NetAdapter
            TestAdapter: vm.[1-2].vnic.[1]
            IPv4: auto

        Traffic:
            Type          : "Traffic"
            ToolName      : "ping"
            TestAdapter   : "vm.[2].vnic.[1]"
            SupportAdapter: "vm.[1].vnic.[1]"
            TestDuration  : "10"

        TrafficAfterMPClusterDown:
            Type          : "Traffic"
            ToolName      : "ping"
            TestAdapter   : "vm.[2].vnic.[1]"
            SupportAdapter: "vm.[1].vnic.[1]"
            TestDuration  : "10"
            sleepbetweenworkloads: 60

SingleNodeMPToMultipleNodeCCP:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'SingleNodeMPToMultipleNodeCCP'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_3CCP_2ESX
    Summary: 'Verify configuration getting realized on all CCP nodes from single MP node'
    Procedure: '  - Register 3 CCP nodes to single MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1
                - Verify logical port-1 is getting realized on all CCP nodes'
    ExpectedResult: 'Logical port-1 should get created and get realized on all CCP nodes'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_3ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterCascadingDisconnectOfCCPNodes:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterCascadingDisconnectOfCCPNodes'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_3CCP_2ESX
    Summary: 'Verify configuration getting realized on all CCP nodes even after cascading disconnect of CCP nodes'
    Procedure: '  - Register 3 CCP nodes to single MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1
                - Verify logical port-1 is getting realized on all CCP nodes
                - Disconnect NSXController-3 from NSXManager-1
                - Create logical port-2
                - Disconnect NSXController-2 from NSXManager-1
                - Create logical port-3
                - Reconnect NSXController-3 and NSXController-2 to NSXManager-1
                - Verify all logical ports are realized on all CCP nodes'
    ExpectedResult: 'All logical ports should get created and get realized on all CCP nodes'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_3ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - BlockNSXController3TrafficFromNSXManager1
            - - CreateLP02OnLS01FromNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode2
            - - BlockNSXController2TrafficFromNSXManager1
            - - CreateLP03OnLS01FromNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - UnblockNSXController2TrafficFromNSXManager1
            - - UnblockNSXController3TrafficFromNSXManager1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterCCPClusterDown:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterCCPClusterDown'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_3CCP_2ESX
    Summary: 'Verify configuration getting realized on all CCP nodes after bringing down all CCP nodes and up again'
    Procedure: '  - Register 3 CCP nodes to single MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1
                - Verify logical port-1 is getting realized on all CCP nodes
                - Shutdown CCP cluster
                - Create logical port-2
                - Create logical port-3
                - Bring CCP cluster up
                - Verify all logical ports are realized on all CCP nodes'
    ExpectedResult: 'All logical ports should get created and get realized on all CCP nodes'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_3ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - Poweroff_CCP_Node3
            - - Poweroff_CCP_Node2
            - - Poweroff_CCP_Node1
            - - CreateLP02OnLS01FromNode1
            - - CreateLP03OnLS01FromNode1
            - - Poweron_CCP_Node1
            - - Poweron_CCP_Node2
            - - Poweron_CCP_Node3
            - - VerifyCCPClusterStatusAfterReboot
            - - VerifyClusterStatusFrom_Node1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyCCPClusterStatusAfterReboot:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 180

StateSynchAfterOneCCPNodeDownInMultiNodeCCPCluster:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterOneCCPNodeDownInMultiNodeCCPCluster'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_3CCP_2ESX
    Summary: 'Verify configuration getting realized on all CCP nodes after bringing down and up CCP node in CCP cluster'
    Procedure: '  - Register 3 CCP nodes to single MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1
                - Verify logical port-1 is getting realized on all CCP nodes
                - Power-off NSXController-3
                - Create logical port-2
                - Verify logical port-2 is getting realized on NSXController-1 and NSXController-2
                - Power-on NSXController-3
                - Create logical port-3
                - Verify all three logical ports are realized on all three CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on all CCP nodes'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_3ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - Poweroff_CCP_Node3
            - - CreateLP02OnLS01FromNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode2
            - - Poweron_CCP_Node3
            - - VerifyCCPClusterStatus
            - - VerifyClusterStatusFrom_Node1
            - - CreateLP03OnLS01FromNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyCCPClusterStatus:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

StateSynchAfterNoWriteQuorumInCCPCluster:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterNoWriteQuorumInCCPCluster'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_3CCP_2ESX
    Summary: 'Verify configuration getting realized on all CCP nodes after having write quorum in CCP cluster'
    Procedure: '  - Register 3 CCP nodes to single MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1
                - Verify logical port-1 is getting realized on all CCP nodes
                - Power-off NSXController-3 and NSXController-2
                - Create logical port-2
                - Power-on NSXController-3 and NSXController-2
                - Create logical port-3
                - Verify all three logical ports are realized on all three CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on all CCP nodes'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_3ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - Poweroff_CCP_Node3
            - - Poweroff_CCP_Node2
            - - CreateLP02OnLS01FromNode1
            - - Poweron_CCP_Node2
            - - Poweron_CCP_Node3
            - - VerifyCCPClusterStatus
            - - VerifyClusterStatusFrom_Node1
            - - CreateLP03OnLS01FromNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyCCPClusterStatus:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

StateSynchDesiredStateUpdate:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchDesiredStateUpdate'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_3CCP_2ESX
    Summary: 'Verify desired state getting realized on all CCP nodes after blocking and unblocking traffic between MP and CCP'
    Procedure: '  - Register 3 CCP nodes to single MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1
                - Verify logical port-1 is getting realized on all CCP nodes
                - Disconnect all CCP nodes from NSXManager-1
                - Create logical port-2, logical port-3 on logical switch-1
                - Create logical switch-2 and logical port-4 on it
                - Reconnect all CCP nodes to NSXManager-1
                - Verify all logical switches and logical ports are realized on all CCP nodes'
    ExpectedResult: 'All logical switches and logical ports should get created and get realized on all CCP nodes'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_3ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - BlockNSXController1TrafficFromNSXManager1
            - - BlockNSXController2TrafficFromNSXManager1
            - - BlockNSXController3TrafficFromNSXManager1
            - - CreateLP02OnLS01FromNode1
            - - CreateLP03OnLS01FromNode1
            - - CreateLogicalSwitch02From_Node1
            - - CreateLP04OnLS02FromNode1
            - - UnblockNSXController3TrafficFromNSXManager1
            - - UnblockNSXController2TrafficFromNSXManager1
            - - UnblockNSXController1TrafficFromNSXManager1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - VerifyLogicalSwitchPort04InfoOnCCPNode1
            - - VerifyLogicalSwitchPort04InfoOnCCPNode2
            - - VerifyLogicalSwitchPort04InfoOnCCPNode3
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort04InfoOnCCPNode1:
            <<: *VERIFY_LP04_ON_CCP

        VerifyLogicalSwitchPort04InfoOnCCPNode2:
            <<: *VERIFY_LP04_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort04InfoOnCCPNode3:
            <<: *VERIFY_LP04_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterAddingSingleCCPNodeToCCPCluster:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterAddingSingleCCPNodeToCCPCluster'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify configuration getting realized on CCP cluster after adding single CCP node to CCP cluster'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Add one more node in CCP cluster
                - Create logical port-2 from NSXManager-2 node and verify it is getting realized
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *DeploymentWorkloads
        Sequence:
            - - DeployNSXController2
            - - MapNSXManager1ToCluster
            - - JoinController1ToCCPCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - RegisterController2
            - - JoinController2ToCCPCluster
            - - VerifyClusterStatusFrom_Node1
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1
            - - Poweroff_CCP_Node2
            - - RemoveCCPNode2FromCluster
            - - UnregisterController2
            - - DeleteNSXController2

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 60

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

StateSynchAfterAddingMultipleCCPNodesToCCPCluster:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterAddingMultipleCCPNodesToCCPCluster'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify configuration getting realized on CCP cluster after adding multiple CCP nodes to CCP cluster'
    Procedure: '  - Register 1 CCP node to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on CCP
                - Add one more node in CCP cluster
                - Create logical port-2 from NSXManager-2 node and verify it is getting realized
                - Add one more node in CCP cluster
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *DeploymentWorkloads
        Sequence:
            - - DeployNSXController2
            - - DeployNSXController3
            - - MapNSXManager1ToCluster
            - - JoinController1ToCCPCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - RegisterController2
            - - JoinController2ToCCPCluster
            - - VerifyClusterStatusFrom_Node1
            - - CreateLogicalPort02FromNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode2
            - - RegisterController3
            - - JoinController3ToCCPCluster
            - - VerifyClusterStatusFrom_Node1
            - - VerifyCCPClusterStatus
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1
            - - Poweroff_CCP_Node3
            - - RemoveCCPNode3FromCluster
            - - UnregisterController3
            - - DeleteNSXController3
            - - Poweroff_CCP_Node2
            - - RemoveCCPNode2FromCluster
            - - UnregisterController2
            - - DeleteNSXController2

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 60

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyCCPClusterStatus:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

MultipleNodeMPClusterAndMultipleNodeCCPCluster:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'MultipleNodeMPClusterAndMultipleNodeCCPCluster'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify configuration getting realized on CCP cluster in multiple node mp and multiple node ccp cluster'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1 and verify the corresponding realised state on all CCP nodes
                - Create logical port-2 from NSXManager-2 node and verify it is getting realized
                - Create logical port-3 from NSXManager-3 node and verify it is getting realized'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchHonourOrder:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchHonourOrder'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify configuration getting realized on CCP cluster in multiple node mp and multiple node ccp cluster'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and logical port-1 from NSXManager-1 and verify the corresponding realised state on all CCP nodes
                - Create logical port-2 on logical switch-1 from NSXManager-2
                - Create logical switch-2 and logical port-4 from NSXManager-1
                - Create logical port-3 on logical switch-1 from NSXManager-3
                - Verify both logical switches and four logical ports are getting created and getting realized on CCP cluster'
    ExpectedResult: 'Two logical switches and all four logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalSwitch02From_Node1
            - - CreateLP04OnLS02FromNode1
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - VerifyLogicalSwitchPort04InfoOnCCPNode1
            - - VerifyLogicalSwitchPort04InfoOnCCPNode2
            - - VerifyLogicalSwitchPort04InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort04InfoOnCCPNode1:
            <<: *VERIFY_LP04_ON_CCP

        VerifyLogicalSwitchPort04InfoOnCCPNode2:
            <<: *VERIFY_LP04_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort04InfoOnCCPNode3:
            <<: *VERIFY_LP04_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

FullStateSynchWithThreeNodeMPClusterAndThreeNodeCCPCluster:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'FullStateSynchWithThreeNodeMPClusterAndThreeNodeCCPCluster'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify full state synch working between 3 node MP cluster and 3 node CCP cluster'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and logical port-1 from NSXManager-1 and verify the corresponding realised state on all CCP nodes
                - Block all three CCP node traffic from all three MP nodes
                - Create logical port-2 on logical switch-1 from NSXManager-2
                - Create logical port-3 on logical switch-1 from NSXManager-3
                - Unblock all three CCP node traffic from all three MP nodes
                - Verify all three logical ports are getting created and getting realized on CCP cluster'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads
        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - BlockNSXController1TrafficFromNSXManager1
            - - BlockNSXController1TrafficFromNSXManager2
            - - BlockNSXController1TrafficFromNSXManager3
            - - BlockNSXController2TrafficFromNSXManager1
            - - BlockNSXController2TrafficFromNSXManager2
            - - BlockNSXController2TrafficFromNSXManager3
            - - BlockNSXController3TrafficFromNSXManager1
            - - BlockNSXController3TrafficFromNSXManager2
            - - BlockNSXController3TrafficFromNSXManager3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - UnblockNSXController1TrafficFromNSXManager1
            - - UnblockNSXController1TrafficFromNSXManager2
            - - UnblockNSXController1TrafficFromNSXManager3
            - - UnblockNSXController2TrafficFromNSXManager1
            - - UnblockNSXController2TrafficFromNSXManager2
            - - UnblockNSXController2TrafficFromNSXManager3
            - - UnblockNSXController3TrafficFromNSXManager1
            - - UnblockNSXController3TrafficFromNSXManager2
            - - UnblockNSXController3TrafficFromNSXManager3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        BlockNSXController1TrafficFromNSXManager2:
           <<: *BlockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        BlockNSXController1TrafficFromNSXManager3:
           <<: *BlockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        BlockNSXController2TrafficFromNSXManager2:
           <<: *BlockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        BlockNSXController2TrafficFromNSXManager3:
           <<: *BlockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        BlockNSXController3TrafficFromNSXManager2:
           <<: *BlockNSXController3TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        BlockNSXController3TrafficFromNSXManager3:
           <<: *BlockNSXController3TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        UnblockNSXController1TrafficFromNSXManager2:
           <<: *UnblockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        UnblockNSXController1TrafficFromNSXManager3:
           <<: *UnblockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        UnblockNSXController2TrafficFromNSXManager2:
           <<: *UnblockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        UnblockNSXController2TrafficFromNSXManager3:
           <<: *UnblockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        UnblockNSXController3TrafficFromNSXManager2:
           <<: *UnblockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        UnblockNSXController3TrafficFromNSXManager3:
           <<: *UnblockNSXController3TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

StateSynchAfterAddingAndRemovingCCPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterAddingAndRemovingCCPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working between MP and CCP after adding and removing CCP node in CCP cluster'
    Procedure: '  - Register 3 CCP nodes to 1 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and logical port-1 from NSXManager-1 and verify the corresponding realised state on all CCP nodes
                - Add NSXController-2 to CCP cluster
                - Create logical port-2 on logical switch-1 from NSXManager-2
                - Verify logical port-2 is getting created and getting realized on CCP cluster
                - Remove NSXController-2 from CCP cluster
                - Create logical port-3 on logical switch-1 from NSXManager-3
                - Verify logical port-3 is getting created and getting realized on CCP cluster'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *DeploymentWorkloads
        Sequence:
            - - DeployNSXController2
            - - MapNSXManager1ToCluster
            - - JoinController1ToCCPCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - RegisterController2
            - - JoinController2ToCCPCluster
            - - VerifyClusterStatusFrom_Node1
            - - CreateLogicalPort02FromNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode2
            - - Poweroff_CCP_Node2
            - - RemoveCCPNode2FromCluster
            - - UnregisterController2
            - - VerifyClusterStatusFrom_Node1
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1
            - - DeleteNSXController2

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 60

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyCCPClusterStatus:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

        RemoveCCPNode2FromCluster:
            <<: *RemoveCCPNode2FromCluster
            sleepbetweenworkloads: 20

StateSynchAfterAddingAndRemovingMultipleCCPNodes:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterAddingAndRemovingMultipleCCPNodes'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_1CCP_2ESX
    Summary: 'Verify state synch working between MP and CCP after adding and removing multiple CCP nodes in CCP cluster'
    Procedure: '  - Register 3 CCP nodes to 1 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and logical port-1 from NSXManager-1 and verify the corresponding realised state on all CCP nodes
                - Add NSXController-2 and NSXController-3 to CCP cluster
                - Create logical port-2 on logical switch-1 from NSXManager-2
                - Verify logical port-2 is getting created and getting realized on CCP cluster
                - Remove NSXController-2 and NSXController-3 from CCP cluster
                - Create logical port-3 on logical switch-1 from NSXManager-3
                - Verify logical port-3 is getting created and getting realized on CCP cluster'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_1ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *DeploymentWorkloads
        Sequence:
            - - DeployNSXController2
            - - DeployNSXController3
            - - MapNSXManager1ToCluster
            - - JoinController1ToCCPCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - RegisterController2
            - - JoinController2ToCCPCluster
            - - RegisterController3
            - - JoinController3ToCCPCluster
            - - VerifyClusterStatusFrom_Node1
            - - CreateLogicalPort02FromNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode3
            - - Poweroff_CCP_Node3
            - - RemoveCCPNode3FromCluster
            - - UnregisterController3
            - - Poweroff_CCP_Node2
            - - RemoveCCPNode2FromCluster
            - - UnregisterController2
            - - VerifyClusterStatusFrom_Node1
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1
            - - DeleteNSXController3
            - - DeleteNSXController2

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]
            sleepbetweenworkloads: 60

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01And02InfoOnCCPNode3:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyCCPClusterStatus:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

        RemoveCCPNode2FromCluster:
            <<: *RemoveCCPNode2FromCluster
            sleepbetweenworkloads: 20

StateSynchAfterAddingAndRemovingMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterAddingAndRemovingMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_3CCP_2ESX
    Summary: 'Verify state synch working between MP and CCP after adding and removing MP node in MP cluster'
    Procedure: '  - Register 3 CCP nodes to single MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1
                - Verify logical port-1 is getting realized on all CCP nodes
                - Add NSXManager-2 to MP cluster
                - Create logical port-2 on logical switch-1 from NSXManager-2
                - Verify logical port-2 is getting realized on all CCP nodes
                - Remove NSXManager-2 from MP cluster
                - Create logical port-3 on logical switch-1 from NSXManager-1
                - Verify logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on all CCP nodes'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_3ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *DeploymentWorkloads
        Sequence:
            - - DeployNSXManager2
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - AddMPNode2ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - MapNSXManager2ToCluster
            - - CreateLogicalPort02FromNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode3
            - - SetServiceId
            - - StopProtonServiceOn_Node2
            - - RemoveMP_Node2
            - - RestartProtonService #Remove after getting fix for PR-1380308
            - - VerifyClusterStatusFrom_Node1
            - - CreateLP03OnLS01FromNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1
            - - PowerOffMP_Node2
            - - DeleteNSXManager2

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01And02InfoOnCCPNode3:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyCCPClusterStatus:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

StateSynchAfterAddingAndRemovingMultipleMPNodes:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterAddingAndRemovingMultipleMPNodes'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *1MP_3CCP_2ESX
    Summary: 'Verify state synch working between MP and CCP after adding and removing multiple MP nodes in MP cluster'
    Procedure: '  - Register 3 CCP nodes to single MP node cluster
                - Add 2 HV to MP node
                - Create one logical switch and logical port-1 from NSXManager-1
                - Verify logical port-1 is getting realized on all CCP nodes
                - Add NSXManager-2 and NSXManager-3 to MP cluster
                - Create logical port-2 on logical switch-1 from NSXManager-2
                - Verify logical port-2 is getting realized on all CCP nodes
                - Remove NSXManager-2 and NSXManager-3 from MP cluster
                - Create logical port-3 on logical switch-1 from NSXManager-1
                - Verify logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on all CCP nodes'
    Duration: '300'
    Tags: 'nsxmanager,statesync,1mp_3ccp_2esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *DeploymentWorkloads
        Sequence:
            - - DeployNSXManager2
            - - DeployNSXManager3
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - AddMPNode2ToCluster
            - - AddMPNode3ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - MapNSXManager2ToCluster
            - - CreateLogicalPort02FromNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode3
            - - SetServiceId
            - - StopProtonServiceOn_Node2
            - - RemoveMP_Node2
            - - StopProtonServiceOn_Node3
            - - RemoveMP_Node3
            - - RestartProtonService #Remove after getting fix for PR-1380308
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - CreateLP03OnLS01FromNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1
            - - PowerOffMP_Node2
            - - PowerOffMP_Node3
            - - DeleteNSXManager2
            - - DeleteNSXManager3

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01And02InfoOnCCPNode3:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyCCPClusterStatus:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

CheckTrafficWhenMPAndCCPClusterDown:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'CheckTrafficWhenMPAndCCPClusterDown'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify data plane is working even though MP and CCP clusters are down'
    Procedure: '1. Create a test-bed with three MP, three CCP, two ESX and two VMs
        2. Create one logical switch
        3. Create two logical switch ports and attach them to VM NICs
        4. Configure IPs on the VM NICs
        5. Ping VM-1 from VM-2 and vice-a-versa
        6. Verify ping operation succeeds
        7. Shutdown MP cluster
        8. Shutdown CCP cluster
        9. Ping VM-1 from VM-2 and vice-a-versa
        10. Verify ping operation succeeds
        11. Poweron MP and CCP cluster'
    ExpectedResult: 'Ping operation should succeed even when MP and CCP cluster are down'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads
        Sequence:
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - VifAttachment01
            - - VerifyLSReplicationModeOnHostForLS1
            - - DiscoverLogicalPortsFrom_Node1
            - - ConfigureVnicIP
            - - Traffic
            - - Poweroff_CCP_Node1
            - - Poweroff_CCP_Node2
            - - Poweroff_CCP_Node3
            - - PowerOffMP_Node1
            - - PowerOffMP_Node2
            - - PowerOffMP_Node3
            - - TrafficAfterShutdown
            - - Poweron_CCP_Node3
            - - Poweron_CCP_Node2
            - - Poweron_CCP_Node1
            - - PowerOnMP_Node3
            - - PowerOnMP_Node2
            - - PowerOnMP_Node1
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - VifDetachment01
            - - DeleteVnic1FromVM1
            - - DeleteVnic1FromVM2
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX

        ConfigureVnicIP:
            Type: NetAdapter
            TestAdapter: vm.[1-2].vnic.[1]
            IPv4: auto

        Traffic:
            Type          : "Traffic"
            ToolName      : "ping"
            TestAdapter   : "vm.[2].vnic.[1]"
            SupportAdapter: "vm.[1].vnic.[1]"
            TestDuration  : "10"

        TrafficAfterShutdown:
            Type          : "Traffic"
            ToolName      : "ping"
            TestAdapter   : "vm.[2].vnic.[1]"
            SupportAdapter: "vm.[1].vnic.[1]"
            TestDuration  : "10"
            sleepbetweenworkloads: 60

        Wait_for_cluster_status_STABLE_on_Node1_After_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 180

StateSynchAfterRestartingMPAndCCPClusters_1:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterRestartingMPAndCCPClusters_1'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working correctly when MP cluster comes up before CCP cluster after restart'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and logical port-1 from NSXManager-1 and verify the corresponding realised state on all CCP nodes
                - Restart MP and CCP cluster
                - Make sure that MP cluster comes up before CCP cluster
                - Create logical port-2 on logical switch-1 from NSXManager-2
                - Create logical port-3 on logical switch-1 from NSXManager-3
                - Verify all three logical ports are getting created and getting realized on CCP cluster'
    ExpectedResult: 'All three logical ports should get created on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - Poweroff_CCP_Node1
            - - Poweroff_CCP_Node2
            - - Poweroff_CCP_Node3
            - - PowerOffMP_Node1
            - - PowerOffMP_Node2
            - - PowerOffMP_Node3
            - - PowerOnMP_Node3
            - - PowerOnMP_Node2
            - - PowerOnMP_Node1
            - - Poweron_CCP_Node3_With_Delay
            - - Poweron_CCP_Node2
            - - Poweron_CCP_Node1
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - VerifyCCPClusterStatusAfterRestart
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Poweron_CCP_Node3_With_Delay:
            <<: *POWERON_CCP_NODE_3
            sleepbetweenworkloads: 120

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_for_cluster_status_STABLE_on_Node1_After_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 180

        VerifyCCPClusterStatusAfterRestart:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterRestartingMPAndCCPClusters_2:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterRestartingMPAndCCPClusters_2'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working correctly when CCP cluster comes up before MP cluster after restart'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and logical port-1 from NSXManager-1 and verify the corresponding realised state on all CCP nodes
                - Restart MP and CCP cluster
                - Make sure that CCP cluster comes up before MP cluster
                - Create logical port-2 on logical switch-1 from NSXManager-2
                - Create logical port-3 on logical switch-1 from NSXManager-3
                - Verify all three logical ports are getting created and getting realized on CCP cluster'
    ExpectedResult: 'All three logical ports should get created on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node2
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - Poweroff_CCP_Node1
            - - Poweroff_CCP_Node2
            - - Poweroff_CCP_Node3
            - - PowerOffMP_Node1
            - - PowerOffMP_Node2
            - - PowerOffMP_Node3
            - - Poweron_CCP_Node3
            - - Poweron_CCP_Node2
            - - Poweron_CCP_Node1
            - - PowerOnMP_Node3_With_Delay
            - - PowerOnMP_Node2
            - - PowerOnMP_Node1
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - VerifyCCPClusterStatusAfterRestart
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        PowerOnMP_Node3_With_Delay:
            <<: *POWER_ON_MP_NODE_3
            sleepbetweenworkloads: 120

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_for_cluster_status_STABLE_on_Node1_After_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 180

        VerifyCCPClusterStatusAfterRestart:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterBringingDownDesignatedMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterBringingDownDesignatedMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working between MP and CCP after bringing down designated MP node responsible for state synch'
    Procedure: '1. Register 3 CCP nodes to 3 MP node cluster
                2. Add 2 HV to MP node
                3. Create logical switch-1 and logical port-1 from NSXManager-1 and
                verify the corresponding realised state on all CCP nodes
                4. Bring down designated MP node for state synch and bring it up
                5. Create logical port-2 on logical switch-1 from MP cluster
                6. Create logical port-3 on logical switch-1 from MP cluster
                7. Verify logical port-2 and logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster.'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *StateSynchNodeWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateStateSynchNode
            - - GetStateSynchNodeDetails
            - - PoweroffStateSynchNode
            - - PoweronStateSynchNode
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_for_cluster_status_STABLE_on_Node1_After_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 300

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterRestartOfDesignatedMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterRestartOfDesignatedMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working between MP and CCP after restarting designated MP node responsible for state synch'
    Procedure: '1. Register 3 CCP nodes to 3 MP node cluster
                2. Add 2 HV to MP node
                3. Create logical switch-1 and logical port-1 from NSXManager-1 and
                verify the corresponding realised state on all CCP nodes
                4. Restart designated MP node for state synch
                5. Create logical port-2 on logical switch-1 from MP cluster
                6. Create logical port-3 on logical switch-1 from MP cluster
                7. Verify logical port-2 and logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster.'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *StateSynchNodeWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateStateSynchNode
            - - GetStateSynchNodeDetails
            - - RestartStateSynchNode
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_for_cluster_status_STABLE_on_Node1_After_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 300

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterCrashOfDesignatedMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterCrashOfDesignatedMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working between MP and CCP after crash of designated MP node responsible for state synch'
    Procedure: '1. Register 3 CCP nodes to 3 MP node cluster
                2. Add 2 HV to MP node
                3. Create logical switch-1 and logical port-1 from NSXManager-1 and
                verify the corresponding realised state on all CCP nodes
                4. Crash designated MP node for state synch and then bring it up
                5. Create logical port-2 on logical switch-1 from MP cluster
                6. Create logical port-3 on logical switch-1 from MP cluster
                7. Verify logical port-2 and logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster.'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *StateSynchNodeWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateStateSynchNode
            - - GetStateSynchNodeDetails
            - - CrashStateSynchNode
            - - PoweronStateSynchNode
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_for_cluster_status_STABLE_on_Node1_After_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 300

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterRestartingNonDesignatedMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterRestartingNonDesignatedMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working between MP and CCP after restarting non-designated MP node'
    Procedure: '1. Register 3 CCP nodes to 3 MP node cluster
                2. Add 2 HV to MP node
                3. Create logical switch-1 and logical port-1 from NSXManager-1 and
                verify the corresponding realised state on all CCP nodes
                4. Restart non-designated MP node
                5. Create logical port-2 on logical switch-1 from MP cluster
                6. Create logical port-3 on logical switch-1 from MP cluster
                7. Verify logical port-2 and logical port-3 is getting realized on all CCP nodes
                8. Bring up the MP node which was brought down in step-4'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster.'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *StateSynchNodeWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateStateSynchNode
            - - GetStateSynchNodeDetails
            - - RestartNonStateSynchNode
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_for_cluster_status_STABLE_on_Node1_After_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 300

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterRestartingProtonServiceFromDesignatedMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterRestartingProtonServiceFromDesignatedMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working between MP and CCP after restarting proton service from designated MP node responsible for state synch'
    Procedure: '1. Register 3 CCP nodes to 3 MP node cluster
                2. Add 2 HV to MP node
                3. Create logical switch-1 and logical port-1 from NSXManager-1 and
                verify the corresponding realised state on all CCP nodes
                4. Restart proton service from designated MP node for state synch
                5. Create logical port-2 on logical switch-1 from MP cluster
                6. Create logical port-3 on logical switch-1 from MP cluster
                7. Verify logical port-2 and logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster.'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *StateSynchNodeWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - WaitForClusterStatusStableOnNode1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateStateSynchNode
            - - GetStateSynchNodeDetails
            - - SetServiceId
            - - RestartProtonServiceOnStateSynchNode
            - - WaitForClusterStatusStableOnNode1AfterProtonServiceRestart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        WaitForClusterStatusStableOnNode1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        WaitForClusterStatusStableOnNode1AfterProtonServiceRestart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 120

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterRestartingRabbitmqServiceFromDesignatedMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterRestartingRabbitmqServiceFromDesignatedMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working between MP and CCP after restarting rabbitmq service from designated MP node responsible for state synch'
    Procedure: '1. Register 3 CCP nodes to 3 MP node cluster
                2. Add 2 HV to MP node
                3. Create logical switch-1 and logical port-1 from NSXManager-1 and
                verify the corresponding realised state on all CCP nodes
                4. Restart rabbitmq service from designated MP node for state synch
                5. Create logical port-2 on logical switch-1 from MP cluster
                6. Create logical port-3 on logical switch-1 from MP cluster
                7. Verify logical port-2 and logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster.'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *StateSynchNodeWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - WaitForClusterStatusStableOnNode1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateStateSynchNode
            - - GetStateSynchNodeDetails
            - - SetServiceId
            - - RestartRabbitmqServiceOnStateSynchNode
            - - WaitForClusterStatusStableOnNode1AfterRabbitmqServiceRestart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        WaitForClusterStatusStableOnNode1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        WaitForClusterStatusStableOnNode1AfterRabbitmqServiceRestart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 120

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterRestartingProtonServiceNonDesignatedMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterRestartingProtonServiceNonDesignatedMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working between MP and CCP after restarting proton service from non-designated MP node'
    Procedure: '1. Register 3 CCP nodes to 3 MP node cluster
                2. Add 2 HV to MP node
                3. Create logical switch-1 and logical port-1 from NSXManager-1 and
                verify the corresponding realised state on all CCP nodes
                4. Restart proton service from non-designated MP node
                5. Create logical port-2 on logical switch-1 from MP cluster
                6. Create logical port-3 on logical switch-1 from MP cluster
                7. Verify logical port-2 and logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster.'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *StateSynchNodeWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - WaitForClusterStatusStableOnNode1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateStateSynchNode
            - - GetStateSynchNodeDetails
            - - SetServiceId
            - - RestartProtonServiceOnNonStateSynchNode
            - - WaitForClusterStatusStableOnNode1AfterProtonServiceRestart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        WaitForClusterStatusStableOnNode1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        WaitForClusterStatusStableOnNode1AfterProtonServiceRestart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 120

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchAfterRestartingRabbitmqServiceNonDesignatedMPNode:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterRestartingRabbitmqServiceNonDesignatedMPNode'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working between MP and CCP after restarting rabbitmq service from non-designated MP node'
    Procedure: '1. Register 3 CCP nodes to 3 MP node cluster
                2. Add 2 HV to MP node
                3. Create logical switch-1 and logical port-1 from NSXManager-1 and
                verify the corresponding realised state on all CCP nodes
                4. Restart rabbitmq service from non-designated MP node
                5. Create logical port-2 on logical switch-1 from MP cluster
                6. Create logical port-3 on logical switch-1 from MP cluster
                7. Verify logical port-2 and logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster.'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *StateSynchNodeWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - WaitForClusterStatusStableOnNode1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - CreateStateSynchNode
            - - GetStateSynchNodeDetails
            - - SetServiceId
            - - RestartRabbitmqServiceOnNonStateSynchNode
            - - WaitForClusterStatusStableOnNode1AfterRabbitmqServiceRestart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        WaitForClusterStatusStableOnNode1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        WaitForClusterStatusStableOnNode1AfterRabbitmqServiceRestart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 120

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchGatingTest_1:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchGatingTest'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working correctly when CCP cluster was down and L2 configuration is changed'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and perform VIF attachment using create LS on two VMs
                - Verify ping is working between the two VMs mentioned in above step
                - Shutdown CCP cluster
                - Verify ping is still working between two VMs mentioned above
                - Create logical switch-2
                - Bring up CCP cluster
                - Perform VIF attachment using logical switch-2 on another two VMs
                - Verify ping operation is working between these two VMs also'
    ExpectedResult: 'All L2 configuration changes should get realized on hosts'
    Duration: '300'
    Tags: 'nsxmanager,statesync,gating_test_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads

        Sequence:
            - - GetFullSyncCountBeforeTestOnNSXController1
            - - GetFullSyncCountBeforeTestOnNSXController2
            - - GetFullSyncCountBeforeTestOnNSXController3
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - VifAttachment01
            - - VerifyLSReplicationModeOnHostForLS1
            - - ConfigureVnicIPOnVM1AndVM2
            - - VerifyTrafficBetweenVM1AndVM2
            - - Poweroff_CCP_Node1
            - - Poweroff_CCP_Node2
            - - Poweroff_CCP_Node3
            - - VerifyTrafficBetweenVM1AndVM2AfterCCPClusterDown
            - - CreateLogicalSwitch02From_Node1
            - - Poweron_CCP_Node3
            - - Poweron_CCP_Node2
            - - Poweron_CCP_Node1
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - VerifyCCPClusterStatusAfterRestart
            - - VerifyTrafficBetweenVM1AndVM2AfterCCPClusterUp
            - - VifAttachment02
            - - VerifyLSReplicationModeOnHostForLS2
            - - ConfigureVnicIPOnVM3AndVM4
            - - VerifyTrafficBetweenVM3AndVM4
            - - DiscoverLogicalPortsFrom_Node1
            - - DiscoverLogicalPortsOfLS02From_Node1
            - - VerifyFullSyncCountAfterTestOnNSXController1
            - - VerifyFullSyncCountAfterTestOnNSXController2
            - - VerifyFullSyncCountAfterTestOnNSXController3
        ExitSequence:
            - - VifDetachment01
            - - VifDetachment02
            - - DeleteVnic1FromVM1
            - - DeleteVnic1FromVM2
            - - DeleteVnic1FromVM3
            - - DeleteVnic1FromVM4
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_for_cluster_status_STABLE_on_Node1_After_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 180

        VerifyCCPClusterStatusAfterRestart:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            sleepbetweenworkloads: 60

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifAttachment02: *VIF_ATTACHMENT_02--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX
        VifDetachment02: *VIF_DETACHMENT_02--ESX

        ConfigureVnicIPOnVM1AndVM2:
            Type: NetAdapter
            TestAdapter: vm.[1-2].vnic.[1]
            IPv4: auto

        VerifyTrafficBetweenVM1AndVM2: &TRAFFIC
            Type          : "Traffic"
            ToolName      : "ping"
            TestAdapter   : "vm.[2].vnic.[1]"
            SupportAdapter: "vm.[1].vnic.[1]"
            TestDuration  : "10"

        VerifyTrafficBetweenVM1AndVM2AfterCCPClusterDown:
            <<: *TRAFFIC

        VerifyTrafficBetweenVM1AndVM2AfterCCPClusterUp:
            <<: *TRAFFIC

        ConfigureVnicIPOnVM3AndVM4:
            Type: NetAdapter
            TestAdapter: vm.[3-4].vnic.[1]
            IPv4: auto

        VerifyTrafficBetweenVM3AndVM4:
            Type          : "Traffic"
            ToolName      : "ping"
            TestAdapter   : "vm.[4].vnic.[1]"
            SupportAdapter: "vm.[3].vnic.[1]"
            TestDuration  : "10"

StateSynchGatingTest_2:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchGatingTest_2'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working correctly after rebooting designated state synch node multiple tmes and L2 configuration is changed'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and perform VIF attachment using create LS on two VMs
                - Verify ping is working between the two VMs mentioned in above step
                - Reboot designated state synch node multiple times
                - Verify ping is still working between two VMs mentioned above
                - Create logical switch-2
                - Perform VIF attachment using logical switch-2 on another two VMs
                - Verify ping operation is working between these two VMs also'
    ExpectedResult: 'All L2 configuration changes should get realized on hosts'
    Duration: '300'
    Tags: 'nsxmanager,statesync,gating_test_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *StateSynchNodeWorkloads

        Sequence:
            - - GetFullSyncCountBeforeTestOnNSXController1
            - - GetFullSyncCountBeforeTestOnNSXController2
            - - GetFullSyncCountBeforeTestOnNSXController3
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - CreateLogicalSwitch01From_Node1
            - - VifAttachment01
            - - VerifyLSReplicationModeOnHostForLS1
            - - ConfigureVnicIPOnVM1AndVM2
            - - VerifyTrafficBetweenVM1AndVM2
            - - CreateStateSynchNode
            - - GetStateSynchNodeDetails
            - - PoweroffStateSynchNode
            - - PoweronStateSynchNode
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - GetStateSynchNodeDetails
            - - PoweroffStateSynchNode
            - - PoweronStateSynchNode
            - - Wait_for_cluster_status_STABLE_on_Node1_After_Restart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - VerifyCCPClusterStatusAfterStateSynchNodeReboot
            - - VerifyTrafficBetweenVM1AndVM2
            - - CreateLogicalSwitch02From_Node1
            - - VifAttachment02
            - - VerifyLSReplicationModeOnHostForLS2
            - - ConfigureVnicIPOnVM3AndVM4
            - - VerifyTrafficBetweenVM3AndVM4
            - - VerifyTrafficBetweenVM1AndVM2
            - - DiscoverLogicalPortsFrom_Node1
            - - DiscoverLogicalPortsOfLS02From_Node1
            - - VerifyFullSyncCountAfterTestOnNSXController1
            - - VerifyFullSyncCountAfterTestOnNSXController2
            - - VerifyFullSyncCountAfterTestOnNSXController3
        ExitSequence:
            - - VifDetachment01
            - - VifDetachment02
            - - DeleteVnic1FromVM1
            - - DeleteVnic1FromVM2
            - - DeleteVnic1FromVM3
            - - DeleteVnic1FromVM4
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_for_cluster_status_STABLE_on_Node1_After_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 180

        VerifyCCPClusterStatusAfterStateSynchNodeReboot:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS

        VifAttachment01: *VIF_ATTACHMENT_01--ESX
        VifAttachment02: *VIF_ATTACHMENT_02--ESX
        VifDetachment01: *VIF_DETACHMENT_01--ESX
        VifDetachment02: *VIF_DETACHMENT_02--ESX

        ConfigureVnicIPOnVM1AndVM2:
            Type: NetAdapter
            TestAdapter: vm.[1-2].vnic.[1]
            IPv4: auto

        VerifyTrafficBetweenVM1AndVM2:
            Type          : "Traffic"
            ToolName      : "ping"
            TestAdapter   : "vm.[2].vnic.[1]"
            SupportAdapter: "vm.[1].vnic.[1]"
            TestDuration  : "10"

        ConfigureVnicIPOnVM3AndVM4:
            Type: NetAdapter
            TestAdapter: vm.[3-4].vnic.[1]
            IPv4: auto

        VerifyTrafficBetweenVM3AndVM4:
            Type          : "Traffic"
            ToolName      : "ping"
            TestAdapter   : "vm.[4].vnic.[1]"
            SupportAdapter: "vm.[3].vnic.[1]"
            TestDuration  : "10"

StateSynchAfterRestartingControllerServiceFromAllNSXControllers:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchAfterRestartingControllerServiceFromAllNSXControllers'
    Version: "2"
    TCMSId: ''
    Priority: 'P1'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify state synch working between MP and CCP after restarting
    controller service from all NSXController nodes'
    Procedure: '1. Register 3 CCP nodes to 3 MP node cluster
                2. Add 2 HV to MP node
                3. Create logical switch-1 and logical port-1 from NSXManager-1 and
                verify the corresponding realised state on all CCP nodes
                4. Restart controller service from all NSXControllers
                5. Create logical port-2 on logical switch-1 from MP cluster
                6. Create logical port-3 on logical switch-1 from MP cluster
                7. Verify logical port-2 and logical port-3 is getting realized on all CCP nodes'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster.'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'Y'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads

        Sequence:
            - - MapNSXManager1ToCluster
            - - WaitForClusterStatusStableOnNode1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - StopController1
            - - StopController2
            - - StopController3
            - - StartController3
            - - StartController2
            - - StartController1
            - - VerifyCCPClusterStatusAfterRestart
            - - CreateLP02OnLS01FromNode2
            - - CreateLP03OnLS01FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        WaitForClusterStatusStableOnNode1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLP02OnLS01FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLP03OnLS01FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyCCPClusterStatusAfterRestart:
            <<: *VERIFY_THREE_NODE_CCP_CLUSTER_STATUS
            noofretries: 3
            sleepbetweenretry: 60

StateSynchVerificationAfterNetworkPartitioningForMoreThanFiveMinutes:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchVerificationAfterNetworkPartitioningForMoreThanFiveMinutes'
    Version: "2"
    TCMSId: ''
    Priority: 'P0'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify full state synch working between 3 node MP cluster and 3 node CCP cluster'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and logical port-1 from NSXManager-1 and
                  verify the corresponding realised state on all CCP nodes
                - Block all three CCP node traffic from all three MP nodes
                - Create logical port-2 on logical switch-1 from NSXManager-2
                - Create logical port-3 on logical switch-1 from NSXManager-3
                - Wait for more than 5 minutes and then unblock all three CCP
                  node traffic from all three MP nodes
                - Verify all three logical ports are getting created and
                  getting realized on CCP cluster'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads
        Sequence:
            - - GetFullSyncCountBeforeTestOnNSXController1
            - - GetFullSyncCountBeforeTestOnNSXController2
            - - GetFullSyncCountBeforeTestOnNSXController3
            - - MapNSXManager1ToCluster
            - - Wait_for_cluster_status_STABLE_on_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - BlockNSXController1TrafficFromNSXManager1
            - - BlockNSXController1TrafficFromNSXManager2
            - - BlockNSXController1TrafficFromNSXManager3
            - - BlockNSXController2TrafficFromNSXManager1
            - - BlockNSXController2TrafficFromNSXManager2
            - - BlockNSXController2TrafficFromNSXManager3
            - - BlockNSXController3TrafficFromNSXManager1
            - - BlockNSXController3TrafficFromNSXManager2
            - - BlockNSXController3TrafficFromNSXManager3
            - - CreateLogicalPort02FromNode2
            - - CreateLogicalPort03FromNode3
            - - UnblockNSXController1TrafficFromNSXManager1
            - - UnblockNSXController1TrafficFromNSXManager2
            - - UnblockNSXController1TrafficFromNSXManager3
            - - UnblockNSXController2TrafficFromNSXManager1
            - - UnblockNSXController2TrafficFromNSXManager2
            - - UnblockNSXController2TrafficFromNSXManager3
            - - UnblockNSXController3TrafficFromNSXManager1
            - - UnblockNSXController3TrafficFromNSXManager2
            - - UnblockNSXController3TrafficFromNSXManager3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - VerifyFullSyncCountAfterTestOnNSXController1
            - - VerifyFullSyncCountAfterTestOnNSXController2
            - - VerifyFullSyncCountAfterTestOnNSXController3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_for_cluster_status_STABLE_on_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        CreateLogicalPort02FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLogicalPort03FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        BlockNSXController1TrafficFromNSXManager2:
           <<: *BlockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        BlockNSXController1TrafficFromNSXManager3:
           <<: *BlockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        BlockNSXController2TrafficFromNSXManager2:
           <<: *BlockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        BlockNSXController2TrafficFromNSXManager3:
           <<: *BlockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        BlockNSXController3TrafficFromNSXManager2:
           <<: *BlockNSXController3TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        BlockNSXController3TrafficFromNSXManager3:
           <<: *BlockNSXController3TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        UnblockNSXController1TrafficFromNSXManager1:
           <<: *UnblockNSXController1TrafficFromNSXManager1
           sleepbetweenworkloads: 360

        UnblockNSXController1TrafficFromNSXManager2:
           <<: *UnblockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        UnblockNSXController1TrafficFromNSXManager3:
           <<: *UnblockNSXController1TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        UnblockNSXController2TrafficFromNSXManager2:
           <<: *UnblockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        UnblockNSXController2TrafficFromNSXManager3:
           <<: *UnblockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

        UnblockNSXController3TrafficFromNSXManager2:
           <<: *UnblockNSXController2TrafficFromNSXManager1
           TestNSX: nsxmanager.[2]

        UnblockNSXController3TrafficFromNSXManager3:
           <<: *UnblockNSXController3TrafficFromNSXManager1
           TestNSX: nsxmanager.[3]

StateSynchTopicHeartbeatIncrementScenario_1:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchTopicHeartbeatIncrementScenario_1'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify full state synch working between 3 node MP cluster and 3 node CCP cluster'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and logical port-1 from NSXManager-1 and
                  verify the corresponding realized state on all CCP nodes
                - Poweroff NSXManager-1
                - Create logical port-2 on logical switch-1 from NSXManager-2 and
                  verify the corresponding realized state on all CCP nodes
                - Poweroff NSXManager-2
                - Poweroff NSXManager-3
                - Poweron NSXManager-1
                - Poweron NSXManager-2
                - Poweron NSXManager-3
                - Create logical port-3 on logical switch-1 from NSXManager-3
                - Verify all three logical ports are getting created and
                  getting realized on CCP cluster'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads
        Sequence:
            - - GetFullSyncCountBeforeTestOnNSXController1
            - - GetFullSyncCountBeforeTestOnNSXController2
            - - GetFullSyncCountBeforeTestOnNSXController3
            - - MapNSXManager1ToCluster
            - - Wait_For_Cluster_Status_Stable_On_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - PowerOffMP_Node1
            - - CreateLP02OnLS01FromNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode3
            - - PowerOffMP_Node2
            - - PowerOffMP_Node3
            - - PowerOnMP_Node1
            - - PowerOnMP_Node2
            - - PowerOnMP_Node3
            - - Wait_For_Cluster_Status_Stable_On_Node1_After_Reboot
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLP03OnLS01FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - VerifyFullSyncCountAfterTestOnNSXController1
            - - VerifyFullSyncCountAfterTestOnNSXController2
            - - VerifyFullSyncCountAfterTestOnNSXController3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_For_Cluster_Status_Stable_On_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_For_Cluster_Status_Stable_On_Node1_After_Reboot:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 120

        CreateLP02OnLS01FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLP03OnLS01FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01And02InfoOnCCPNode3:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

StateSynchTopicHeartbeatIncrementScenario_2:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchTopicHeartbeatIncrementScenario_2'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_4ESX
    Summary: 'Verify full state synch working between 3 node MP cluster and 3 node CCP cluster'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Create logical switch-1 and logical port-1 from NSXManager-1 and
                  verify the corresponding realized state on all CCP nodes
                - Network partition NSXManager-1 from NSXManager-2 and NSXManager-3
                - Create logical port-2 on logical switch-1 from NSXManager-2 and
                  verify the corresponding realized state on all CCP nodes
                - Network partition NSXManager-2 from NSXManager-3
                - Reset network partition between all NSXManager nodes
                - Create logical port-3 on logical switch-1 from NSXManager-3
                - Verify all three logical ports are getting created and
                  getting realized on CCP cluster'
    ExpectedResult: 'All three logical ports should get created and get realized on CCP cluster'
    Duration: '300'
    Tags: 'nsxmanager,statesync,3mp_3ccp_4esx_cat'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MessagingWorkloads
        Sequence:
            - - SetProtonServiceIdFor_Node1
            - - GetFullSyncCountBeforeTestOnNSXController1
            - - GetFullSyncCountBeforeTestOnNSXController2
            - - GetFullSyncCountBeforeTestOnNSXController3
            - - MapNSXManager1ToCluster
            - - Wait_For_Cluster_Status_Stable_On_Node1
            - - SetupThreeNodeCCPCluster
            - - VerifyCCPClusterStatusActive
            - - GetClients
            - - VerifyClientList
            - - VerifyClientByTypeHv
            - - VerifyClientByTypeCCP
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
            - - CreateLogicalSwitch01From_Node1
            - - CreateLP01OnLS01FromNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01InfoOnCCPNode3
            - - BlockMPNode2Traffic_On_Node1
              - BlockMPNode3Traffic_On_Node1
            - - VerifyMPClusterStatusUnknownOnNode1
            - - CreateLP02OnLS01FromNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode1
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode2
            - - VerifyLogicalSwitchPort01And02InfoOnCCPNode3
            - - BlockMPNode3TrafficOnNode2
            - - VerifyMPClusterStatusUnknownOnNode1
            - - UnBlockMPNode2Traffic_On_Node1
              - UnBlockMPNode3Traffic_On_Node1
              - UnBlockMPNode3TrafficOnNode2
            - - RestartProtonServiceOn_Node1
            - - RestartProtonServiceOn_Node2
            - - RestartProtonServiceOn_Node3
            - - Wait_For_Cluster_Status_Stable_On_Node1_After_Proton_Restart
            - - Wait_For_Cluster_Status_Stable_On_Node2
            - - Wait_For_Cluster_Status_Stable_On_Node3
            - - CreateLP03OnLS01FromNode3
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode1
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode2
            - - VerifyLogicalSwitchPort0102And03InfoOnCCPNode3
            - - VerifyFullSyncCountAfterTestOnNSXController1
            - - VerifyFullSyncCountAfterTestOnNSXController2
            - - VerifyFullSyncCountAfterTestOnNSXController3
            - - PingClient_1
            - - PingClient_2
            - - PingClient_3
            - - PingClient_4
            - - PingClient_5
            - - VerifyHeartbeatStatusOfClient1
            - - VerifyHeartbeatStatusOfClient2
            - - VerifyHeartbeatStatusOfClient3
            - - VerifyHeartbeatStatusOfClient4
            - - VerifyHeartbeatStatusOfClient5
        ExitSequence:
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLogicalSwitchFrom_Node1

        Wait_For_Cluster_Status_Stable_On_Node1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        Wait_For_Cluster_Status_Stable_On_Node1_After_Proton_Restart:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 120

        CreateLP02OnLS01FromNode2:
            <<: *CREATE_LP02_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[2]

        CreateLP03OnLS01FromNode3:
            <<: *CREATE_LP03_ON_LS01_FROM_NODE1
            TestNSX: nsxmanager.[3]

        VerifyLogicalSwitchPort01InfoOnCCPNode1:
            <<: *VERIFY_LP01_ON_CCP

        VerifyLogicalSwitchPort01InfoOnCCPNode2:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01InfoOnCCPNode3:
            <<: *VERIFY_LP01_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort01And02InfoOnCCPNode1:
            <<: *VERIFY_LP01AND02_ON_CCP
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort01And02InfoOnCCPNode2:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort01And02InfoOnCCPNode3:
            <<: *VERIFY_LP01AND02_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode1:
            <<: *VERIFY_LP0102AND03_ON_CCP
            sleepbetweenworkloads: 60

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode2:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE2

        VerifyLogicalSwitchPort0102And03InfoOnCCPNode3:
            <<: *VERIFY_LP0102AND03_ON_CCP
            Testclusternode: *NSXCONTROLLER_CLUSTERNODE3

        BlockMPNode3TrafficOnNode2:
            Type: 'NSX'
            TestNSX: 'nsxmanager.[2]'
            node_network_partitioning:
                operation: 'set'
                manager_ip: 'nsxmanager.[3]'
                execution_type: 'cli'

        UnBlockMPNode3TrafficOnNode2:
            Type: 'NSX'
            TestNSX: 'nsxmanager.[2]'
            node_network_partitioning:
                operation: 'reset'
                manager_ip: 'nsxmanager.[3]'
                execution_type: 'cli'

        VerifyMPClusterStatusUnknownOnNode1:
            <<: *VERIFY_MP_CLUSTER_STATUS_UNKNOWN_ON_NODE1
            sleepbetweenworkloads: 120

        VerifyMPClusterStatusUnknownOnNode2:
            <<: *VERIFY_MP_CLUSTER_STATUS_UNKNOWN_ON_NODE1
            TestCluster: 'nsxmanager.[2].cluster.[1]'

        VerifyMPClusterStatusUnknownOnNode3:
            <<: *VERIFY_MP_CLUSTER_STATUS_UNKNOWN_ON_NODE1
            TestCluster: 'nsxmanager.[3].cluster.[1]'

StateSynchVerificationUsingL3:
    Product: 'NSXTransformers'
    Component: 'DCNandStateSynch'
    Category: 'ManagementPlatform'
    TestName: 'StateSynchVerificationUsingL3'
    Version: "2"
    TCMSId: ''
    Priority: 'P2'
    PMT: ''
    Testcaselevel: 'Functional'
    Testcasetype: 'Functional'
    QCPath:  'MPCCPCommunication'
    TestbedSpec: *3MP_3CCP_1EDGE_4ESX
    Summary: 'Verify state synch functionality using logical router and logical router ports'
    Procedure: '  - Register 3 CCP nodes to 3 MP node cluster
                - Add 2 HV to MP node
                - Register 1 Edge with MP cluster
                - Create two logical switches and perform VIF attachment to two VMs using those two LS
                - Create additional two logical ports on logical switches created in previous step
                - Create one logical router, add two logical router ports and attach them to LPs created in previous step
                - Add routes to the two VMs
                - Ping those two VMs from each other'
    ExpectedResult: 'VMs should be able to ping each other'
    Duration: '300'
    Tags: 'nsxmanager,statesync'
    AutomationLevel: 'Automated'
    Developer: 'dgargote'
    FullyAutomatable: 'Y'
    Status: 'Execution Ready'
    PartnerFacing: 'N'
    WORKLOADS:
        <<: *MPClusteringConfigurationWorkloads
        <<: *MPClusteringL2Workloads
        <<: *MPClusteringVerificationWorkloads
        <<: *ApplianceManagementWorkloads
        <<: *CCPClusteringConfigurationWorkloads
        <<: *MPClusteringL3Workloads
        Sequence:
            - - CreateTransportNodesFrom_Node1
            - - CreateLogicalSwitch01From_Node1
            - - CreateLogicalSwitch02From_Node1
            - - CreateLS1Port
            - - CreateLS2Port
            - - AddVM1Vnic1ToLS1
            - - AddVM2Vnic1ToLS2
            - - DiscoverLport1FromVM1Vnic1
            - - DiscoverLport2FromVM2Vnic1
            - - ConfigureVM1Vnic1IP-192.168.1.10
            - - ConfigureVM2Vnic1IP-192.168.2.10
            - - CreateFabricProfileForEdge
            - - DiscoverEdgeNodeId1
            - - CreateEdgeCluster
            - - CreateLR1
            - - CreateLR1P1
            - - CreateLR1P2
            - - AddRouteVM1ToVM2
            - - AddRouteVM2ToVM1
            - - PingVM1ToVM2
            - - PingVM2ToVM1
        ExitSequence:
            - - VifDetachment01
            - - DeleteVnic1FromVM1
            - - DeleteVnic1FromVM2
            - - DeleteLogicalPortFrom_Node1
            - - DeleteLR1P1
            - - DeleteLR1P2
            - - DeleteLR1
            - - DeleteLogicalSwitchFrom_Node1
            - - DeleteTransportNodesFrom_Node1
            - - DeleteEdgeCluster

        CreateTransportNodesFrom_Node1: *CREATE_TRANSPORT_NODE_01--ESX

        WaitForClusterStatusStableOnNode1:
            <<: *WAIT_STABLE_NODE_1
            sleepbetweenworkloads: 20

        VifDetachment01: *VIF_DETACHMENT_01--ESX
