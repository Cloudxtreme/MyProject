VerifyNSXManagerVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSXManager Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSXManager Version'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show version" command'
  ExpectedResult: 'Correct NSXManager version is shown'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyNSXVersion"]

    VerifyNSXVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      get_version:
        'version[?]equal_to': 'nsxmanager.[1]->version'

VerifyServiceStates:
    Product: 'NSXTransformers'
    Component: 'MPInstall'
    Category: 'NSXInstall'
    Developer: "prashants"
    Version: "2"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    Duration: '5'
    Tags: 'nsxmanager,CLI,cat,p0'
    Partnerfacing: "N"
    Priority: "P0"
    QCPath: ""
    TestName: "Verify Services on NSXManager after install"
    Summary: "Verify Services on NSXManager after install"
    Procedure: '- Login to NSXManager with default credentials
                - Execute "show services" command'
    ExpectedResult: 'Correct Service & Servicestate is shown'
    TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
    WORKLOADS:
        Sequence:
             - ['SetServiceId']
             - ['VerifyServiceStates']
        SetServiceId:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            nsxservice:
              '[1]':
                  map_object: true
                  id_: 'all'
        VerifyServiceStates:
            Type: "Service"
            TestService: "nsxmanager.[1].nsxservice.[1]"
            execution_type: 'cli'
            get_service_state:
                'table[?]contain_once':
                    - service_name: 'appmgmt'
                      service_state: 'running'
                    - service_name: 'httpd'
                      service_state: 'running'
                    - service_name: 'locator'
                      service_state: 'stopped'
                    - service_name: 'ntp'
                      service_state: 'running'
                    - service_name: 'proton'
                      service_state: 'running'
                    - service_name: 'rabbitmq'
                      service_state: 'running'
                    - service_name: 'snmp'
                      service_state: 'running'
                    - service_name: 'sshd'
                      service_state: 'running'
                    - service_name: 'syslog'
                      service_state: 'running'

VerifyAutoConfVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Autoconf Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Autoconf Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "autoconf --version" command'
  ExpectedResult: 'Verify correct version of autoconf seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyAutoconfVersion"]

    VerifyAutoconfVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'autoconf'
      verify_application_version:
        'version[?]equal_to': '2.67'
        'tag[?]equal_to': 'autoconf'

VerifyBisonVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Bison Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Bison Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "bison --version" command'
  ExpectedResult: 'Verify correct version of  bison seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyBisonVersion"]

    VerifyBisonVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'bison'
      verify_application_version:
        'version[?]equal_to': '2.4.3'
        'tag[?]equal_to': 'bison'

VerifyErlangVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Erlang Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Erlang Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "cat /usr/lib/erlang/releases/RELEASES" command'
  ExpectedResult: 'Verify correct version of erlang seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyErlangVersion"]

    VerifyErlangVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'erlang'
      verify_application_version:
        'version[?]equal_to': '5.9.3.1'
        'tag[?]equal_to': 'APN'

VerifyGccVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify GCC Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify GCC Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "gcc --version" command'
  ExpectedResult: 'Verify correct version of gcc seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyGccVersion"]

    VerifyGccVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'gcc'
      verify_application_version:
        'version[?]equal_to': '4.5.1'
        'tag[?]equal_to': 'gcc'

VerifyJavaVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Java Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Java Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "java -version" command'
  ExpectedResult: 'Verify correct version of java seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyJavaVersion"]

    VerifyJavaVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'java'
      verify_application_version:
        'version[?]equal_to': '1.7.0_67'
        'tag[?]equal_to': 'java'

VerifyKernelVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Kernel Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Kernel Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "cat /proc/version" command'
  ExpectedResult: 'Verify correct version of kernel seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyKernelVersion"]

    VerifyKernelVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'kernel'
      verify_application_version:
        'version[?]equal_to': '3.4.30'
        'tag[?]equal_to': 'Linux'

VerifyLibtoolVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Libtool Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Libtool Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "libtool --version" command'
  ExpectedResult: 'Verify correct version of libtool seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLibtoolVersion"]

    VerifyLibtoolVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'libtool'
      verify_application_version:
        'version[?]equal_to': '2.2.10'
        'tag[?]equal_to': 'libtool'

VerifyPerlVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Perl Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Perl Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "perl --version" command'
  ExpectedResult: 'Verify correct version of perl seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyPerlVersion"]

    VerifyPerlVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'perl'
      verify_application_version:
        'version[?]equal_to': '5.16.2'
        'tag[?]equal_to': 'perl'

VerifyPythonVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Python Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Python Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "python --version" command'
  ExpectedResult: 'Verify correct version of python seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyPythonVersion"]

    VerifyPythonVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'python'
      verify_application_version:
        'version[?]equal_to': '2.7.6'
        'tag[?]equal_to': 'Python'

VerifyRabbitMQVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify RabbitMQ Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify RabbitMQ Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "su - urabbit -c "/usr/sbin/rabbitmqctl status |
                grep RabbitMQ""'
  ExpectedResult: 'Verify correct version of rabbitmq seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyRabbitmqVersion"]

    VerifyRabbitmqVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'rabbitmq'
      verify_application_version:
        'version[?]equal_to': '3.3.5'
        'tag[?]equal_to': 'RabbitMQ'

VerifySyslogVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Syslog Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Syslog Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "rsyslogd -version" command'
  ExpectedResult: 'Verify correct version of rsyslogd seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyRsyslogdVersion"]

    VerifyRsyslogdVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'rsyslogd'
      verify_application_version:
        'version[?]equal_to': '7.4.6'
        'tag[?]equal_to': 'rsyslogd'

VerifyVIMVersion:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify VIM Version'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify VIM Version'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "vim --version" command'
  ExpectedResult: 'Verify correct version of vim seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyVimVersion"]

    VerifyVimVersion:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'vim'
      verify_application_version:
        'version[?]equal_to': '7.3'
        'tag[?]equal_to': 'VIM'

VerifyApplicationProcessAppmgmt:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Application Service or Process Appmgmt'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Application Service or Process Appmgmt'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e"
              - Execute "ps -eo user,cmd | grep appmgmt-tcserver | wc -l" for appmgmt service'
  ExpectedResult: 'appmgmt process count shown correctly'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyAppmgmtService"]

    VerifyAppmgmtService:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'appmgmt'
      verify_application_processes:
        'process_count[?]equal_to': '3'

VerifyApplicationProcessUlocator:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Application Service or Process Locator'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Application Service or Process Locator'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e"
              - Execute "ps -eo user,cmd | grep ulocator | grep clustering-utils | wc -l" for locator service'
  ExpectedResult: 'locator process count shown correctly'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLocatorService"]

    VerifyLocatorService:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'locator'
      verify_application_processes:
        'process_count[?]equal_to': '0'

VerifyApplicationProcessNTP:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Application Service or Process NTP'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Application Service or Process NTP'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e"
              - Execute "ps -eo user,cmd | grep /usr/sbin/ntpd | wc -l" for ntp service'
  ExpectedResult: 'ntp process count shown correctly'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyNtpService"]

    VerifyNtpService:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'ntp'
      verify_application_processes:
        'process_count[?]equal_to': '2'

VerifyApplicationProcessProton:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Application Service or Process Proton'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Application Service or Process Proton'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e"
              - Execute "ps -eo user,cmd | grep uproton | grep proton-tcserver | wc -l" for proton service'
  ExpectedResult: 'proton process count shown correctly'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyProtonService"]

    VerifyProtonService:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'proton'
      verify_application_processes:
        'process_count[?]equal_to': '2'

VerifyApplicationProcessProxy:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Application Service or Process Proxy'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Application Service or Process Proxy'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e"
              - Execute "ps -eo user,cmd | grep urproxy | grep proxy-tcserver| wc -l" for proxy service'
  ExpectedResult: 'proton process count shown correctly'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyProxyService"]

    VerifyProxyService:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'proxy'
      verify_application_processes:
        'process_count[?]equal_to': '2'

VerifyApplicationProcessRabbitMQ:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Application Service or Process RabbitMQ'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Application Service or Process RabbitMQ'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e"
              - Execute "ps -U urabbit | wc -l" for rabbitmq service'
  ExpectedResult: 'rabbitmq process count shown correctly'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyRabbitmqService"]

    VerifyRabbitmqService:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'rabbitmq'
      verify_application_processes:
        'process_count[?]equal_to': '5'

VerifyApplicationProcessSNMP:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Application Service or Process SNMP'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Application Service or Process SNMP'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e"
              - Execute "ps -eo user,cmd | grep /usr/local/sbin/snmpd | wc -l" for snmp service'
  ExpectedResult: 'snmp process count shown correctly'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifySnmpService"]

    VerifySnmpService:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'snmp'
      verify_application_processes:
        'process_count[?]equal_to': '2'

VerifyApplicationProcessSSH:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Application Service or Process SSH'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Application Service or Process SSH'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e"
              - Execute "ps -eo user,cmd | grep /usr/sbin/sshd | wc -l" for ssh service'
  ExpectedResult: 'sshd process count shown correctly'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifySshdService"]

    VerifySshdService:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'sshd'
      verify_application_processes:
        'process_count[?]equal_to': '2'

VerifyApplicationProcessSyslog:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Application Service or Process Syslog'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Application Service or Process Syslog'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e"
              - Execute "ps -eo user,cmd | grep /usr/local/sbin/rsyslogd | wc -l" for syslog service'
  ExpectedResult: 'syslog process count shown correctly'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifySyslogService"]

    VerifySyslogService:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      application_name: 'syslog'
      verify_application_processes:
        'process_count[?]equal_to': '2'

VerifyNSXManagerInterfaces:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Show Interface command on NSX Manager'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Show Interfaces command on NSX Manager'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show intergaces" command'
  ExpectedResult: 'Correct output shown for the commands'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'dbhatewara'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyShowInterfaces"]

    VerifyShowInterfaces:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      show_interfaces:
        'interfaces[?]contains':
          - ipv4: 'nsxmanager.[1]->manager_ip'
            vnic_state: 'up'
          - ipv4: '127.0.0.1'
            vnic_state: 'up'

VerifyNSXManagerInterfaceMgmt:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Show Interface mgmt command on NSX Manager'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Show Interface mgmt command on NSX Manager'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show intergace mgmt" command'
  ExpectedResult: 'Correct output shown for the commands'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyShowInterfaceMgmt"]

    VerifyShowInterfaceMgmt:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      vnic_name: 'mgmt'
      verify_show_interface:
        'ip4[?]equal_to': 'nsxmanager.[1]->manager_ip'
        'vnic_state[?]equal_to': 'up'

VerifyNSXManagerInterfaceLo:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Show Interface Lo command on NSX Manager'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Show Interface lo command on NSX Manager'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show intergace lo" command'
  ExpectedResult: 'Correct output shown for the commands'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyShowInterfaceLo"]

    VerifyShowInterfaceLo:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      vnic_name: 'lo'
      verify_show_interface:
        'ip4[?]equal_to': '127.0.0.1'
        'vnic_state[?]equal_to': 'up'

VerifyNSXManagerCertificate:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Certificate command on NSX Manager'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Certificate command on NSX Manager'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show api certificate" command'
  ExpectedResult: 'Correct output shown for the commands'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyShowCertificate"]

    VerifyShowCertificate:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      thumbprint: ' '
      verify_show_certificate:
        'cert_found[?]equal_to': 'True'

VerifyNSXManagerThumbprint:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSX Thumbprint'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Thumbprint'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show api certificate thumbprint" command'
  ExpectedResult: 'Correct output shown for the commands'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyShowThumbprint"]

    VerifyShowThumbprint:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      thumbprint: 'thumbprint'
      verify_show_certificate:
        'thumbprint_found[?]equal_to': 'True'

VerifySystemMemory:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSXManager System Configuration - Memory'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSXManager System Configuration - Memory'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show system memory" command'
  ExpectedResult: 'The various Memory details are seen.
                   MemTotal should be 12 GB and SwapTotal shuold be 2GB.'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifySystemMemory"]

    VerifySystemMemory:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      system_parameter: 'memory'
      get_system_config:
        'memory_total[?]equal_to': '12'
        'swap_total[?]equal_to': '2'

VerifySystemCPU:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSXManager System Configuration - CPU'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSXManager System Configuration - CPU'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show system cpu" command'
  ExpectedResult: 'The number of cpus for the nsx manager should be 4.'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifySystemCpu"]

    VerifySystemCpu:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      system_parameter: 'cpu'
      get_system_config:
        'total_cpus[?]equal_to': '4'

VerifySystemStorage:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSXManager System Configuration - Storage'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSXManager System Configuration - Storage'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show system storage" command'
  ExpectedResult: 'The total storage on all the disks for the nsx manager
                   should be as expected.'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifySystemStorage"]

    VerifySystemStorage:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      system_parameter: 'storage'
      get_system_config:
        'sda2_size[?]equal_to': '4.0'
        'tmpfs_size[?]equal_to': '5.9'
        'sda6_size[?]equal_to': '9.9'
        'sda8_size[?]equal_to': '16'

VerifySystemNetwork:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSXManager System Configuration - Network'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSXManager System Configuration - Network'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show system network-stats" command'
  ExpectedResult: 'The sent and received packets on the nsx manager should be
                   greater than 0'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifySystemNetworkStats"]

    VerifySystemNetworkStats:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      system_parameter: 'network-stats'
      get_system_config:
        'packets_received[?]>': '0'
        'packets_sent[?]>': '0'

VerifySystemUptime:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSXManager System Configuration - Uptime'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify System Configuration - Uptime'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show system uptime" command'
  ExpectedResult: 'The uptime of the system is valid, that is at-least one
                   amongst the days, hours, minutes or seconds,
                   is greater than 0'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifySystemUptime"]

    VerifySystemUptime:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      system_parameter: 'uptime'
      get_system_config:
        'valid_up_time[?]equal_to': 'True'

VerifyHostname:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSXManager hostname'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Hostname'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show hostnmae" command'
  ExpectedResult: 'Verify that correct hostname "nimbus-cloud-nsxmanager" returned'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'prashants'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyHostname"]

    VerifyHostname:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      read_hostname:
        'hostname[?]equal_to': 'vdnet-nsxmanager'

VerifyTacacsServerAuthentication:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Tacacs Server Authentication'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Tacacs Server Authentication'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show tacacs-server-authentication" command'
  ExpectedResult: 'Command output should be chap'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'nnandurkar'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyTacacsServerAuth"]

    VerifyTacacsServerAuth:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      get_server_auth:
        'authtype[?]equal_to': 'chap'

VerifyAppmgmtLogErrors:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify the Error Warning Exceptions in Appmgmt Log'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Appmgmgt Log for any Errors'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show log appmgmt.log" command'
  ExpectedResult: 'Verify that there are no Error, Warning or Exception
                Messages in the appmgmt.log'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLogAppmgmtError"]
      - ["VerifyLogAppmgmtWarning"]
      - ["VerifyLogAppmgmtException"]

    VerifyLogAppmgmtError:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'appmgmt.log'
      search_string: 'Error'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogAppmgmtWarning:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'appmgmt.log'
      search_string: 'Warning'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogAppmgmtException:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'appmgmt.log'
      search_string: 'Exception'
      search_log:
        'string_count[?]equal_to': '0'

VerifyAuthLogErrors:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify the Error Warning Exceptions in Auth Log'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Auth Log for any Errors'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show log auth.log" command'
  ExpectedResult: 'Verify that there are no Error, Warning or Exception
                Messages in the auth.log'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLogAuthError"]
      - ["VerifyLogAuthWarning"]
      - ["VerifyLogAuthException"]

    VerifyLogAuthError:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'auth.log'
      search_string: 'Error'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogAuthWarning:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'auth.log'
      search_string: 'Warning'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogAuthException:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'auth.log'
      search_string: 'Exception'
      search_log:
        'string_count[?]equal_to': '0'

VerifyCliLogErrors:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify the Error Warning Exceptions in Cli Log'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Cli Log for any Errors'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show log cli.log" command'
  ExpectedResult: 'Verify that there are no Error, Warning or Exception
                Messages in the cli.log'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLogCliError"]
      - ["VerifyLogCliWarning"]
      - ["VerifyLogCliException"]

    VerifyLogCliError:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'cli.log'
      search_string: 'Error'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogCliWarning:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'cli.log'
      search_string: 'Warning'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogCliException:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'cli.log'
      search_string: 'Exception'
      search_log:
        'string_count[?]equal_to': '0'

VerifyGemfireLogErrors:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify the Error Warning Exceptions in Locator Log'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Gemfire Log for any Errors'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show log gemfire.log" command'
  ExpectedResult: 'Verify that there are no Error, Warning or Exception
                Messages in the gemfire.log'
  Duration: '300'
  Tags: 'nsxmanager,cat,p1'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLogGemfireError"]
      - ["VerifyLogGemfireWarning"]
      - ["VerifyLogGemfireException"]

    VerifyLogGemfireError:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'gemfire.log'
      search_string: 'Error'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogGemfireWarning:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'gemfire.log'
      search_string: 'Warning'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogGemfireException:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'gemfire.log'
      search_string: 'Exception'
      search_log:
        'string_count[?]equal_to': '0'

VerifyHttpdLogErrors:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify the Error Warning Exceptions in Httpd Log'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Httpd Log for any Errors'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show log httpd.log" command'
  ExpectedResult: 'Verify that there are no Error, Warning or Exception
                Messages in the httpd.log'
  Duration: '300'
  Tags: 'nsxmanager,cat,p1'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLogHttpdError"]
      - ["VerifyLogHttpdWarning"]
      - ["VerifyLogHttpdException"]

    VerifyLogHttpdError:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'httpd.log'
      search_string: 'Error'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogHttpdWarning:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'httpd.log'
      search_string: 'Warning'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogHttpdException:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'httpd.log'
      search_string: 'Exception'
      search_log:
        'string_count[?]equal_to': '0'

VerifyKernLogErrors:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify the Error Warning Exceptions in Kern Log'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Kern Log for any Errors'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show log kern.log" command'
  ExpectedResult: 'Verify that there are no Error, Warning or Exception
                Messages in the kern.log'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLogKernError"]
      - ["VerifyLogKernWarning"]
      - ["VerifyLogKernException"]

    VerifyLogKernError:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'kern.log'
      search_string: 'Error'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogKernWarning:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'kern.log'
      search_string: 'Warning'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogKernException:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'kern.log'
      search_string: 'Exception'
      search_log:
        'string_count[?]equal_to': '0'

VerifyLocatorLogErrors:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify the Error Warning Exceptions in Locator Log'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Locator Log for any Errors'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show log locator.log" command'
  ExpectedResult: 'Verify that there are no Error, Warning or Exception
                Messages in the locator.log'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLogLocatorError"]
      - ["VerifyLogLocatorWarning"]
      - ["VerifyLogLocatorException"]

    VerifyLogLocatorError:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'locator.log'
      search_string: 'Error'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogLocatorWarning:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'locator.log'
      search_string: 'Warning'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogLocatorException:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'locator.log'
      search_string: 'Exception'
      search_log:
        'string_count[?]equal_to': '0'

VerifySysLogErrors:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify the Error Warning Exceptions in Locator Log'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager SysLog for any Errors'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show log syslog" command'
  ExpectedResult: 'Verify that there are no Error, Warning or Exception
                Messages in the syslog'
  Duration: '300'
  Tags: 'nsxmanager,cat,p1'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyLogSysLogError"]
      - ["VerifyLogSysLogWarning"]
      - ["VerifyLogSysLogException"]

    VerifyLogSysLogError:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'syslog'
      search_string: 'Error'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogSysLogWarning:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'syslog'
      search_string: 'Warning'
      search_log:
        'string_count[?]equal_to': '0'

    VerifyLogSysLogException:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      content_type: 'log'
      file_name: 'syslog'
      search_string: 'Exception'
      search_log:
        'string_count[?]equal_to': '0'

VerifyClusterDetails:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSXManager Management Cluster Status'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Management Cluster Status'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show management-cluster status" command'
  ExpectedResult: 'Verify that correct single manager (self)
                   in the cluster is returned'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyClusterDetails"]

    VerifyClusterDetails:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      get_cluster_details:
        'node_1_ip[?]equal_to': 'nsxmanager.[1]->manager_ip'
        'nodes_in_cluster[?]equal_to': '1'
        'management_cluster_status': 'stable'

VerifyFileSystems:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSXManager File System Details'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify File System Details'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show file systems" command'
  ExpectedResult: 'The total storage on all the disks for the nsx manager
                    should be as expected.'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyFileSystemSize"]

    VerifyFileSystemSize:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      get_file_systems:
        'sda2_size[?]equal_to': '4GB'
        'tmpfs_size[?]equal_to': '6GB'
        'sda6_size[?]equal_to': '10GB'
        'sda8_size[?]equal_to': '16GB'

VerifyIpRoute:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Ip Route details'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager IP Route'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show ip route" command'
  ExpectedResult: 'Verify default gateway is seen'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyShowIpRoute"]

    VerifyShowIpRoute:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      get_ip_route:
        'gateway_matched[?]equal_to': '1'

VerifyInstallationFilesPresent:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify Installation Files Present'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify Installation Files Present'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "ls -l /etc/ssh/ssh_host_key" command
              - Execute "ls -l /common/configs/serial_number" command'
  ExpectedResult: 'The desired files /common/configs/serial_number &
                    /etc/ssh/ssh_host_key should be present.'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifySshHostKeyFile"]
      - ["VerifySerialNumberFile"]

    VerifySshHostKeyFile:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      file_name: '/etc/ssh/ssh_host_key'
      verify_file_present:
        'file_present[?]equal_to': 'True'

    VerifySerialNumberFile:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      file_name: '/common/configs/serial_number'
      verify_file_present:
        'file_present[?]equal_to': 'True'

VerifyAllPasswordEncrypted:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify all the passwords are Encrypted'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify all the passwords are Encrypted'
  Procedure: '- Login to NSXManager with default credentials
              - Login to root prompt using "st e" & password
              - Execute "cat /etc/passwd" command
              - Then verify if the password field contains character x'
  ExpectedResult: 'All the passwords are encrypted'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'smhalas'
  FullyAutomatable: 'Y'
  Status: 'Draft'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyPasswordEncryption"]

    VerifyPasswordEncryption:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      verify_password_encrypted:
        'user_with_un_encrypted_password[?]equal_to': 'None'

VerifyGlobalConfiguration:
  Product: 'NSXTransformers'
  Component: 'MPInstall'
  Category: 'NSXInstall'
  TestName: 'Verify NSX Manager Global Configuration'
  TCMSId: ''
  Priority: 'P0'
  Version: "2"
  PMT: ''
  Testcaselevel: 'Functional'
  Testcasetype: 'Functional'
  QCPath:  ''
  Summary: 'Verify NSX Manager Global Configuration'
  Procedure: '- Login to NSXManager with default credentials
              - Execute "show configuration global" command'
  ExpectedResult: 'Correct NSX-Manager global configuration is shown'
  Duration: '300'
  Tags: 'nsxmanager,cat,p0'
  AutomationLevel: 'Automated'
  Developer: 'nnandurkar'
  FullyAutomatable: 'Y'
  Status: 'Execution Ready'
  PartnerFacing: 'Y'
  TestbedSpec: *ONE_NSXMANAGER_ON_ONE_ESX
  WORKLOADS:
    Sequence:
      - ["VerifyNSXGlobalConfig"]

    VerifyNSXGlobalConfig:
      Type: 'NSX'
      TestNSX: 'nsxmanager.[1]'
      execution_type: 'cli'
      get_global_config:
        'hostname[?]equal_to': 'vdnet-nsxmanager'
        'gateway_matched[?]equal_to': '1'
        'ntpserver[?]equal_to': '127.127.1.0'
        'authtype[?]equal_to': 'chap'
