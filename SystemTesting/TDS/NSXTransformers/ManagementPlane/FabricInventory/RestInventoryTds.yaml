# All the data used in these test cases are mock
# Purpose is to test Fabric Inventory REST Apis
# Test cases with actual data is covered in End2End Tds
CRUDHost:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "InventoryManager"
    TestName: "RegisterHost"
    Version: "2"
    Summary: "Test to CRUD operations of host to NSX Manager"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "InventoryManager"
    Priority: "P0"
    Developer: "kchakraborty"
    Procedure: '1. Register host with NSX Manager
                2. Verify host registered with NSX Manager successfully'
    ExpectedResult: 'Host registered with NSX Manager successfully'
    Duration: '5'
    Tags: 'nsxmanager,cat'
    Partnerfacing: "Y"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHost"]
            - ["ReadHost"]
            - ["UpdateHost"]
            - ["ReadUpdatedHost"]
        ExitSequence:
            - ["UnregisterAllHosts"]

        RegisterHost:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                        - 192.168.10.10
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='
                '[2]':
                    resource_type: "HostNode"
                    name: 'TestRHELKVMHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                        - 192.168.10.11
                    external_id: 'a4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'RHELKVM'
                    host_msg_client_info:
                        account_name: 'test1'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

        ReadHost:
            Type: "Host"
            TestHost: "nsxmanager.[1].hostnode.[1]"
            read:
              'name[?]equal_to': 'TestESXIHost'
              'summary[?]equal_to': "Test CRUD APIs of host on NSX Manager"

        UpdateHost:
            Type: "Host"
            Testhost: "nsxmanager.[1].hostnode.[1]"
            reconfigure: true
            name: "Update-TestESXIHost"
            summary: "Updated summary"
            ip_addresses:
                - 192.168.10.100
            host_msg_client_info:
                account_name: 'Updatedtest'
                shared_secret: 'cvn-1-2-35'
                certificate: 'ia7WCS2wJhrhXGz0e7iFk7zFO9fM='

        ReadUpdatedHost:
            Type: "Host"
            TestHost: "nsxmanager.[1].hostnode.[1]"
            read:
              'name[?]equal_to': 'Update-TestESXIHost'
              'summary[?]equal_to': 'Updated summary'

        UnregisterAllHosts: *UNREGISTER_ALL_HOSTS

GetListOfHostNode:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "GetListOfInventoryObjects"
    Version: "2"
    Summary: "GetListOfInventoryObjects"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "InventoryManager"
    Priority: "P0"
    Developer: "kchakraborty"
    Procedure: '1. Register host with NSX Manager
                4. Get List of Hosts'
    ExpectedResult: 'List of Hosts'
    Duration: '5'
    Tags: 'nsxmanager,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHosts"]
            - ["VerifyHostList"]
        ExitSequence:
            - ["UnregisterAllHosts"]

        RegisterHosts:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                        - 192.168.10.10
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='
                '[2]':
                    resource_type: "HostNode"
                    name: 'TestRHELKVMHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                        - 192.168.10.11
                    external_id: 'a4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'RHELKVM'
                    host_msg_client_info:
                        account_name: 'test1'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWDS2wJhrhXGz0e7iFk7zFO9fM='

        VerifyHostList:
         Type: "Host"
         TestHost: "nsxmanager.[1].hostnode.[1]"
         node_type: "HostNode"
         get_hostnode_list:
          'result_count[?]equal_to': 2
          'results[?]contain_once':
             - name: TestRHELKVMHost
             - name: TestESXIHost

        UnregisterAllHosts: *UNREGISTER_ALL_HOSTS

RegisterHostWithBlankId:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "RegisterHostWithBlankId"
    Version: "2"
    Summary: "Verify Fabric Hosts registration fails for blank id "
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: '1. Register a Fabric Host to inventory with blank Id
                2. Verify if Fabric Host is registered successfully'
    ExpectedResult: 'Correct Error code and message thrown'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHostWithBlankID"]

        RegisterHostWithBlankID:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                        - 192.168.10.10
                    external_id: ''
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

RegisterHostWithBlankIp:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "RegisterHostWithBlankIp"
    Version: "2"
    Summary: "Verify Fabric Hosts registration fails for blank iP "
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: '1. Register a Fabric Host to inventory with blank ip
                2. Verify if Fabric Host is registered successfully'
    ExpectedResult: 'Correct Error code and message thrown'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHostWithBlankIP"]

        RegisterHostWithBlankIP:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                          - ""
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

RegisterHostWithBlankResourceType:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "RegisterHostWithBlankIp"
    Version: "2"
    Summary: "Verify Fabric Hosts registration fails for blank ressource type "
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: '1. Register a Fabric Host to inventory with ressource type
                2. Verify if Fabric Host is registered successfully'
    ExpectedResult: 'Correct Error code and message thrown'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHostWithBlankResourceType"]

        RegisterHostWithBlankResourceType:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            hostnode:
                '[1]':
                    resource_type: ""
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                          - "192.168.1.5"
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

RegisterHostWithWrongResourceType:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "RegisterHostWithWrongIp"
    Version: "2"
    Summary: "Verify Fabric Hosts registration fails for blank ressource type "
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: '1. Register a Fabric Host to inventory with ressource type
                2. Verify if Fabric Host is registered successfully'
    ExpectedResult: 'Correct Error code and message thrown'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHostWithWrongResourceType"]

        RegisterHostWithWrongResourceType:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            hostnode:
                '[1]':
                    resource_type: "WrongType"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                          - "192.168.1.5"
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

RegisterHostWithBlankOSType:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "RegisterHostWithBlankType"
    Version: "2"
    Summary: "Verify Fabric Hosts registration fails for blank OS type "
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: '1. Register a Fabric Host to inventory with blank OS type
                2. Verify if Fabric Host is registered successfully'
    ExpectedResult: 'Correct Error code and message thrown'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHostWithBlankType"]

        RegisterHostWithBlankType:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                          - 192.168.10.10
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: ''
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

RegisterHostWithIncorrectOSType:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "RegisterHostWithIncorrectOSType"
    Version: "2"
    Summary: "Verify Fabric Hosts registration fails for incorrect type "
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: '1. Register a Fabric Host to inventory with incorrect OS type
                2. Verify if Fabric Host is registered successfully'
    ExpectedResult: 'Correct Error code and message thrown'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHostWithIncorrectOSType"]

        RegisterHostWithIncorrectOSType:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                          - 192.168.10.10
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'WrongType'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

UpdateExistingHost:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "UpdateExistingHost"
    Version: "2"
    Summary: "To verify if existing host can be updated"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P1"
    Developer: "kchakraborty"
    Procedure: '1. Register Host with Nsx Manager
                2. Update the Host with valid values '
    ExpectedResult: 'Host can be updated sucessfully'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "Y"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHost"]
            - ["UpdateHost"]
            - ["ReadUpdatedHost"]
        ExitSequence:
            - ["UnregisterHost"]

        RegisterHost:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                        - 192.168.10.10
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

        UpdateHost:
            Type: "Host"
            Testhost: "nsxmanager.[1].hostnode.[1]"
            reconfigure: true
            resource_type: "HostNode"
            name: "Update-TestESXIHost"
            summary: "Updated summary"
            ip_addresses:
                - 192.168.10.20
            os_type: 'ESXI'
            host_msg_client_info:
                account_name: 'updatedtest'
                shared_secret: 'updatedcvn-1-2-3'
                certificate: 'updatediaWCaS2wJhrhXGz0e7iFk7zFO9fM='

        ReadUpdatedHost:
            Type: "Host"
            TestHost: "nsxmanager.[1].hostnode.[1]"
            read:
              'name[?]equal_to': 'Update-TestESXIHost'
              'summary[?]equal_to': 'Updated summary'

        UnregisterHost: *UNREGISTER_ALL_HOSTS

UpdateExistingNodeResourceType:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "UpdateExistingHost"
    Version: "2"
    Summary: "To verify if Resource Type can be updated"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P1"
    Developer: "kchakraborty"
    Procedure: '1. Register Host with Nsx Manager
                2. Update Resource Type '
    ExpectedResult: 'Correct Error code and message thrown'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "Y"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHost"]
            - ["UpdateResourceType"]
        ExitSequence:
            - ["UnregisterHost"]

        RegisterHost:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                        - 192.168.10.10
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

        UpdateResourceType:
            Type: "Host"
            Testhost: "nsxmanager.[1].hostnode.[1]"
            ExpectedResult:
                status_code: METHOD_NOT_ALLOWED
            reconfigure: true
            resource_type: "EdgeNode"
            name: "Update-TestESXIHost"
            summary: "Updated summary"
            ip_addresses:
                - 192.168.10.20
            os_type: 'ESXI'
            host_msg_client_info:
                account_name: 'updatedtest'
                shared_secret: 'updatedcvn-1-2-3'
                certificate: 'updatediaWCaS2wJhrhXGz0e7iFk7zFO9fM='

        UnregisterHost: *UNREGISTER_ALL_HOSTS

UpdateExistingNodeOsType:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "UpdateExistingHost"
    Version: "2"
    Summary: "To verify if Os Type can be updated"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P1"
    Developer: "kchakraborty"
    Procedure: '1. Register Host with Nsx Manager
                2. Update Os Type '
    ExpectedResult: 'Correct Error code and message thrown'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "Y"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHost"]
            - ["UpdateOsType"]
        ExitSequence:
            - ["UnregisterHost"]

        RegisterHost:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                        - 192.168.10.10
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

        UpdateOsType:
            Type: "Host"
            Testhost: "nsxmanager.[1].hostnode.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            reconfigure: true
            os_type: "RHELKVM"

        UnregisterHost: *UNREGISTER_ALL_HOSTS

AddExistingHostToMPNode:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "AddExistingHostToMPNode"
    Version: "2"
    Summary: "Verify Fabric Hosts registration fails for adding same host again "
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: '1. Register a Fabric Host to inventory
                2. Try to register the same host again to inventory'
    ExpectedResult: 'Correct Error code and message thrown'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["RegisterHost"]
            - ["RegisterHostWithSameId"]
        ExitSequence:
            - ["UnregisterHost"]

        RegisterHost:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            hostnode:
                '[1]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                          - 192.168.10.10
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

        RegisterHostWithSameId:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: BAD_REQUEST
            hostnode:
                '[2]':
                    resource_type: "HostNode"
                    name: 'TestESXIHost'
                    summary: "Test CRUD APIs of host on NSX Manager"
                    ip_addresses:
                        - 192.168.10.10
                    external_id: 'd4c70b3e-e0a5-479c-b3cb-dbfbc68612342'
                    os_type: 'ESXI'
                    host_msg_client_info:
                        account_name: 'test'
                        shared_secret: 'cvn-1-2-3'
                        certificate: 'iaWCS2wJhrhXGz0e7iFk7zFO9fM='

        UnregisterHost: *UNREGISTER_ALL_HOSTS

DeleteNonExistingHost:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "DeleteNonExistingHost"
    Version: "2"
    Summary: "To verify non-existing Host deletion throws error"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: '1. Try to delete a non existing host'
    ExpectedResult: 'Correct error code and error message is thrown by NSX manager'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["SetNonExistingHostId"]
            - ["DeleteNonExistingHost"]

        SetNonExistingHostId: *SET_NON_EXISTING_HOSTID

        DeleteNonExistingHost:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: NOT_FOUND
            deletehostnode: "nsxmanager.[1].hostnode.[1]"

UpdateNonExistingHost:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "UpdateNonExistingHost"
    Version: "2"
    Summary: "To verify non-existing Host updation throws error"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: '1. Try to update a non existing host'
    ExpectedResult: 'Correct error code and error message is thrown by NSX manager'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["SetNonExistingHostId"]
            - ["UpdateNonExistingHost"]

        SetNonExistingHostId: *SET_NON_EXISTING_HOSTID

        UpdateNonExistingHost:
            Type: "NSX"
            TestNSX: "nsxmanager.[1]"
            ExpectedResult:
                status_code: NOT_FOUND
            reconfigure: true
            name: "Update-TestESXIHost"

GetDetailsOfHostIncorrectExternalId:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "GetDetailsOfHostIncorrectExternalId"
    Version: "2"
    Summary: "To verify if Host details gets retrieved with incorrect Hypervisor external-id"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: 'Try to get details of a host with incorrect id '
    ExpectedResult: 'Correct error code and error message is thrown by NSX manager'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["SetNonExistingHostId"]
            - ["GetDetailsOfHost"]

        SetNonExistingHostId: *SET_NON_EXISTING_HOSTID

        GetDetailsOfHost:
            ReadHost:
            Type: "Host"
            TestHost: "nsxmanager.[1].hostnode.[1]"
            ExpectedResult:
                status_code: NOT_FOUND
            read:
                'resource_type[?]equal_to': 'Host'

GetDetailsOfVmIncorrectExternalId:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "GetDetailsOfVmIncorrectExternalId"
    Version: "2"
    Summary: "To verify if Vm details gets retrieved with incorrect external-id"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: 'Try to get details of a Vm with incorrect id '
    ExpectedResult: 'Correct error code and error message is thrown by NSX manager'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["SetNonExistingVmId"]
            - ["GetDetailsOfVm"]

        SetNonExistingVmId: *SET_NON_EXISTING_VMID

        GetDetailsOfVm:
            Type: "Inventory"
            TestInventory: "nsxmanager.[1].fabricvm.[1]"
            ExpectedResult:
                status_code: NOT_FOUND
            read:
                'resource_type[?]equal_to': 'vm'

GetDetailsOfVifIncorrectExternalId:
    Product: "NSXTransformers"
    Category: "ManagementPlatform"
    Component: "Inventory Manager"
    TestName: "GetDetailsOfVifIncorrectExternalId"
    Version: "2"
    Summary: "To verify if Vif details gets retrieved with incorrect external-id"
    ExpectedResult: "PASS"
    Status: "Execution Ready"
    AutomationLevel: "Automated"
    FullyAutomatable: "Y"
    TestcaseLevel: "Functional"
    TestcaseType: "Functional"
    QCPath: "Inventory"
    Priority: "P2"
    Developer: "kchakraborty"
    Procedure: 'Try to get details of a Vm with incorrect id '
    ExpectedResult: 'Correct error code and error message is thrown by NSX manager'
    Duration: '5'
    Tags: 'nsxmanager,management,Inventory,cat'
    Partnerfacing: "N"
    TestbedSpec:
        nsxmanager:
            '[1]':
               'ip': None
    WORKLOADS:
        Sequence:
            - ["SetNonExistingVifId"]
            - ["GetDetailsOfVif"]

        SetNonExistingVifId: *SET_NON_EXISTING_VIFID

        GetDetailsOfVif:
            Type: "Inventory"
            TestInventory: "nsxmanager.[1].fabricvif.[1]"
            ExpectedResult:
                status_code: NOT_FOUND
            read:
                'resource_type[?]equal_to': 'vif'
