#!/usr/bin/perl
########################################################################
# Copyright (C) 2013 VMWare, Inc.
# # All Rights Reserved
########################################################################
package TDS::EsxServer::VMKTCPIP::IPSecTds;

#
# This file contains the structured hash for the ipsec
# part of vmkernel tcpip module.
#
#

use FindBin;
use lib "$FindBin::Bin/..";
use TDS::Main::VDNetMainTds;
use Data::Dumper;

@ISA = qw(TDS::Main::VDNetMainTds);

my $testbedSpec = {
   host  => {
      '[1]'   => {
         vss   => {
            '[1]'   => {
               configureuplinks => "add",
               vmnicadapter => "host.[1].vmnic.[1]",
            },
         },
         portgroup => {
            '[1]' => {
               vss => "host.[1].vss.[1]",
            },
         },
         vmnic => {
            '[1]'   => {
               driver => "any",
            },
         },
         vmknic => {
            '[1]' => {
               portgroup => "host.[1].portgroup.[1]",
            },
         },
      },
      '[2]' => {
         vss   => {
            '[1]'   => {
               configureuplinks => "add",
               vmnicadapter => "host.[2].vmnic.[1]",
            },
         },
         portgroup => {
            '[1]' => {
               vss => "host.[1].vss.[1]",
            },
         },
         vmnic => {
            '[1]'   => {
               driver => "any",
            },
         },
         vmknic => {
            '[1]' => {
               portgroup => "host.[1].portgroup.[1]",
            },
         },
      },
   },
};


{
   # List of tests in this test category, refer the excel sheet TDS
   @TESTS = ("TCPIPSec","TCPDiscard","TCPNone", "UDPIPSec",
             "UDPDiscard", "UDPNone","ICMPIPSec","ICMPDiscard",
             "ICMPNone");

   %IPSec = (
      'TCPIPSec' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "TCPIPSec",
         Version          => "2" ,
         Summary          => "This test verifies the tcp traffic with ipsec SP and SA",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTCP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTCP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "tcp",
                  action => "ipsec",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "tcp",
                  action => "ipsec",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "tcp",
                  action => "ipsec",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "tcp",
                  action => "ipsec",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTCP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTCP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "tcp",
               L3Protocol     => "IPv6",
               PortNumber     => "2100",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "180",
               verification  => "Verification_1",
            },
            "Verification_1" => {
               'PktCapVerificaton' => {
                  verificationtype   => "pktcap",
                  target             => "host.[1].vmknic.[1]",
                  pktcount           => "100+",
               },
            },
         },
      },
      'TCPDiscard' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "TCPDiscard",
         Version          => "2" ,
         Summary          => "This test verifies that tcp traffic would be dropped when
                              ipsec spd rule is set to drop the traffic.",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['SetIPv61'],['SetIPv62'],['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic'],['Traffic1']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "SetIPv61" => {
               Type => "NetAdapter",
               TestAdapter => "host.[1].vmknic.[1]",
               ipv4 => "none",
               ipv6 => "add",
               ipv6addr => "static",
            },
            "SetIPv62" => {
               Type => "NetAdapter",
               TestAdapter => "host.[2].vmknic.[1]",
               ipv4 => "none",
               ipv6 => "add",
               ipv6addr => "static",
            },
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTCP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTCP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "tcp",
                  action => "discard",
                  sourceport => "2100",
                  destinationport => "0",
               },
            },
            "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "tcp",
                  action => "discard",
                  sourceport => "2100",
                  destinationport => "0",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "tcp",
                  action => "discard",
                  sourceport => "2100",
                  destinationport => "0",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "tcp",
                  action => "discard",
                  sourceport => "2100",
                  destinationport => "0",
               },
            },
             "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTCP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTCP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "tcp",
               L3Protocol     => "IPv6",
               PortNumber     => "2100",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "60",
               ExpectedResult => "FAIL",
            },
            "Traffic1" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "udp",
               L3Protocol     => "IPv6",
               PortNumber     => "2100",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "60",
            },
         },
      },
      'TCPNone' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "IPSec",
         Version          => "2" ,
         Summary          => "This test verifies that tcp traffic with ipsec
                             policies when SP for action is set to none",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTCP",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTCP",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "tcp",
                  action => "none",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "tcp",
                  action => "none",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "tcp",
                  action => "none",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "tcp",
                  action => "none",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTCP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTCP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "tcp",
               L3Protocol     => "IPv6",
               PortNumber     => "2100",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "180",
               ExpectedResult => "PASS",
            },
         },
      },
      'UDPIPSec' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "UDPIPSec",
         Version          => "2" ,
         Summary          => "This test verifies the udp traffic with ipsec SP and SA",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecUDP",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecUDP",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPOut",
                  direction => "out",
                  protocol => "udp",
                  action => "ipsec",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
             "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPIn",
                  direction => "in",
                  protocol => "udp",
                  action => "ipsec",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPIn",
                  direction => "in",
                  protocol => "tcp",
                  action => "ipsec",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPOut",
                  direction => "out",
                  protocol => "tcp",
                  action => "ipsec",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
             "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecUDP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecUDP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "udp",
               L3Protocol     => "IPv6",
               PortNumber     => "2100",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "180",
               verification  => "Verification_1",
            },
            "Verification_1" => {
               'PktCapVerificaton' => {
                  verificationtype   => "pktcap",
                  target             => "host.[1].vmknic.[1]",
                  pktcount           => "100+",
               },
            },
         },
      },
      'UDPDiscard' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "UDPDiscard",
         Version          => "2" ,
         Summary          => "This test verifies that udp traffic would be dropped when
                              ipsec spd rule is set to drop the traffic.",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecUDP",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecUDP",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPOut",
                  direction => "out",
                  protocol => "udp",
                  action => "discard",
                  sourceport => "2100",
                  destinationport => "0",
               },
            },
            "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPIn",
                  direction => "in",
                  protocol => "udp",
                  action => "discard",
                  sourceport => "2100",
                  destinationport => "0",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPIn",
                  direction => "in",
                  protocol => "udp",
                  action => "discard",
                  sourceport => "2100",
                  destinationport => "0",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPOut",
                  direction => "out",
                  protocol => "udp",
                  action => "discard",
                  sourceport => "2100",
                  destinationport => "0",
               },
            },
            "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecUDP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecUDP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
             "Traffic" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "udp",
               L3Protocol     => "IPv6",
               PortNumber     => "2100",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "10",
               ExpectedResult => "FAIL",
            },
            "Traffic" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "tcp",
               L3Protocol     => "IPv6",
               PortNumber     => "2100",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "60",
               ExpectedResult => "PASS",
            },
         },
      },
      'UDPNone' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "UDPNone",
         Version          => "2" ,
         Summary          => "This test verifies that udp traffic with ipsec
                             policies when SP for action is set to none, in this
                             case we won't do anything with the selected traffic, it
                             would be processed normally",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecUDP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecUDP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPOut",
                  direction => "out",
                  protocol => "udp",
                  action => "none",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPIn",
                  direction => "in",
                  protocol => "udp",
                  action => "none",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "udp",
                  action => "none",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecUDP",
                  spname => "ipsecUDPSPOut",
                  direction => "out",
                  protocol => "udp",
                  action => "none",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecUDP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecUDP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "tcp",
               L3Protocol     => "IPv6",
               PortNumber     => "2100",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "180",
               ExpectedResult => "PASS",
            },
         },
      },
      'ICMPIPSec' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "ICMPIPSec",
         Version          => "2" ,
         Summary          => "This test verifies the icmp6 traffic with ipsec SP and SA",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecICMP",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecICMP",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPOut",
                  direction => "out",
                  protocol => "icmp6",
                  action => "ipsec",
               },
            },
            "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPSPIn",
                  direction => "in",
                  protocol => "icmp6",
                  action => "ipsec",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPSPIn",
                  direction => "in",
                  protocol => "icmp6",
                  action => "ipsec",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPSPOut",
                  direction => "out",
                  protocol => "icmp6",
                  action => "ipsec",
               },
            },
            "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecICMP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecICMP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic"     => {
               Type            => "Traffic",
               ToolName        => "ping",
               L3Protocol      => "IPv6",
               Pingpktsize     => "100",
               TestAdapter     => "host.[1].vmknic.[1]",
               TestDuration    => "10",
               SupportAdapter  => "host.[2].vmknic.[1]",
            },
         },
      },
      'ICMPDiscard' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "ICMPDiscard",
         Version          => "2" ,
         Summary          => "This test verifies that icmp6 traffic would be dropped when
                              ipsec spd rule is set to drop the traffic.",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecICMP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecICMP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPOut",
                  direction => "out",
                  protocol => "icmp6",
                  action => "discard",
               },
            },
             "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPSPIn",
                  direction => "in",
                  protocol => "icmp6",
                  action => "discard",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPSPIn",
                  direction => "in",
                  protocol => "icmp6",
                  action => "discard",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPSPOut",
                  direction => "out",
                  protocol => "icmp6",
                  action => "discard",
               },
            },
            "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecICMP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecICMP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic"     => {
               Type            => "Traffic",
               ToolName        => "ping",
               L3Protocol      => "IPv6",
               Pingpktsize     => "100",
               TestAdapter     => "host.[1].vmknic.[1]",
               TestDuration    => "10",
               SupportAdapter  => "host.[2].vmknic.[1]",
               ExpectedResult  => "FAIL",
            },
         },
      },
      'ICMPNone' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "ICMPNone",
         Version          => "2" ,
         Summary          => "This test verifies that icmp6 traffic with ipsec
                             policies when SP for action is set to none",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecICMP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
             "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecICMP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPOut",
                  direction => "out",
                  protocol => "icmp6",
                  action => "none",
               },
            },
            "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPSPIn",
                  direction => "in",
                  protocol => "icmp6",
                  action => "none",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPSPIn",
                  direction => "in",
                  protocol => "icmp6",
                  action => "none",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecICMP",
                  spname => "ipsecICMPSPOut",
                  direction => "out",
                  protocol => "icmp6",
                  action => "none",
               },
            },
            "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecICMP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecICMP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic"     => {
               Type            => "Traffic",
               ToolName        => "ping",
               L3Protocol      => "IPv6",
               Pingpktsize     => "100",
               TestAdapter     => "host.[1].vmknic.[1]",
               TestDuration    => "10",
               SupportAdapter  => "host.[2].vmknic.[1]",
            },
         },
      },
      "TunnelMode" => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "TunnelMode",
         Version          => "2" ,
         Summary          => "This test verifies the tcp traffic with ipsec SP and SA
                              when mode is set to tunnel",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTunnel",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "tunnel",
                  source      => "any",
                  spi         => "0x4b1",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTunnel",
                  encryption => "3des-cbc",
                  encryptionkey => "0x6970763672656164796c6f676f33646573636263696e3031",
                  integrity => "hmac-sha1",
                  integritykey => "0x6970763672656164796c6f6773686131696e3031",
                  destination => "any",
                  mode        => "tunnel",
                  source      => "any",
                  spi         => "0x4b1",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTunnel",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "tcp",
                  action => "ipsec",
                  mode   => "tunnel",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTunnel",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "tcp",
                  action => "ipsec",
                  mode => "tunnel",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTunnel",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "tcp",
                  action => "ipsec",
                  mode => "tunnel",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTunnel",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "tcp",
                  action => "ipsec",
                  mode => "tunnel",
                  sourceport => "2100",
                  destinationport => "2100",
               },
            },
            "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTunnel",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTunnel",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
             "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "tcp",
               L3Protocol     => "IPv6",
               PortNumber     => "2100",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "180",
               verification  => "Verification_1",
            },
            "Verification_1" => {
               'PktCapVerificaton' => {
                  verificationtype   => "pktcap",
                  target             => "host.[1].vmknic.[1]",
                  pktcount           => "3000+",
               },
            },
         },
      },
      'AnyPortIPSec' => {
         Component        => "Networking",
         Category         => "VMKTCPIP",
         TestName         => "AnyPortIPSec",
         Version          => "2" ,
         Summary          => "This test verifies the traffic with ipsec when rules
                              are set for all ports",
         ExpectedResult   => "PASS",
         TestbedSpec      => $testbedSpec,
         WORKLOADS => {
            Sequence => [['AddSA1'],['AddSP1OutTraffic'],['AddSA2'],
                         ['AddSP1InTraffic'],['AddSP2InTraffic'],
                         ['AddSP2OutTraffic'],['Traffic1'],['Traffic2'],
                         ['Traffic3']],
            ExitSequence =>  [['RemoveSP1'],['RemoveSP2'],
                              ['RemoveSA1'],['RemoveSA2']],
            "AddSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTCP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "add",
               ipsecconfigspec => {
                  name => "ipsecTCP",
                  encryption => "aes128-cbc",
                  encryptionkey => "0x41414141414141414141414141414141",
                  integrity => "hmac-sha1",
                  integritykey => "0x4141414141414141414141414141414141414141",
                  destination => "any",
                  mode        => "transport",
                  source      => "any",
                  spi         => "0x1000",
               },
            },
            "AddSP1OutTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "any",
                  action => "ipsec",
                  sourceport => "0",
                  destinationport => "0",
               },
            },
             "AddSP1InTraffic" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "add",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "any",
                  action => "ipsec",
                  sourceport => "0",
                  destinationport => "0",
               },
            },
            "AddSP2InTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPIn",
                  direction => "in",
                  protocol => "any",
                  action => "ipsec",
                  sourceport => "0",
                  destinationport => "0",
               },
            },
            "AddSP2OutTraffic" => {
               Type => "Host",
               sp => "add",
               TestHost => "host.[2]",
               ipsecconfigspec => {
                  saname => "ipsecTCP",
                  spname => "ipsecTCPSPOut",
                  direction => "out",
                  protocol => "any",
                  action => "ipsec",
                  sourceport => "0",
                  destinationport => "0",
               },
            },
            "RemoveSA1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTCP",
               },
            },
            "RemoveSA2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sa => "remove",
               ipsecconfigspec => {
                  name => "ipsecTCP",
               },
            },
            "RemoveSP1" => {
               Type => "Host",
               TestHost => "host.[1]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "RemoveSP2" => {
               Type => "Host",
               TestHost => "host.[2]",
               sp => "remove",
               ipsecconfigspec => {
                  spname => "all",
               },
            },
            "Traffic1" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "tcp",
               L3Protocol     => "IPv6",
               SendMessageSize  => "63488",
               LocalSendSocketSize => "131072",
               RemoteSendSocketSize    => "131072",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "180",
               verification  => "Verification_1",
            },
            "Verification_1" => {
               'PktCapVerificaton' => {
                  verificationtype   => "pktcap",
                  target             => "host.[1].vmknic.[1]",
                  pktcount           => "3000+",
               },
            },
            "Traffic2" => {
               Type           => "Traffic",
               ToolName       => "netperf",
               L4Protocol     => "udp",
               L3Protocol     => "IPv6",
               TestAdapter => "host.[1].vmknic.[1]",
               SupportAdapter => "host.[2].vmknic.[1]",
               TestDuration => "180",
               verification  => "Verification_2",
            },
            "Verification_2" => {
               'PktCapVerificaton' => {
                  verificationtype   => "pktcap",
                  target             => "host.[1].vmknic.[1]",
                  pktcount           => "1000+",
               },
            },
            "Traffic3"     => {
               Type            => "Traffic",
               ToolName        => "ping",
               L3Protocol      => "IPv6",
               Pingpktsize     => "100",
               TestAdapter     => "host.[1].vmknic.[1]",
               TestDuration    => "10",
               SupportAdapter  => "host.[2].vmknic.[1]",
            },
         },
      },
   );
}


########################################################################
#
# new --
#       This is the constructor for IPSecTds
#
# Input:
#       none
#
# Results:
#       An instance/object of IPSecTds class
#
# Side effects:
#       None
#
########################################################################

sub new
{
   my ($proto) = @_;
   # Below way of getting class name is to allow new class as well as
   # $class->new.  In new class, proto itself is class, and $class->new,
   # ref($class) return the class
   my $class = ref($proto) || $proto;
   my $self = $class->SUPER::new(\%IPSec);
   return (bless($self, $class));
}

1;

